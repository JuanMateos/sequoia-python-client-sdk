{
    "name": "workflow",
    "urn": "urn:piksel:service:workflow",
    "title": "Workflow Service",
    "description": "A collection of services for creating and administering content processing workflows",
    "features": [],
    "resourcefuls": {
        "events": {
            "path": "/data",
            "stability": "experimental",
            "operations": {
                "browse": {
                    "description": "Fetches a list of events that may be filtered",
                    "actions": [
                        "workflow:events:read",
                        "workflow:events:read:browse"
                    ]
                },
                "get": {
                    "description": "Fetches one or more events using the supplied id(s)",
                    "actions": [
                        "workflow:events:read",
                        "workflow:events:read:get"
                    ]
                },
                "storeBatch": {
                    "description": "Stores one or more events, either creating or wholly replacing",
                    "actions": [
                        "workflow:events:write",
                        "workflow:events:write:store",
                        "workflow:events:write:store:batch"
                    ],
                    "limit": 100
                },
                "storeOne": {
                    "description": "Stores the supplied event with the supplied id, either creating or wholly replacing",
                    "actions": [
                        "workflow:events:write",
                        "workflow:events:write:store",
                        "workflow:events:write:store:one"
                    ]
                },
                "delete": {
                    "description": "Delete one or more events using the supplied id(s)",
                    "actions": [
                        "workflow:events:write",
                        "workflow:events:write:delete"
                    ]
                }
            },
            "pagination": {
                "pageSize": {
                    "min": 1,
                    "max": 100,
                    "default": 100
                },
                "pages": {
                    "max": 100
                }
            },
            "display": {
                "priority": 10,
                "overview": {
                    "label": "name"
                },
                "info": {
                    "primary": [
                        "ref",
                        "owner",
                        "name"
                    ],
                    "secondary": [
                        "alternativeIdentifiers",
                        "tags",
                        "custom"
                    ],
                    "history": [
                        "createdAt",
                        "createdBy",
                        "updatedAt",
                        "updatedBy",
                        "deletedAt",
                        "deletedBy",
                        "reapAt",
                        "version"
                    ]
                },
                "groups": {
                    "custom": [
                        "custom"
                    ],
                    "identity": [
                        "ref",
                        "owner",
                        "name",
                        "alternativeIdentifiers"
                    ],
                    "history": [
                        "createdAt",
                        "createdBy",
                        "updatedAt",
                        "updatedBy",
                        "deletedAt",
                        "deletedBy",
                        "reapAt",
                        "version"
                    ],
                    "tags": [
                        "tags"
                    ]
                },
                "singularName": "event",
                "pluralName": "events"
            },
            "fields": {
                "ref": {
                    "description": "The derived owner:name reference",
                    "type": "ref",
                    "readOnly": true,
                    "sort": true,
                    "example": "test:resource-name",
                    "fieldName": "ref",
                    "fieldNamePath": "ref",
                    "typeInfo": {
                        "desc": "owner:name pair",
                        "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
                        "name": "ref"
                    },
                    "filteredBy": [
                        "withRef"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "ref",
                            "fieldNamePath": "ref",
                            "description": "filter by the supplied ref",
                            "name": "withRef",
                            "and": true,
                            "or": true,
                            "valueType": "ref"
                        }
                    ]
                },
                "alternativeIdentifiers": {
                    "type": "stringMap",
                    "description": "A map of alternative identifiers for this resource",
                    "example": {
                        "tel": "0800100100",
                        "said": "something"
                    },
                    "fieldName": "alternativeIdentifiers",
                    "fieldNamePath": "alternativeIdentifiers",
                    "typeInfo": {
                        "keys": {
                            "pattern": "[a-zA-Z0-9]+"
                        },
                        "values": {
                            "pattern": "(.+)",
                            "desc": "string"
                        },
                        "desc": "key-value pairs",
                        "name": "stringMap"
                    },
                    "filteredBy": [
                        "withAlternativeIdentifiers"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "alternativeIdentifiers",
                            "fieldNamePath": "alternativeIdentifiers",
                            "description": "filter by the supplied alternative identifiers",
                            "prefix": true,
                            "name": "withAlternativeIdentifiers",
                            "and": true,
                            "or": true,
                            "valueType": "stringMap"
                        }
                    ]
                },
                "owner": {
                    "description": "The tenant owner name",
                    "type": "name",
                    "required": true,
                    "sort": true,
                    "example": "test",
                    "countable": true,
                    "fieldName": "owner",
                    "fieldNamePath": "owner",
                    "typeInfo": {
                        "desc": "name",
                        "pattern": "[a-zA-Z0-9_-]+",
                        "name": "name"
                    }
                },
                "name": {
                    "description": "The tenant specific unique name",
                    "type": "name",
                    "sort": true,
                    "example": "resource-name",
                    "fieldName": "name",
                    "fieldNamePath": "name",
                    "typeInfo": {
                        "desc": "name",
                        "pattern": "[a-zA-Z0-9_-]+",
                        "name": "name"
                    },
                    "filteredBy": [
                        "withName"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "name",
                            "fieldNamePath": "name",
                            "description": "filter by the supplied name",
                            "prefix": true,
                            "name": "withName",
                            "and": true,
                            "or": true,
                            "valueType": "name"
                        }
                    ]
                },
                "title": {
                    "description": "The title for the resource. Will be set to the value of `name` if not supplied",
                    "type": "string",
                    "sort": true,
                    "example": "resource-title",
                    "fieldName": "title",
                    "fieldNamePath": "title",
                    "typeInfo": {
                        "desc": "string",
                        "pattern": ".+",
                        "name": "string"
                    },
                    "filteredBy": [
                        "withTitle"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "title",
                            "fieldNamePath": "title",
                            "description": "filter by the supplied title",
                            "prefix": true,
                            "name": "withTitle",
                            "and": true,
                            "or": true,
                            "valueType": "string"
                        }
                    ]
                },
                "tags": {
                    "description": "tags for the resource",
                    "type": "string",
                    "array": true,
                    "example": [
                        "todo",
                        "usage:boxart"
                    ],
                    "fieldName": "tags",
                    "fieldNamePath": "tags",
                    "typeInfo": {
                        "desc": "string",
                        "pattern": ".+",
                        "name": "string"
                    },
                    "filteredBy": [
                        "withTags"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "tags",
                            "fieldNamePath": "tags",
                            "description": "filter by the supplied tags",
                            "name": "withTags",
                            "and": true,
                            "or": true,
                            "valueType": "string"
                        }
                    ]
                },
                "scores": {
                    "description": "scores for the resource",
                    "type": "scores",
                    "example": {
                        "imdb.a3431": 0.9,
                        "fuse": 2
                    },
                    "fieldName": "scores",
                    "fieldNamePath": "scores",
                    "typeInfo": {
                        "keys": {
                            "pattern": "(?:[a-zA-Z0-9]+)(?:\\.[a-zA-Z0-9]+)*"
                        },
                        "values": {
                            "desc": "number",
                            "pattern": "-?\\d+(?:\\.\\d+)?"
                        },
                        "desc": "Map of FieldNamePath:Number pairs",
                        "name": "scores"
                    },
                    "filteredBy": [
                        "withScore"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "scores",
                            "fieldNamePath": "scores",
                            "description": "filter by the supplied score",
                            "range": true,
                            "name": "withScore",
                            "and": true,
                            "or": true,
                            "valueType": "scores"
                        }
                    ]
                },
                "custom": {
                    "description": "The tenant specific custom fields.  This may be used to hold tenant specific data alongside the document, but it should not be used as a substitute for normal fields.",
                    "type": "map",
                    "max": 100,
                    "fieldName": "custom",
                    "fieldNamePath": "custom",
                    "typeInfo": {
                        "keys": {
                            "pattern": "[a-zA-Z0-9]+"
                        },
                        "values": {
                            "pattern": "(.+)",
                            "desc": "scalar value or an array of scalar values"
                        },
                        "desc": "key-value pairs"
                    }
                },
                "createdAt": {
                    "description": "The timestamp when created",
                    "type": "timestamp",
                    "readOnly": true,
                    "example": "2014-12-25T12:00:00.000Z",
                    "sort": true,
                    "excludeFromVersion": true,
                    "fieldName": "createdAt",
                    "fieldNamePath": "createdAt",
                    "filteredBy": [
                        "withCreatedAt"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "createdAt",
                            "fieldNamePath": "createdAt",
                            "description": "filter by the supplied createdAt",
                            "range": true,
                            "name": "withCreatedAt",
                            "and": true,
                            "or": true,
                            "valueType": "timestamp"
                        }
                    ]
                },
                "createdBy": {
                    "description": "The user that created",
                    "type": "ref",
                    "readOnly": true,
                    "example": "test:test-admin",
                    "sort": true,
                    "fieldName": "createdBy",
                    "fieldNamePath": "createdBy",
                    "typeInfo": {
                        "desc": "owner:name pair",
                        "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
                        "name": "ref"
                    },
                    "filteredBy": [
                        "withCreatedBy"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "createdBy",
                            "fieldNamePath": "createdBy",
                            "description": "filter by the supplied createdBy",
                            "name": "withCreatedBy",
                            "and": true,
                            "or": true,
                            "valueType": "ref"
                        }
                    ]
                },
                "updatedAt": {
                    "description": "The timestamp when last updated",
                    "type": "timestamp",
                    "readOnly": true,
                    "example": "2014-12-25T12:00:00.000Z",
                    "sort": true,
                    "excludeFromVersion": true,
                    "fieldName": "updatedAt",
                    "fieldNamePath": "updatedAt",
                    "filteredBy": [
                        "withUpdatedAt"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "updatedAt",
                            "fieldNamePath": "updatedAt",
                            "description": "filter by the supplied updatedAt",
                            "range": true,
                            "name": "withUpdatedAt",
                            "and": true,
                            "or": true,
                            "valueType": "timestamp"
                        }
                    ]
                },
                "updatedBy": {
                    "description": "The user that last updated",
                    "type": "ref",
                    "readOnly": true,
                    "example": "test:test-admin",
                    "sort": true,
                    "fieldName": "updatedBy",
                    "fieldNamePath": "updatedBy",
                    "typeInfo": {
                        "desc": "owner:name pair",
                        "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
                        "name": "ref"
                    },
                    "filteredBy": [
                        "withUpdatedBy"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "updatedBy",
                            "fieldNamePath": "updatedBy",
                            "description": "filter by the supplied updatedBy",
                            "name": "withUpdatedBy",
                            "and": true,
                            "or": true,
                            "valueType": "ref"
                        }
                    ]
                },
                "deletedAt": {
                    "description": "The timestamp when deleted (only applicable to deleted resources)",
                    "type": "timestamp",
                    "readOnly": true,
                    "example": "2014-12-25T12:00:00.000Z",
                    "sort": true,
                    "excludeFromVersion": true,
                    "fieldName": "deletedAt",
                    "fieldNamePath": "deletedAt",
                    "filteredBy": [
                        "withDeletedAt"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "deletedAt",
                            "fieldNamePath": "deletedAt",
                            "prohibited": [
                                "enduser"
                            ],
                            "description": "filter by the supplied deletedAt",
                            "range": true,
                            "name": "withDeletedAt",
                            "and": true,
                            "or": true,
                            "valueType": "timestamp"
                        }
                    ]
                },
                "deletedBy": {
                    "description": "The user that deleted (only applicable to deleted resources)",
                    "type": "ref",
                    "readOnly": true,
                    "example": "test:test-admin",
                    "sort": true,
                    "excludeFromVersion": true,
                    "fieldName": "deletedBy",
                    "fieldNamePath": "deletedBy",
                    "typeInfo": {
                        "desc": "owner:name pair",
                        "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
                        "name": "ref"
                    },
                    "filteredBy": [
                        "withDeletedBy"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "deletedBy",
                            "fieldNamePath": "deletedBy",
                            "prohibited": [
                                "enduser"
                            ],
                            "description": "filter by the supplied deletedBy",
                            "name": "withDeletedBy",
                            "and": true,
                            "or": true,
                            "valueType": "ref"
                        }
                    ]
                },
                "reapAt": {
                    "description": "The timestamp for reaping (only applicable to deleted resources)",
                    "type": "timestamp",
                    "readOnly": true,
                    "example": "2014-12-25T12:00:00.000Z",
                    "sort": true,
                    "excludeFromVersion": true,
                    "fieldName": "reapAt",
                    "fieldNamePath": "reapAt",
                    "filteredBy": [
                        "withReapAt"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "reapAt",
                            "fieldNamePath": "reapAt",
                            "prohibited": [
                                "enduser",
                                "service",
                                "admin"
                            ],
                            "description": "filter by the supplied reapAt",
                            "range": true,
                            "name": "withReapAt",
                            "and": true,
                            "or": true,
                            "valueType": "timestamp"
                        }
                    ]
                },
                "version": {
                    "description": "The version hash (computed)",
                    "type": "version",
                    "readOnly": true,
                    "example": "356b54eb90cd04566159dfb9c95a0426998a2f7b",
                    "excludeFromVersion": true,
                    "fieldName": "version",
                    "fieldNamePath": "version",
                    "typeInfo": {
                        "desc": "sha1 hex encoded hash",
                        "pattern": "[a-f0-9]{40}"
                    }
                },
                "metadata": {
                    "description": "A field that holds metadata about the resource",
                    "excludeFromVersion": true,
                    "fields": {},
                    "fieldName": "metadata",
                    "fieldNamePath": "metadata",
                    "typeInfo": {}
                },
                "workflowRef": {
                    "description": "Reference to the workflow whose execution has produced the event",
                    "type": "ref",
                    "required": true,
                    "example": "owner:workflow1",
                    "fieldName": "workflowRef",
                    "fieldNamePath": "workflowRef",
                    "typeInfo": {
                        "desc": "owner:name pair",
                        "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
                        "name": "ref"
                    },
                    "relatedBy": [
                        "workflow"
                    ],
                    "relationships": [
                        {
                            "description": "Reference to workflow resource",
                            "type": "direct",
                            "resourceType": "workflows",
                            "fieldNamePath": "workflowRef",
                            "fields": [
                                "ref"
                            ],
                            "name": "workflow",
                            "intersectable": false,
                            "batchSize": 10
                        }
                    ],
                    "filteredBy": [
                        "withWorkflowRef"
                    ],
                    "filters": [
                        {
                            "description": "filter for workflowRef",
                            "type": "with",
                            "fieldNamePath": "workflowRef",
                            "label": "workflowRef",
                            "name": "withWorkflowRef",
                            "and": true,
                            "or": true,
                            "valueType": "ref"
                        }
                    ]
                },
                "executionRef": {
                    "description": "Reference to the execution that has produced the event",
                    "type": "ref",
                    "required": true,
                    "example": "owner:execution1",
                    "fieldName": "executionRef",
                    "fieldNamePath": "executionRef",
                    "typeInfo": {
                        "desc": "owner:name pair",
                        "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
                        "name": "ref"
                    },
                    "relatedBy": [
                        "execution"
                    ],
                    "relationships": [
                        {
                            "description": "Reference to execution resource",
                            "type": "direct",
                            "resourceType": "executions",
                            "fieldNamePath": "executionRef",
                            "fields": [
                                "ref"
                            ],
                            "name": "execution",
                            "intersectable": false,
                            "batchSize": 10
                        }
                    ],
                    "filteredBy": [
                        "withExecutionRef"
                    ],
                    "filters": [
                        {
                            "description": "filter for executionRef",
                            "type": "with",
                            "fieldNamePath": "executionRef",
                            "label": "executionRef",
                            "name": "withExecutionRef",
                            "and": true,
                            "or": true,
                            "valueType": "ref"
                        }
                    ]
                },
                "category": {
                    "description": "Indicates the severity of the event; useful for alerting or generating display hints",
                    "type": "string",
                    "allowedValues": [
                        {
                            "value": "INFO",
                            "description": "Marks the event as informational",
                            "alternatives": [],
                            "label": "INFO"
                        },
                        {
                            "value": "WARNING",
                            "description": "Marks the event as a warning",
                            "alternatives": [],
                            "label": "WARNING"
                        },
                        {
                            "value": "ERROR",
                            "description": "Marks the event as an error",
                            "alternatives": [],
                            "label": "ERROR"
                        }
                    ],
                    "required": true,
                    "primary": true,
                    "example": "INFO",
                    "fieldName": "category",
                    "fieldNamePath": "category",
                    "allowedValueMappings": {
                        "INFO": "INFO",
                        "WARNING": "WARNING",
                        "ERROR": "ERROR"
                    },
                    "typeInfo": {
                        "desc": "string",
                        "pattern": ".+",
                        "name": "string"
                    },
                    "filteredBy": [
                        "withCategory"
                    ],
                    "filters": [
                        {
                            "description": "filter for category",
                            "type": "with",
                            "fieldNamePath": "category",
                            "label": "category",
                            "name": "withCategory",
                            "and": true,
                            "or": true,
                            "valueType": "string"
                        }
                    ]
                },
                "eventType": {
                    "description": "The dot qualified event name which categorises events and is used for matching notifications. For example, an event type of 'a.b' can trigger a notification matched on 'a.*'.",
                    "type": "string",
                    "primary": true,
                    "example": "execution.started",
                    "fieldName": "eventType",
                    "fieldNamePath": "eventType",
                    "typeInfo": {
                        "desc": "string",
                        "pattern": ".+",
                        "name": "string"
                    },
                    "filteredBy": [
                        "withEventType"
                    ],
                    "filters": [
                        {
                            "description": "filter for eventType",
                            "type": "with",
                            "fieldNamePath": "eventType",
                            "label": "eventType",
                            "name": "withEventType",
                            "and": true,
                            "or": true,
                            "valueType": "string"
                        }
                    ]
                },
                "messageKey": {
                    "description": "A key used in combination with a set of message variables when resolving localised display messages.",
                    "type": "fieldNamePath",
                    "example": "encoding.reading.inputs",
                    "fieldName": "messageKey",
                    "fieldNamePath": "messageKey",
                    "typeInfo": {
                        "desc": "field name path",
                        "pattern": "(?:[a-zA-Z0-9]+)(?:\\.[a-zA-Z0-9]+)*"
                    }
                },
                "messageVariables": {
                    "description": "An ordered list of key-value pairs used to interpolate the localised display message.",
                    "type": "stringMap",
                    "primary": true,
                    "example": {
                        "fileName": "file1.avi"
                    },
                    "fieldName": "messageVariables",
                    "fieldNamePath": "messageVariables",
                    "typeInfo": {
                        "keys": {
                            "pattern": "[a-zA-Z0-9]+"
                        },
                        "values": {
                            "pattern": "(.+)",
                            "desc": "string"
                        },
                        "desc": "key-value pairs",
                        "name": "stringMap"
                    }
                },
                "messageDefault": {
                    "description": "The non-localised message for the event - used when localisation is not available.",
                    "type": "string",
                    "required": true,
                    "primary": true,
                    "example": "Reading http://myasset.mp4",
                    "fieldName": "messageDefault",
                    "fieldNamePath": "messageDefault",
                    "typeInfo": {
                        "desc": "string",
                        "pattern": ".+",
                        "name": "string"
                    }
                },
                "timestamp": {
                    "description": "The instant that the event was raised within the system and used to determine the chronology of events with the workflow execution.",
                    "required": true,
                    "sort": true,
                    "type": "timestamp",
                    "primary": true,
                    "example": "2014-05-15T15:16:05.592Z",
                    "fieldName": "timestamp",
                    "fieldNamePath": "timestamp"
                }
            },
            "filters": {
                "q": {
                    "type": "q",
                    "label": "q",
                    "description": "Search for supplied text in eventType, messageKey",
                    "includes": [
                        "title",
                        "eventType",
                        "messageKey"
                    ],
                    "name": "q",
                    "valueType": "string",
                    "text": true
                },
                "withName": {
                    "type": "with",
                    "label": "name",
                    "fieldNamePath": "name",
                    "description": "filter by the supplied name",
                    "prefix": true,
                    "name": "withName",
                    "and": true,
                    "or": true,
                    "valueType": "name"
                },
                "withTitle": {
                    "type": "with",
                    "label": "title",
                    "fieldNamePath": "title",
                    "description": "filter by the supplied title",
                    "prefix": true,
                    "name": "withTitle",
                    "and": true,
                    "or": true,
                    "valueType": "string"
                },
                "withRef": {
                    "type": "with",
                    "label": "ref",
                    "fieldNamePath": "ref",
                    "description": "filter by the supplied ref",
                    "name": "withRef",
                    "and": true,
                    "or": true,
                    "valueType": "ref"
                },
                "withAlternativeIdentifiers": {
                    "type": "with",
                    "label": "alternativeIdentifiers",
                    "fieldNamePath": "alternativeIdentifiers",
                    "description": "filter by the supplied alternative identifiers",
                    "prefix": true,
                    "name": "withAlternativeIdentifiers",
                    "and": true,
                    "or": true,
                    "valueType": "stringMap"
                },
                "withTags": {
                    "type": "with",
                    "label": "tags",
                    "fieldNamePath": "tags",
                    "description": "filter by the supplied tags",
                    "name": "withTags",
                    "and": true,
                    "or": true,
                    "valueType": "string"
                },
                "withScore": {
                    "type": "with",
                    "label": "scores",
                    "fieldNamePath": "scores",
                    "description": "filter by the supplied score",
                    "range": true,
                    "name": "withScore",
                    "and": true,
                    "or": true,
                    "valueType": "scores"
                },
                "withCreatedAt": {
                    "type": "with",
                    "label": "createdAt",
                    "fieldNamePath": "createdAt",
                    "description": "filter by the supplied createdAt",
                    "range": true,
                    "name": "withCreatedAt",
                    "and": true,
                    "or": true,
                    "valueType": "timestamp"
                },
                "withCreatedBy": {
                    "type": "with",
                    "label": "createdBy",
                    "fieldNamePath": "createdBy",
                    "description": "filter by the supplied createdBy",
                    "name": "withCreatedBy",
                    "and": true,
                    "or": true,
                    "valueType": "ref"
                },
                "withUpdatedAt": {
                    "type": "with",
                    "label": "updatedAt",
                    "fieldNamePath": "updatedAt",
                    "description": "filter by the supplied updatedAt",
                    "range": true,
                    "name": "withUpdatedAt",
                    "and": true,
                    "or": true,
                    "valueType": "timestamp"
                },
                "withUpdatedBy": {
                    "type": "with",
                    "label": "updatedBy",
                    "fieldNamePath": "updatedBy",
                    "description": "filter by the supplied updatedBy",
                    "name": "withUpdatedBy",
                    "and": true,
                    "or": true,
                    "valueType": "ref"
                },
                "withDeletedAt": {
                    "type": "with",
                    "label": "deletedAt",
                    "fieldNamePath": "deletedAt",
                    "prohibited": [
                        "enduser"
                    ],
                    "description": "filter by the supplied deletedAt",
                    "range": true,
                    "name": "withDeletedAt",
                    "and": true,
                    "or": true,
                    "valueType": "timestamp"
                },
                "withDeletedBy": {
                    "type": "with",
                    "label": "deletedBy",
                    "fieldNamePath": "deletedBy",
                    "prohibited": [
                        "enduser"
                    ],
                    "description": "filter by the supplied deletedBy",
                    "name": "withDeletedBy",
                    "and": true,
                    "or": true,
                    "valueType": "ref"
                },
                "withReapAt": {
                    "type": "with",
                    "label": "reapAt",
                    "fieldNamePath": "reapAt",
                    "prohibited": [
                        "enduser",
                        "service",
                        "admin"
                    ],
                    "description": "filter by the supplied reapAt",
                    "range": true,
                    "name": "withReapAt",
                    "and": true,
                    "or": true,
                    "valueType": "timestamp"
                },
                "withWorkflowRef": {
                    "description": "filter for workflowRef",
                    "type": "with",
                    "fieldNamePath": "workflowRef",
                    "label": "workflowRef",
                    "name": "withWorkflowRef",
                    "and": true,
                    "or": true,
                    "valueType": "ref"
                },
                "withExecutionRef": {
                    "description": "filter for executionRef",
                    "type": "with",
                    "fieldNamePath": "executionRef",
                    "label": "executionRef",
                    "name": "withExecutionRef",
                    "and": true,
                    "or": true,
                    "valueType": "ref"
                },
                "withEventType": {
                    "description": "filter for eventType",
                    "type": "with",
                    "fieldNamePath": "eventType",
                    "label": "eventType",
                    "name": "withEventType",
                    "and": true,
                    "or": true,
                    "valueType": "string"
                },
                "withCategory": {
                    "description": "filter for category",
                    "type": "with",
                    "fieldNamePath": "category",
                    "label": "category",
                    "name": "withCategory",
                    "and": true,
                    "or": true,
                    "valueType": "string"
                }
            },
            "relationships": {
                "workflow": {
                    "description": "Reference to workflow resource",
                    "type": "direct",
                    "resourceType": "workflows",
                    "fieldNamePath": "workflowRef",
                    "fields": [
                        "ref"
                    ],
                    "name": "workflow",
                    "intersectable": false,
                    "batchSize": 10
                },
                "execution": {
                    "description": "Reference to execution resource",
                    "type": "direct",
                    "resourceType": "executions",
                    "fieldNamePath": "executionRef",
                    "fields": [
                        "ref"
                    ],
                    "name": "execution",
                    "intersectable": false,
                    "batchSize": 10
                }
            },
            "restrictions": [
                {
                    "type": "ownership",
                    "message": "must contain an owner for which you have permission",
                    "description": "users can only interact with resources that are owned by a tenant they have access to"
                },
                {
                    "type": "unmodifiable",
                    "message": "not allowed to modify resources created by root:root",
                    "description": "users are not allowed to modify resources that were created by root:root"
                },
                {
                    "type": "primaryKey",
                    "message": "primaryKey must be unique",
                    "description": "the primary key (ref) is derived from owner and name, allowing name to be a tenant specific unique external id"
                }
            ],
            "singularName": "event",
            "pluralName": "events",
            "serviceName": "workflow",
            "description": "Represent an event",
            "conditionalUpdates": true,
            "hyphenatedPluralName": "events",
            "retentionPeriod": "P0D",
            "typeInfo": {}
        },
        "executions": {
            "path": "/data",
            "stability": "experimental",
            "operations": {
                "browse": {
                    "description": "Fetches a list of executions that may be filtered",
                    "actions": [
                        "workflow:executions:read",
                        "workflow:executions:read:browse"
                    ]
                },
                "get": {
                    "description": "Fetches one or more executions using the supplied id(s)",
                    "actions": [
                        "workflow:executions:read",
                        "workflow:executions:read:get"
                    ]
                },
                "storeBatch": {
                    "description": "Stores one or more executions, either creating or wholly replacing",
                    "actions": [
                        "workflow:executions:write",
                        "workflow:executions:write:store",
                        "workflow:executions:write:store:batch"
                    ],
                    "limit": 100
                },
                "storeOne": {
                    "description": "Stores the supplied execution with the supplied id, either creating or wholly replacing",
                    "actions": [
                        "workflow:executions:write",
                        "workflow:executions:write:store",
                        "workflow:executions:write:store:one"
                    ]
                },
                "delete": {
                    "description": "Delete one or more executions using the supplied id(s)",
                    "actions": [
                        "workflow:executions:write",
                        "workflow:executions:write:delete"
                    ]
                }
            },
            "pagination": {
                "pageSize": {
                    "min": 1,
                    "max": 100,
                    "default": 100
                },
                "pages": {
                    "max": 100
                }
            },
            "display": {
                "priority": 10,
                "overview": {
                    "label": "name"
                },
                "info": {
                    "primary": [
                        "ref",
                        "owner",
                        "name"
                    ],
                    "secondary": [
                        "alternativeIdentifiers",
                        "tags",
                        "custom"
                    ],
                    "history": [
                        "createdAt",
                        "createdBy",
                        "updatedAt",
                        "updatedBy",
                        "deletedAt",
                        "deletedBy",
                        "reapAt",
                        "version"
                    ]
                },
                "groups": {
                    "custom": [
                        "custom"
                    ],
                    "identity": [
                        "ref",
                        "owner",
                        "name",
                        "alternativeIdentifiers"
                    ],
                    "history": [
                        "createdAt",
                        "createdBy",
                        "updatedAt",
                        "updatedBy",
                        "deletedAt",
                        "deletedBy",
                        "reapAt",
                        "version"
                    ],
                    "tags": [
                        "tags"
                    ]
                },
                "singularName": "execution",
                "pluralName": "executions"
            },
            "fields": {
                "ref": {
                    "description": "The derived owner:name reference",
                    "type": "ref",
                    "readOnly": true,
                    "sort": true,
                    "example": "test:resource-name",
                    "fieldName": "ref",
                    "fieldNamePath": "ref",
                    "typeInfo": {
                        "desc": "owner:name pair",
                        "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
                        "name": "ref"
                    },
                    "filteredBy": [
                        "withRef"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "ref",
                            "fieldNamePath": "ref",
                            "description": "filter by the supplied ref",
                            "name": "withRef",
                            "and": true,
                            "or": true,
                            "valueType": "ref"
                        }
                    ],
                    "primary": true
                },
                "alternativeIdentifiers": {
                    "type": "stringMap",
                    "description": "A map of alternative identifiers for this resource",
                    "example": {
                        "tel": "0800100100",
                        "said": "something"
                    },
                    "fieldName": "alternativeIdentifiers",
                    "fieldNamePath": "alternativeIdentifiers",
                    "typeInfo": {
                        "keys": {
                            "pattern": "[a-zA-Z0-9]+"
                        },
                        "values": {
                            "pattern": "(.+)",
                            "desc": "string"
                        },
                        "desc": "key-value pairs",
                        "name": "stringMap"
                    },
                    "filteredBy": [
                        "withAlternativeIdentifiers"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "alternativeIdentifiers",
                            "fieldNamePath": "alternativeIdentifiers",
                            "description": "filter by the supplied alternative identifiers",
                            "prefix": true,
                            "name": "withAlternativeIdentifiers",
                            "and": true,
                            "or": true,
                            "valueType": "stringMap"
                        }
                    ],
                    "primary": true
                },
                "owner": {
                    "description": "The tenant owner name",
                    "type": "name",
                    "required": true,
                    "sort": true,
                    "example": "test",
                    "countable": true,
                    "fieldName": "owner",
                    "fieldNamePath": "owner",
                    "typeInfo": {
                        "desc": "name",
                        "pattern": "[a-zA-Z0-9_-]+",
                        "name": "name"
                    },
                    "primary": true
                },
                "name": {
                    "description": "The tenant specific unique name",
                    "type": "name",
                    "sort": true,
                    "example": "resource-name",
                    "fieldName": "name",
                    "fieldNamePath": "name",
                    "typeInfo": {
                        "desc": "name",
                        "pattern": "[a-zA-Z0-9_-]+",
                        "name": "name"
                    },
                    "filteredBy": [
                        "withName"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "name",
                            "fieldNamePath": "name",
                            "description": "filter by the supplied name",
                            "prefix": true,
                            "name": "withName",
                            "and": true,
                            "or": true,
                            "valueType": "name"
                        }
                    ]
                },
                "title": {
                    "description": "The title for the resource. Will be set to the value of `name` if not supplied",
                    "type": "string",
                    "sort": true,
                    "example": "resource-title",
                    "fieldName": "title",
                    "fieldNamePath": "title",
                    "typeInfo": {
                        "desc": "string",
                        "pattern": ".+",
                        "name": "string"
                    },
                    "filteredBy": [
                        "withTitle"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "title",
                            "fieldNamePath": "title",
                            "description": "filter by the supplied title",
                            "prefix": true,
                            "name": "withTitle",
                            "and": true,
                            "or": true,
                            "valueType": "string"
                        }
                    ]
                },
                "tags": {
                    "description": "tags for the resource",
                    "type": "string",
                    "array": true,
                    "example": [
                        "todo",
                        "usage:boxart"
                    ],
                    "fieldName": "tags",
                    "fieldNamePath": "tags",
                    "typeInfo": {
                        "desc": "string",
                        "pattern": ".+",
                        "name": "string"
                    },
                    "filteredBy": [
                        "withTags"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "tags",
                            "fieldNamePath": "tags",
                            "description": "filter by the supplied tags",
                            "name": "withTags",
                            "and": true,
                            "or": true,
                            "valueType": "string"
                        }
                    ]
                },
                "scores": {
                    "description": "scores for the resource",
                    "type": "scores",
                    "example": {
                        "imdb.a3431": 0.9,
                        "fuse": 2
                    },
                    "fieldName": "scores",
                    "fieldNamePath": "scores",
                    "typeInfo": {
                        "keys": {
                            "pattern": "(?:[a-zA-Z0-9]+)(?:\\.[a-zA-Z0-9]+)*"
                        },
                        "values": {
                            "desc": "number",
                            "pattern": "-?\\d+(?:\\.\\d+)?"
                        },
                        "desc": "Map of FieldNamePath:Number pairs",
                        "name": "scores"
                    },
                    "filteredBy": [
                        "withScore"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "scores",
                            "fieldNamePath": "scores",
                            "description": "filter by the supplied score",
                            "range": true,
                            "name": "withScore",
                            "and": true,
                            "or": true,
                            "valueType": "scores"
                        }
                    ]
                },
                "custom": {
                    "description": "The tenant specific custom fields.  This may be used to hold tenant specific data alongside the document, but it should not be used as a substitute for normal fields.",
                    "type": "map",
                    "max": 100,
                    "fieldName": "custom",
                    "fieldNamePath": "custom",
                    "typeInfo": {
                        "keys": {
                            "pattern": "[a-zA-Z0-9]+"
                        },
                        "values": {
                            "pattern": "(.+)",
                            "desc": "scalar value or an array of scalar values"
                        },
                        "desc": "key-value pairs"
                    }
                },
                "createdAt": {
                    "description": "The timestamp when created",
                    "type": "timestamp",
                    "readOnly": true,
                    "example": "2014-12-25T12:00:00.000Z",
                    "sort": true,
                    "excludeFromVersion": true,
                    "fieldName": "createdAt",
                    "fieldNamePath": "createdAt",
                    "filteredBy": [
                        "withCreatedAt"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "createdAt",
                            "fieldNamePath": "createdAt",
                            "description": "filter by the supplied createdAt",
                            "range": true,
                            "name": "withCreatedAt",
                            "and": true,
                            "or": true,
                            "valueType": "timestamp"
                        }
                    ]
                },
                "createdBy": {
                    "description": "The user that created",
                    "type": "ref",
                    "readOnly": true,
                    "example": "test:test-admin",
                    "sort": true,
                    "fieldName": "createdBy",
                    "fieldNamePath": "createdBy",
                    "typeInfo": {
                        "desc": "owner:name pair",
                        "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
                        "name": "ref"
                    },
                    "filteredBy": [
                        "withCreatedBy"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "createdBy",
                            "fieldNamePath": "createdBy",
                            "description": "filter by the supplied createdBy",
                            "name": "withCreatedBy",
                            "and": true,
                            "or": true,
                            "valueType": "ref"
                        }
                    ]
                },
                "updatedAt": {
                    "description": "The timestamp when last updated",
                    "type": "timestamp",
                    "readOnly": true,
                    "example": "2014-12-25T12:00:00.000Z",
                    "sort": true,
                    "excludeFromVersion": true,
                    "fieldName": "updatedAt",
                    "fieldNamePath": "updatedAt",
                    "filteredBy": [
                        "withUpdatedAt"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "updatedAt",
                            "fieldNamePath": "updatedAt",
                            "description": "filter by the supplied updatedAt",
                            "range": true,
                            "name": "withUpdatedAt",
                            "and": true,
                            "or": true,
                            "valueType": "timestamp"
                        }
                    ]
                },
                "updatedBy": {
                    "description": "The user that last updated",
                    "type": "ref",
                    "readOnly": true,
                    "example": "test:test-admin",
                    "sort": true,
                    "fieldName": "updatedBy",
                    "fieldNamePath": "updatedBy",
                    "typeInfo": {
                        "desc": "owner:name pair",
                        "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
                        "name": "ref"
                    },
                    "filteredBy": [
                        "withUpdatedBy"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "updatedBy",
                            "fieldNamePath": "updatedBy",
                            "description": "filter by the supplied updatedBy",
                            "name": "withUpdatedBy",
                            "and": true,
                            "or": true,
                            "valueType": "ref"
                        }
                    ]
                },
                "deletedAt": {
                    "description": "The timestamp when deleted (only applicable to deleted resources)",
                    "type": "timestamp",
                    "readOnly": true,
                    "example": "2014-12-25T12:00:00.000Z",
                    "sort": true,
                    "excludeFromVersion": true,
                    "fieldName": "deletedAt",
                    "fieldNamePath": "deletedAt",
                    "filteredBy": [
                        "withDeletedAt"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "deletedAt",
                            "fieldNamePath": "deletedAt",
                            "prohibited": [
                                "enduser"
                            ],
                            "description": "filter by the supplied deletedAt",
                            "range": true,
                            "name": "withDeletedAt",
                            "and": true,
                            "or": true,
                            "valueType": "timestamp"
                        }
                    ]
                },
                "deletedBy": {
                    "description": "The user that deleted (only applicable to deleted resources)",
                    "type": "ref",
                    "readOnly": true,
                    "example": "test:test-admin",
                    "sort": true,
                    "excludeFromVersion": true,
                    "fieldName": "deletedBy",
                    "fieldNamePath": "deletedBy",
                    "typeInfo": {
                        "desc": "owner:name pair",
                        "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
                        "name": "ref"
                    },
                    "filteredBy": [
                        "withDeletedBy"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "deletedBy",
                            "fieldNamePath": "deletedBy",
                            "prohibited": [
                                "enduser"
                            ],
                            "description": "filter by the supplied deletedBy",
                            "name": "withDeletedBy",
                            "and": true,
                            "or": true,
                            "valueType": "ref"
                        }
                    ]
                },
                "reapAt": {
                    "description": "The timestamp for reaping (only applicable to deleted resources)",
                    "type": "timestamp",
                    "readOnly": true,
                    "example": "2014-12-25T12:00:00.000Z",
                    "sort": true,
                    "excludeFromVersion": true,
                    "fieldName": "reapAt",
                    "fieldNamePath": "reapAt",
                    "filteredBy": [
                        "withReapAt"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "reapAt",
                            "fieldNamePath": "reapAt",
                            "prohibited": [
                                "enduser",
                                "service",
                                "admin"
                            ],
                            "description": "filter by the supplied reapAt",
                            "range": true,
                            "name": "withReapAt",
                            "and": true,
                            "or": true,
                            "valueType": "timestamp"
                        }
                    ]
                },
                "version": {
                    "description": "The version hash (computed)",
                    "type": "version",
                    "readOnly": true,
                    "example": "356b54eb90cd04566159dfb9c95a0426998a2f7b",
                    "excludeFromVersion": true,
                    "fieldName": "version",
                    "fieldNamePath": "version",
                    "typeInfo": {
                        "desc": "sha1 hex encoded hash",
                        "pattern": "[a-f0-9]{40}"
                    }
                },
                "metadata": {
                    "description": "A field that holds metadata about the resource",
                    "excludeFromVersion": true,
                    "fields": {},
                    "fieldName": "metadata",
                    "fieldNamePath": "metadata",
                    "typeInfo": {}
                },
                "workflowRef": {
                    "description": "Reference to the executing workflow ",
                    "type": "ref",
                    "required": true,
                    "example": "owner:workflow1",
                    "fieldName": "workflowRef",
                    "fieldNamePath": "workflowRef",
                    "typeInfo": {
                        "desc": "owner:name pair",
                        "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
                        "name": "ref"
                    },
                    "relatedBy": [
                        "workflow"
                    ],
                    "relationships": [
                        {
                            "description": "Reference to workflow resource",
                            "type": "direct",
                            "resourceType": "workflows",
                            "fieldNamePath": "workflowRef",
                            "fields": [
                                "ref",
                                "owner",
                                "name",
                                "title",
                                "inputs",
                                "outputs",
                                "stages",
                                "properties",
                                "active"
                            ],
                            "name": "workflow",
                            "intersectable": false,
                            "batchSize": 10
                        }
                    ],
                    "filteredBy": [
                        "withWorkflowRef"
                    ],
                    "filters": [
                        {
                            "description": "filter for workflowRef",
                            "type": "with",
                            "fieldNamePath": "workflowRef",
                            "label": "workflowRef",
                            "name": "withWorkflowRef",
                            "and": true,
                            "or": true,
                            "valueType": "ref"
                        }
                    ]
                },
                "status": {
                    "description": "The most recent update from the platform about this workflow execution.Note that this status may not directly represent the 'ground truth' about workflow execution but is guaranteed to be eventually accurate",
                    "type": "string",
                    "allowedValues": [
                        {
                            "value": "NEW",
                            "description": "The execution has been created but it still was not analysed",
                            "alternatives": [],
                            "label": "NEW"
                        },
                        {
                            "value": "READY",
                            "description": "The execution is ready to be processed",
                            "alternatives": [],
                            "label": "READY"
                        },
                        {
                            "value": "PROCESSING",
                            "description": "The execution is in process",
                            "alternatives": [],
                            "label": "PROCESSING"
                        },
                        {
                            "value": "SUCCEEDED",
                            "description": "The execution has been completed successfully",
                            "alternatives": [],
                            "label": "SUCCEEDED"
                        },
                        {
                            "value": "KILLED",
                            "description": "The execution has been cancelled by the user and it cannot be restarted",
                            "alternatives": [],
                            "label": "KILLED"
                        },
                        {
                            "value": "QUEUED",
                            "description": "The execution has been analysed but it is waiting to start",
                            "alternatives": [],
                            "label": "QUEUED"
                        },
                        {
                            "value": "FAILED",
                            "description": "The execution couldn't be completed due to some error",
                            "alternatives": [],
                            "label": "FAILED"
                        },
                        {
                            "value": "COMPLETED_WITH_ERRORS",
                            "description": "The execution finished, but some errors happened",
                            "alternatives": [],
                            "label": "COMPLETED_WITH_ERRORS"
                        },
                        {
                            "value": "INACTIVE",
                            "description": "The execution isn't active",
                            "alternatives": [],
                            "label": "INACTIVE"
                        }
                    ],
                    "default": "NEW",
                    "example": "NEW",
                    "fieldName": "status",
                    "fieldNamePath": "status",
                    "allowedValueMappings": {
                        "NEW": "NEW",
                        "READY": "READY",
                        "PROCESSING": "PROCESSING",
                        "SUCCEEDED": "SUCCEEDED",
                        "KILLED": "KILLED",
                        "QUEUED": "QUEUED",
                        "FAILED": "FAILED",
                        "COMPLETED_WITH_ERRORS": "COMPLETED_WITH_ERRORS",
                        "INACTIVE": "INACTIVE"
                    },
                    "typeInfo": {
                        "desc": "string",
                        "pattern": ".+",
                        "name": "string"
                    },
                    "filteredBy": [
                        "withStatus"
                    ],
                    "filters": [
                        {
                            "description": "filter for status",
                            "type": "with",
                            "fieldNamePath": "status",
                            "label": "status",
                            "name": "withStatus",
                            "and": true,
                            "or": true,
                            "valueType": "string"
                        }
                    ]
                },
                "startAt": {
                    "description": "If the user wishes to add a delayed workflow execution they may set a future time after which the execution should commence. Note that the workflow is only guaranteed to commence after this time and not strictly at this time.",
                    "type": "timestamp",
                    "example": "2017-01-01T00:00:00.000Z",
                    "fieldName": "startAt",
                    "fieldNamePath": "startAt",
                    "filteredBy": [
                        "withStartAt"
                    ],
                    "filters": [
                        {
                            "description": "filter for start at",
                            "type": "with",
                            "range": true,
                            "fieldNamePath": "startAt",
                            "label": "startAt",
                            "name": "withStartAt",
                            "and": true,
                            "or": true,
                            "valueType": "timestamp"
                        }
                    ]
                },
                "startedAt": {
                    "description": "Timestamp when the execution started",
                    "type": "timestamp",
                    "example": "2014-05-15T15:16:05.592Z",
                    "fieldName": "startedAt",
                    "fieldNamePath": "startedAt"
                },
                "currentState": {
                    "description": "Current execution state including the executing stage name and the stages executing within",
                    "array": true,
                    "fields": {
                        "stage": {
                            "description": "Name of the executing stage",
                            "type": "name",
                            "required": true,
                            "example": "ingest",
                            "fieldName": "stage",
                            "fieldNamePath": "currentState.stage",
                            "typeInfo": {
                                "desc": "name",
                                "pattern": "[a-zA-Z0-9_-]+",
                                "name": "name"
                            },
                            "primary": true
                        },
                        "startedAt": {
                            "description": "The timestamp when the stage starts",
                            "type": "timestamp",
                            "required": true,
                            "example": "2014-02-15T01:03:03Z",
                            "fieldName": "startedAt",
                            "fieldNamePath": "currentState.startedAt",
                            "primary": true
                        },
                        "endedAt": {
                            "description": "The timestamp when the stage finishes",
                            "type": "timestamp",
                            "example": "2014-02-15T01:05:03Z",
                            "fieldName": "endedAt",
                            "fieldNamePath": "currentState.endedAt",
                            "primary": true
                        }
                    },
                    "fieldName": "currentState",
                    "fieldNamePath": "currentState",
                    "typeInfo": {}
                },
                "completedState": {
                    "description": "List of completed stages, including executing stage name and end timestamp",
                    "array": true,
                    "fields": {
                        "stage": {
                            "description": "Name of the executing stage",
                            "type": "name",
                            "required": true,
                            "example": "ingest",
                            "fieldName": "stage",
                            "fieldNamePath": "completedState.stage",
                            "typeInfo": {
                                "desc": "name",
                                "pattern": "[a-zA-Z0-9_-]+",
                                "name": "name"
                            },
                            "primary": true
                        },
                        "startedAt": {
                            "description": "The timestamp when the stage starts",
                            "type": "timestamp",
                            "required": true,
                            "example": "2014-02-15T01:03:03Z",
                            "fieldName": "startedAt",
                            "fieldNamePath": "completedState.startedAt",
                            "primary": true
                        },
                        "endedAt": {
                            "description": "The timestamp when the stage finishes",
                            "type": "timestamp",
                            "example": "2014-02-15T01:05:03Z",
                            "fieldName": "endedAt",
                            "fieldNamePath": "completedState.endedAt",
                            "primary": true
                        }
                    },
                    "fieldName": "completedState",
                    "fieldNamePath": "completedState",
                    "typeInfo": {}
                },
                "externalAction": {
                    "description": "Set an user action that modifies or finalizes the execution. This can only be set once.",
                    "type": "string",
                    "allowedValues": [
                        {
                            "value": "CANCEL",
                            "description": "Mark the execution to be CANCELLED",
                            "alternatives": [],
                            "label": "CANCEL"
                        }
                    ],
                    "example": "CANCEL",
                    "fieldName": "externalAction",
                    "fieldNamePath": "externalAction",
                    "allowedValueMappings": {
                        "CANCEL": "CANCEL"
                    },
                    "typeInfo": {
                        "desc": "string",
                        "pattern": ".+",
                        "name": "string"
                    },
                    "filteredBy": [
                        "withExternalAction"
                    ],
                    "filters": [
                        {
                            "description": "filter for externalAction",
                            "type": "with",
                            "fieldNamePath": "externalAction",
                            "label": "externalAction",
                            "name": "withExternalAction",
                            "and": true,
                            "or": true,
                            "valueType": "string"
                        }
                    ]
                },
                "properties": {
                    "description": "A map of properties",
                    "type": "stringMap",
                    "fieldName": "properties",
                    "fieldNamePath": "properties",
                    "typeInfo": {
                        "keys": {
                            "pattern": "[a-zA-Z0-9]+"
                        },
                        "values": {
                            "pattern": "(.+)",
                            "desc": "string"
                        },
                        "desc": "key-value pairs",
                        "name": "stringMap"
                    },
                    "filteredBy": [
                        "withProperties"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "properties",
                            "fieldNamePath": "properties",
                            "description": "filter by properties",
                            "prefix": true,
                            "name": "withProperties",
                            "and": true,
                            "or": true,
                            "valueType": "stringMap"
                        }
                    ]
                },
                "preferredZone": {
                    "description": "Environment where the execution wants to be processed preferably",
                    "type": "string",
                    "example": "use1shared",
                    "fieldName": "preferredZone",
                    "fieldNamePath": "preferredZone",
                    "typeInfo": {
                        "desc": "string",
                        "pattern": ".+",
                        "name": "string"
                    },
                    "filteredBy": [
                        "withPreferredZone"
                    ],
                    "filters": [
                        {
                            "description": "filter for preferredZone",
                            "type": "with",
                            "fieldNamePath": "preferredZone",
                            "label": "preferredZone",
                            "name": "withPreferredZone",
                            "and": true,
                            "or": true,
                            "valueType": "string"
                        }
                    ]
                },
                "deliveredAt": {
                    "description": "Time when the execution was delivered. It can be provided to ensure that this execution will be processed after any other with a previous deliveryTime.",
                    "type": "timestamp",
                    "example": "2018-06-01T09:25:00.010Z",
                    "fieldName": "deliveredAt",
                    "fieldNamePath": "deliveredAt"
                },
                "deliveryTime": {
                    "description": "Time when the execution was delivered. Returns the value of deliveredAt if set, otherwise it returns \"createdAt\"",
                    "type": "timestamp",
                    "sort": true,
                    "example": "2018-06-01T09:25:00.010Z",
                    "fieldName": "deliveryTime",
                    "fieldNamePath": "deliveryTime",
                    "readOnly": true
                },
                "scripts": {
                    "description": "Code to be executed, compressed and base-64 encoded.",
                    "type": "stringMap",
                    "example": {
                        "scriptable ingest script": "c2NyaXB0YWJsZSBpbmdlc3Qgc2NyaXB0"
                    },
                    "fieldName": "scripts",
                    "fieldNamePath": "scripts",
                    "typeInfo": {
                        "keys": {
                            "pattern": "[a-zA-Z0-9]+"
                        },
                        "values": {
                            "pattern": "(.+)",
                            "desc": "string"
                        },
                        "desc": "key-value pairs",
                        "name": "stringMap"
                    }
                }
            },
            "filters": {
                "q": {
                    "type": "q",
                    "label": "q",
                    "description": "Search for supplied text in status",
                    "includes": [
                        "title",
                        "status"
                    ],
                    "name": "q",
                    "valueType": "string",
                    "text": true
                },
                "withName": {
                    "type": "with",
                    "label": "name",
                    "fieldNamePath": "name",
                    "description": "filter by the supplied name",
                    "prefix": true,
                    "name": "withName",
                    "and": true,
                    "or": true,
                    "valueType": "name"
                },
                "withTitle": {
                    "type": "with",
                    "label": "title",
                    "fieldNamePath": "title",
                    "description": "filter by the supplied title",
                    "prefix": true,
                    "name": "withTitle",
                    "and": true,
                    "or": true,
                    "valueType": "string"
                },
                "withRef": {
                    "type": "with",
                    "label": "ref",
                    "fieldNamePath": "ref",
                    "description": "filter by the supplied ref",
                    "name": "withRef",
                    "and": true,
                    "or": true,
                    "valueType": "ref"
                },
                "withAlternativeIdentifiers": {
                    "type": "with",
                    "label": "alternativeIdentifiers",
                    "fieldNamePath": "alternativeIdentifiers",
                    "description": "filter by the supplied alternative identifiers",
                    "prefix": true,
                    "name": "withAlternativeIdentifiers",
                    "and": true,
                    "or": true,
                    "valueType": "stringMap"
                },
                "withTags": {
                    "type": "with",
                    "label": "tags",
                    "fieldNamePath": "tags",
                    "description": "filter by the supplied tags",
                    "name": "withTags",
                    "and": true,
                    "or": true,
                    "valueType": "string"
                },
                "withScore": {
                    "type": "with",
                    "label": "scores",
                    "fieldNamePath": "scores",
                    "description": "filter by the supplied score",
                    "range": true,
                    "name": "withScore",
                    "and": true,
                    "or": true,
                    "valueType": "scores"
                },
                "withCreatedAt": {
                    "type": "with",
                    "label": "createdAt",
                    "fieldNamePath": "createdAt",
                    "description": "filter by the supplied createdAt",
                    "range": true,
                    "name": "withCreatedAt",
                    "and": true,
                    "or": true,
                    "valueType": "timestamp"
                },
                "withCreatedBy": {
                    "type": "with",
                    "label": "createdBy",
                    "fieldNamePath": "createdBy",
                    "description": "filter by the supplied createdBy",
                    "name": "withCreatedBy",
                    "and": true,
                    "or": true,
                    "valueType": "ref"
                },
                "withUpdatedAt": {
                    "type": "with",
                    "label": "updatedAt",
                    "fieldNamePath": "updatedAt",
                    "description": "filter by the supplied updatedAt",
                    "range": true,
                    "name": "withUpdatedAt",
                    "and": true,
                    "or": true,
                    "valueType": "timestamp"
                },
                "withUpdatedBy": {
                    "type": "with",
                    "label": "updatedBy",
                    "fieldNamePath": "updatedBy",
                    "description": "filter by the supplied updatedBy",
                    "name": "withUpdatedBy",
                    "and": true,
                    "or": true,
                    "valueType": "ref"
                },
                "withDeletedAt": {
                    "type": "with",
                    "label": "deletedAt",
                    "fieldNamePath": "deletedAt",
                    "prohibited": [
                        "enduser"
                    ],
                    "description": "filter by the supplied deletedAt",
                    "range": true,
                    "name": "withDeletedAt",
                    "and": true,
                    "or": true,
                    "valueType": "timestamp"
                },
                "withDeletedBy": {
                    "type": "with",
                    "label": "deletedBy",
                    "fieldNamePath": "deletedBy",
                    "prohibited": [
                        "enduser"
                    ],
                    "description": "filter by the supplied deletedBy",
                    "name": "withDeletedBy",
                    "and": true,
                    "or": true,
                    "valueType": "ref"
                },
                "withReapAt": {
                    "type": "with",
                    "label": "reapAt",
                    "fieldNamePath": "reapAt",
                    "prohibited": [
                        "enduser",
                        "service",
                        "admin"
                    ],
                    "description": "filter by the supplied reapAt",
                    "range": true,
                    "name": "withReapAt",
                    "and": true,
                    "or": true,
                    "valueType": "timestamp"
                },
                "withStatus": {
                    "description": "filter for status",
                    "type": "with",
                    "fieldNamePath": "status",
                    "label": "status",
                    "name": "withStatus",
                    "and": true,
                    "or": true,
                    "valueType": "string"
                },
                "withStartAt": {
                    "description": "filter for start at",
                    "type": "with",
                    "range": true,
                    "fieldNamePath": "startAt",
                    "label": "startAt",
                    "name": "withStartAt",
                    "and": true,
                    "or": true,
                    "valueType": "timestamp"
                },
                "withExternalAction": {
                    "description": "filter for externalAction",
                    "type": "with",
                    "fieldNamePath": "externalAction",
                    "label": "externalAction",
                    "name": "withExternalAction",
                    "and": true,
                    "or": true,
                    "valueType": "string"
                },
                "withWorkflowRef": {
                    "description": "filter for workflowRef",
                    "type": "with",
                    "fieldNamePath": "workflowRef",
                    "label": "workflowRef",
                    "name": "withWorkflowRef",
                    "and": true,
                    "or": true,
                    "valueType": "ref"
                },
                "withPreferredZone": {
                    "description": "filter for preferredZone",
                    "type": "with",
                    "fieldNamePath": "preferredZone",
                    "label": "preferredZone",
                    "name": "withPreferredZone",
                    "and": true,
                    "or": true,
                    "valueType": "string"
                },
                "withProperties": {
                    "type": "with",
                    "label": "properties",
                    "fieldNamePath": "properties",
                    "description": "filter by properties",
                    "prefix": true,
                    "name": "withProperties",
                    "and": true,
                    "or": true,
                    "valueType": "stringMap"
                }
            },
            "relationships": {
                "workflow": {
                    "description": "Reference to workflow resource",
                    "type": "direct",
                    "resourceType": "workflows",
                    "fieldNamePath": "workflowRef",
                    "fields": [
                        "ref",
                        "owner",
                        "name",
                        "title",
                        "inputs",
                        "outputs",
                        "stages",
                        "properties",
                        "active"
                    ],
                    "name": "workflow",
                    "intersectable": false,
                    "batchSize": 10
                },
                "events": {
                    "description": "all events related to this execution",
                    "type": "indirect",
                    "resourceType": "events",
                    "filterName": "withExecutionRef",
                    "fields": [
                        "ref"
                    ],
                    "batchSize": 10,
                    "name": "events",
                    "intersectable": false
                }
            },
            "restrictions": [
                {
                    "type": "ownership",
                    "message": "must contain an owner for which you have permission",
                    "description": "users can only interact with resources that are owned by a tenant they have access to"
                },
                {
                    "type": "unmodifiable",
                    "message": "not allowed to modify resources created by root:root",
                    "description": "users are not allowed to modify resources that were created by root:root"
                },
                {
                    "type": "primaryKey",
                    "message": "primaryKey must be unique",
                    "description": "the primary key (ref) is derived from owner and name, allowing name to be a tenant specific unique external id"
                }
            ],
            "singularName": "execution",
            "pluralName": "executions",
            "serviceName": "workflow",
            "description": "Represent an execution",
            "conditionalUpdates": true,
            "hyphenatedPluralName": "executions",
            "retentionPeriod": "P0D",
            "typeInfo": {}
        },
        "flowCommands": {
            "path": "/data",
            "stability": "experimental",
            "operations": {
                "browse": {
                    "description": "Fetches a list of flow commands that may be filtered",
                    "actions": [
                        "workflow:flow-commands:read",
                        "workflow:flow-commands:read:browse"
                    ]
                },
                "get": {
                    "description": "Fetches one or more flow commands using the supplied id(s)",
                    "actions": [
                        "workflow:flow-commands:read",
                        "workflow:flow-commands:read:get"
                    ]
                },
                "storeBatch": {
                    "description": "Stores one or more flow commands, either creating or wholly replacing",
                    "actions": [
                        "workflow:flow-commands:write",
                        "workflow:flow-commands:write:store",
                        "workflow:flow-commands:write:store:batch"
                    ],
                    "limit": 100
                },
                "storeOne": {
                    "description": "Stores the supplied flow command with the supplied id, either creating or wholly replacing",
                    "actions": [
                        "workflow:flow-commands:write",
                        "workflow:flow-commands:write:store",
                        "workflow:flow-commands:write:store:one"
                    ]
                },
                "delete": {
                    "description": "Delete one or more flow commands using the supplied id(s)",
                    "actions": [
                        "workflow:flow-commands:write",
                        "workflow:flow-commands:write:delete"
                    ]
                }
            },
            "pagination": {
                "pageSize": {
                    "min": 1,
                    "max": 100,
                    "default": 100
                },
                "pages": {
                    "max": 100
                }
            },
            "display": {
                "priority": 10,
                "overview": {
                    "label": "name"
                },
                "info": {
                    "primary": [
                        "ref",
                        "owner",
                        "name"
                    ],
                    "secondary": [
                        "alternativeIdentifiers",
                        "tags",
                        "custom"
                    ],
                    "history": [
                        "createdAt",
                        "createdBy",
                        "updatedAt",
                        "updatedBy",
                        "deletedAt",
                        "deletedBy",
                        "reapAt",
                        "version"
                    ]
                },
                "groups": {
                    "custom": [
                        "custom"
                    ],
                    "identity": [
                        "ref",
                        "owner",
                        "name",
                        "alternativeIdentifiers"
                    ],
                    "history": [
                        "createdAt",
                        "createdBy",
                        "updatedAt",
                        "updatedBy",
                        "deletedAt",
                        "deletedBy",
                        "reapAt",
                        "version"
                    ],
                    "tags": [
                        "tags"
                    ]
                },
                "singularName": "flow command",
                "pluralName": "flow commands"
            },
            "fields": {
                "ref": {
                    "description": "The derived owner:name reference",
                    "type": "ref",
                    "readOnly": true,
                    "sort": true,
                    "example": "test:resource-name",
                    "fieldName": "ref",
                    "fieldNamePath": "ref",
                    "typeInfo": {
                        "desc": "owner:name pair",
                        "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
                        "name": "ref"
                    },
                    "filteredBy": [
                        "withRef"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "ref",
                            "fieldNamePath": "ref",
                            "description": "filter by the supplied ref",
                            "name": "withRef",
                            "and": true,
                            "or": true,
                            "valueType": "ref"
                        }
                    ],
                    "primary": true
                },
                "alternativeIdentifiers": {
                    "type": "stringMap",
                    "description": "A map of alternative identifiers for this resource",
                    "example": {
                        "tel": "0800100100",
                        "said": "something"
                    },
                    "fieldName": "alternativeIdentifiers",
                    "fieldNamePath": "alternativeIdentifiers",
                    "typeInfo": {
                        "keys": {
                            "pattern": "[a-zA-Z0-9]+"
                        },
                        "values": {
                            "pattern": "(.+)",
                            "desc": "string"
                        },
                        "desc": "key-value pairs",
                        "name": "stringMap"
                    },
                    "filteredBy": [
                        "withAlternativeIdentifiers"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "alternativeIdentifiers",
                            "fieldNamePath": "alternativeIdentifiers",
                            "description": "filter by the supplied alternative identifiers",
                            "prefix": true,
                            "name": "withAlternativeIdentifiers",
                            "and": true,
                            "or": true,
                            "valueType": "stringMap"
                        }
                    ],
                    "primary": true
                },
                "owner": {
                    "description": "The tenant owner name",
                    "type": "name",
                    "required": true,
                    "sort": true,
                    "example": "test",
                    "countable": true,
                    "fieldName": "owner",
                    "fieldNamePath": "owner",
                    "typeInfo": {
                        "desc": "name",
                        "pattern": "[a-zA-Z0-9_-]+",
                        "name": "name"
                    },
                    "primary": true
                },
                "name": {
                    "description": "The tenant specific unique name",
                    "type": "name",
                    "sort": true,
                    "example": "resource-name",
                    "fieldName": "name",
                    "fieldNamePath": "name",
                    "typeInfo": {
                        "desc": "name",
                        "pattern": "[a-zA-Z0-9_-]+",
                        "name": "name"
                    },
                    "filteredBy": [
                        "withName"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "name",
                            "fieldNamePath": "name",
                            "description": "filter by the supplied name",
                            "prefix": true,
                            "name": "withName",
                            "and": true,
                            "or": true,
                            "valueType": "name"
                        }
                    ]
                },
                "title": {
                    "description": "The title for the resource. Will be set to the value of `name` if not supplied",
                    "type": "string",
                    "sort": true,
                    "example": "resource-title",
                    "fieldName": "title",
                    "fieldNamePath": "title",
                    "typeInfo": {
                        "desc": "string",
                        "pattern": ".+",
                        "name": "string"
                    },
                    "filteredBy": [
                        "withTitle"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "title",
                            "fieldNamePath": "title",
                            "description": "filter by the supplied title",
                            "prefix": true,
                            "name": "withTitle",
                            "and": true,
                            "or": true,
                            "valueType": "string"
                        }
                    ]
                },
                "tags": {
                    "description": "tags for the resource",
                    "type": "string",
                    "array": true,
                    "example": [
                        "todo",
                        "usage:boxart"
                    ],
                    "fieldName": "tags",
                    "fieldNamePath": "tags",
                    "typeInfo": {
                        "desc": "string",
                        "pattern": ".+",
                        "name": "string"
                    },
                    "filteredBy": [
                        "withTags"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "tags",
                            "fieldNamePath": "tags",
                            "description": "filter by the supplied tags",
                            "name": "withTags",
                            "and": true,
                            "or": true,
                            "valueType": "string"
                        }
                    ]
                },
                "scores": {
                    "description": "scores for the resource",
                    "type": "scores",
                    "example": {
                        "imdb.a3431": 0.9,
                        "fuse": 2
                    },
                    "fieldName": "scores",
                    "fieldNamePath": "scores",
                    "typeInfo": {
                        "keys": {
                            "pattern": "(?:[a-zA-Z0-9]+)(?:\\.[a-zA-Z0-9]+)*"
                        },
                        "values": {
                            "desc": "number",
                            "pattern": "-?\\d+(?:\\.\\d+)?"
                        },
                        "desc": "Map of FieldNamePath:Number pairs",
                        "name": "scores"
                    },
                    "filteredBy": [
                        "withScore"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "scores",
                            "fieldNamePath": "scores",
                            "description": "filter by the supplied score",
                            "range": true,
                            "name": "withScore",
                            "and": true,
                            "or": true,
                            "valueType": "scores"
                        }
                    ]
                },
                "custom": {
                    "description": "The tenant specific custom fields.  This may be used to hold tenant specific data alongside the document, but it should not be used as a substitute for normal fields.",
                    "type": "map",
                    "max": 100,
                    "fieldName": "custom",
                    "fieldNamePath": "custom",
                    "typeInfo": {
                        "keys": {
                            "pattern": "[a-zA-Z0-9]+"
                        },
                        "values": {
                            "pattern": "(.+)",
                            "desc": "scalar value or an array of scalar values"
                        },
                        "desc": "key-value pairs"
                    }
                },
                "createdAt": {
                    "description": "The timestamp when created",
                    "type": "timestamp",
                    "readOnly": true,
                    "example": "2014-12-25T12:00:00.000Z",
                    "sort": true,
                    "excludeFromVersion": true,
                    "fieldName": "createdAt",
                    "fieldNamePath": "createdAt",
                    "filteredBy": [
                        "withCreatedAt"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "createdAt",
                            "fieldNamePath": "createdAt",
                            "description": "filter by the supplied createdAt",
                            "range": true,
                            "name": "withCreatedAt",
                            "and": true,
                            "or": true,
                            "valueType": "timestamp"
                        }
                    ]
                },
                "createdBy": {
                    "description": "The user that created",
                    "type": "ref",
                    "readOnly": true,
                    "example": "test:test-admin",
                    "sort": true,
                    "fieldName": "createdBy",
                    "fieldNamePath": "createdBy",
                    "typeInfo": {
                        "desc": "owner:name pair",
                        "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
                        "name": "ref"
                    },
                    "filteredBy": [
                        "withCreatedBy"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "createdBy",
                            "fieldNamePath": "createdBy",
                            "description": "filter by the supplied createdBy",
                            "name": "withCreatedBy",
                            "and": true,
                            "or": true,
                            "valueType": "ref"
                        }
                    ]
                },
                "updatedAt": {
                    "description": "The timestamp when last updated",
                    "type": "timestamp",
                    "readOnly": true,
                    "example": "2014-12-25T12:00:00.000Z",
                    "sort": true,
                    "excludeFromVersion": true,
                    "fieldName": "updatedAt",
                    "fieldNamePath": "updatedAt",
                    "filteredBy": [
                        "withUpdatedAt"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "updatedAt",
                            "fieldNamePath": "updatedAt",
                            "description": "filter by the supplied updatedAt",
                            "range": true,
                            "name": "withUpdatedAt",
                            "and": true,
                            "or": true,
                            "valueType": "timestamp"
                        }
                    ]
                },
                "updatedBy": {
                    "description": "The user that last updated",
                    "type": "ref",
                    "readOnly": true,
                    "example": "test:test-admin",
                    "sort": true,
                    "fieldName": "updatedBy",
                    "fieldNamePath": "updatedBy",
                    "typeInfo": {
                        "desc": "owner:name pair",
                        "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
                        "name": "ref"
                    },
                    "filteredBy": [
                        "withUpdatedBy"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "updatedBy",
                            "fieldNamePath": "updatedBy",
                            "description": "filter by the supplied updatedBy",
                            "name": "withUpdatedBy",
                            "and": true,
                            "or": true,
                            "valueType": "ref"
                        }
                    ]
                },
                "deletedAt": {
                    "description": "The timestamp when deleted (only applicable to deleted resources)",
                    "type": "timestamp",
                    "readOnly": true,
                    "example": "2014-12-25T12:00:00.000Z",
                    "sort": true,
                    "excludeFromVersion": true,
                    "fieldName": "deletedAt",
                    "fieldNamePath": "deletedAt",
                    "filteredBy": [
                        "withDeletedAt"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "deletedAt",
                            "fieldNamePath": "deletedAt",
                            "prohibited": [
                                "enduser"
                            ],
                            "description": "filter by the supplied deletedAt",
                            "range": true,
                            "name": "withDeletedAt",
                            "and": true,
                            "or": true,
                            "valueType": "timestamp"
                        }
                    ]
                },
                "deletedBy": {
                    "description": "The user that deleted (only applicable to deleted resources)",
                    "type": "ref",
                    "readOnly": true,
                    "example": "test:test-admin",
                    "sort": true,
                    "excludeFromVersion": true,
                    "fieldName": "deletedBy",
                    "fieldNamePath": "deletedBy",
                    "typeInfo": {
                        "desc": "owner:name pair",
                        "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
                        "name": "ref"
                    },
                    "filteredBy": [
                        "withDeletedBy"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "deletedBy",
                            "fieldNamePath": "deletedBy",
                            "prohibited": [
                                "enduser"
                            ],
                            "description": "filter by the supplied deletedBy",
                            "name": "withDeletedBy",
                            "and": true,
                            "or": true,
                            "valueType": "ref"
                        }
                    ]
                },
                "reapAt": {
                    "description": "The timestamp for reaping (only applicable to deleted resources)",
                    "type": "timestamp",
                    "readOnly": true,
                    "example": "2014-12-25T12:00:00.000Z",
                    "sort": true,
                    "excludeFromVersion": true,
                    "fieldName": "reapAt",
                    "fieldNamePath": "reapAt",
                    "filteredBy": [
                        "withReapAt"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "reapAt",
                            "fieldNamePath": "reapAt",
                            "prohibited": [
                                "enduser",
                                "service",
                                "admin"
                            ],
                            "description": "filter by the supplied reapAt",
                            "range": true,
                            "name": "withReapAt",
                            "and": true,
                            "or": true,
                            "valueType": "timestamp"
                        }
                    ]
                },
                "version": {
                    "description": "The version hash (computed)",
                    "type": "version",
                    "readOnly": true,
                    "example": "356b54eb90cd04566159dfb9c95a0426998a2f7b",
                    "excludeFromVersion": true,
                    "fieldName": "version",
                    "fieldNamePath": "version",
                    "typeInfo": {
                        "desc": "sha1 hex encoded hash",
                        "pattern": "[a-f0-9]{40}"
                    }
                },
                "metadata": {
                    "description": "A field that holds metadata about the resource",
                    "excludeFromVersion": true,
                    "fields": {},
                    "fieldName": "metadata",
                    "fieldNamePath": "metadata",
                    "typeInfo": {}
                },
                "instanceRef": {
                    "description": "Reference to the Flow Instance from which this Flow Command was created.",
                    "type": "ref",
                    "sort": true,
                    "required": true,
                    "example": "owner:instance1",
                    "fieldName": "instanceRef",
                    "fieldNamePath": "instanceRef",
                    "typeInfo": {
                        "desc": "owner:name pair",
                        "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
                        "name": "ref"
                    },
                    "relatedBy": [
                        "flowInstance"
                    ],
                    "relationships": [
                        {
                            "description": "flow instance related to this command",
                            "type": "direct",
                            "resourceType": "flowInstances",
                            "fieldNamePath": "instanceRef",
                            "fields": [
                                "ref",
                                "name",
                                "flowRef",
                                "resourcefulContext",
                                "alternativeIdentifiers"
                            ],
                            "name": "flowInstance",
                            "intersectable": false,
                            "batchSize": 10
                        }
                    ],
                    "filteredBy": [
                        "withInstanceRef"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "fieldNamePath": "instanceRef",
                            "description": "filter by de supplied instance ref",
                            "label": "instanceRef",
                            "name": "withInstanceRef",
                            "and": true,
                            "or": true,
                            "valueType": "ref"
                        }
                    ]
                },
                "action": {
                    "description": "Action of the command",
                    "type": "string",
                    "required": true,
                    "allowedValues": [
                        {
                            "value": "RESTART",
                            "description": "Tags the current instance execution to be restarted.",
                            "alternatives": [],
                            "label": "RESTART"
                        },
                        {
                            "value": "CANCEL",
                            "description": "The current instance execution is tagged to be killed and the instance is canceled.",
                            "alternatives": [],
                            "label": "CANCEL"
                        }
                    ],
                    "example": "CANCEL",
                    "fieldName": "action",
                    "fieldNamePath": "action",
                    "allowedValueMappings": {
                        "RESTART": "RESTART",
                        "CANCEL": "CANCEL"
                    },
                    "typeInfo": {
                        "desc": "string",
                        "pattern": ".+",
                        "name": "string"
                    }
                },
                "parameters": {
                    "description": "Parameters for the Operation to be executed.",
                    "type": "stringMap",
                    "example": {
                        "force": "true"
                    },
                    "fieldName": "parameters",
                    "fieldNamePath": "parameters",
                    "typeInfo": {
                        "keys": {
                            "pattern": "[a-zA-Z0-9]+"
                        },
                        "values": {
                            "pattern": "(.+)",
                            "desc": "string"
                        },
                        "desc": "key-value pairs",
                        "name": "stringMap"
                    }
                }
            },
            "filters": {
                "q": {
                    "type": "q",
                    "label": "q",
                    "description": "filter by the supplied text",
                    "includes": [
                        "title"
                    ],
                    "name": "q",
                    "valueType": "string",
                    "text": true
                },
                "withName": {
                    "type": "with",
                    "label": "name",
                    "fieldNamePath": "name",
                    "description": "filter by the supplied name",
                    "prefix": true,
                    "name": "withName",
                    "and": true,
                    "or": true,
                    "valueType": "name"
                },
                "withTitle": {
                    "type": "with",
                    "label": "title",
                    "fieldNamePath": "title",
                    "description": "filter by the supplied title",
                    "prefix": true,
                    "name": "withTitle",
                    "and": true,
                    "or": true,
                    "valueType": "string"
                },
                "withRef": {
                    "type": "with",
                    "label": "ref",
                    "fieldNamePath": "ref",
                    "description": "filter by the supplied ref",
                    "name": "withRef",
                    "and": true,
                    "or": true,
                    "valueType": "ref"
                },
                "withAlternativeIdentifiers": {
                    "type": "with",
                    "label": "alternativeIdentifiers",
                    "fieldNamePath": "alternativeIdentifiers",
                    "description": "filter by the supplied alternative identifiers",
                    "prefix": true,
                    "name": "withAlternativeIdentifiers",
                    "and": true,
                    "or": true,
                    "valueType": "stringMap"
                },
                "withTags": {
                    "type": "with",
                    "label": "tags",
                    "fieldNamePath": "tags",
                    "description": "filter by the supplied tags",
                    "name": "withTags",
                    "and": true,
                    "or": true,
                    "valueType": "string"
                },
                "withScore": {
                    "type": "with",
                    "label": "scores",
                    "fieldNamePath": "scores",
                    "description": "filter by the supplied score",
                    "range": true,
                    "name": "withScore",
                    "and": true,
                    "or": true,
                    "valueType": "scores"
                },
                "withCreatedAt": {
                    "type": "with",
                    "label": "createdAt",
                    "fieldNamePath": "createdAt",
                    "description": "filter by the supplied createdAt",
                    "range": true,
                    "name": "withCreatedAt",
                    "and": true,
                    "or": true,
                    "valueType": "timestamp"
                },
                "withCreatedBy": {
                    "type": "with",
                    "label": "createdBy",
                    "fieldNamePath": "createdBy",
                    "description": "filter by the supplied createdBy",
                    "name": "withCreatedBy",
                    "and": true,
                    "or": true,
                    "valueType": "ref"
                },
                "withUpdatedAt": {
                    "type": "with",
                    "label": "updatedAt",
                    "fieldNamePath": "updatedAt",
                    "description": "filter by the supplied updatedAt",
                    "range": true,
                    "name": "withUpdatedAt",
                    "and": true,
                    "or": true,
                    "valueType": "timestamp"
                },
                "withUpdatedBy": {
                    "type": "with",
                    "label": "updatedBy",
                    "fieldNamePath": "updatedBy",
                    "description": "filter by the supplied updatedBy",
                    "name": "withUpdatedBy",
                    "and": true,
                    "or": true,
                    "valueType": "ref"
                },
                "withDeletedAt": {
                    "type": "with",
                    "label": "deletedAt",
                    "fieldNamePath": "deletedAt",
                    "prohibited": [
                        "enduser"
                    ],
                    "description": "filter by the supplied deletedAt",
                    "range": true,
                    "name": "withDeletedAt",
                    "and": true,
                    "or": true,
                    "valueType": "timestamp"
                },
                "withDeletedBy": {
                    "type": "with",
                    "label": "deletedBy",
                    "fieldNamePath": "deletedBy",
                    "prohibited": [
                        "enduser"
                    ],
                    "description": "filter by the supplied deletedBy",
                    "name": "withDeletedBy",
                    "and": true,
                    "or": true,
                    "valueType": "ref"
                },
                "withReapAt": {
                    "type": "with",
                    "label": "reapAt",
                    "fieldNamePath": "reapAt",
                    "prohibited": [
                        "enduser",
                        "service",
                        "admin"
                    ],
                    "description": "filter by the supplied reapAt",
                    "range": true,
                    "name": "withReapAt",
                    "and": true,
                    "or": true,
                    "valueType": "timestamp"
                },
                "withInstanceRef": {
                    "type": "with",
                    "fieldNamePath": "instanceRef",
                    "description": "filter by de supplied instance ref",
                    "label": "instanceRef",
                    "name": "withInstanceRef",
                    "and": true,
                    "or": true,
                    "valueType": "ref"
                }
            },
            "relationships": {
                "flowInstance": {
                    "description": "flow instance related to this command",
                    "type": "direct",
                    "resourceType": "flowInstances",
                    "fieldNamePath": "instanceRef",
                    "fields": [
                        "ref",
                        "name",
                        "flowRef",
                        "resourcefulContext",
                        "alternativeIdentifiers"
                    ],
                    "name": "flowInstance",
                    "intersectable": false,
                    "batchSize": 10
                }
            },
            "restrictions": [
                {
                    "type": "ownership",
                    "message": "must contain an owner for which you have permission",
                    "description": "users can only interact with resources that are owned by a tenant they have access to"
                },
                {
                    "type": "unmodifiable",
                    "message": "not allowed to modify resources created by root:root",
                    "description": "users are not allowed to modify resources that were created by root:root"
                },
                {
                    "type": "primaryKey",
                    "message": "primaryKey must be unique",
                    "description": "the primary key (ref) is derived from owner and name, allowing name to be a tenant specific unique external id"
                }
            ],
            "singularName": "flowCommand",
            "pluralName": "flowCommands",
            "serviceName": "workflow",
            "description": "Allows to perform an action by the user to alter the normal lifecycle in the Aurora Task statemachine.",
            "conditionalUpdates": true,
            "hyphenatedPluralName": "flow-commands",
            "retentionPeriod": "P0D",
            "typeInfo": {}
        },
        "flowExecutionReports": {
            "path": "/data",
            "stability": "experimental",
            "operations": {
                "browse": {
                    "description": "Fetches a list of flow execution reports that may be filtered",
                    "actions": [
                        "workflow:flow-execution-reports:read",
                        "workflow:flow-execution-reports:read:browse"
                    ]
                },
                "get": {
                    "description": "Fetches one or more flow execution reports using the supplied id(s)",
                    "actions": [
                        "workflow:flow-execution-reports:read",
                        "workflow:flow-execution-reports:read:get"
                    ]
                },
                "storeBatch": {
                    "description": "Stores one or more flow execution reports, either creating or wholly replacing",
                    "actions": [
                        "workflow:flow-execution-reports:write",
                        "workflow:flow-execution-reports:write:store",
                        "workflow:flow-execution-reports:write:store:batch"
                    ],
                    "limit": 100
                },
                "storeOne": {
                    "description": "Stores the supplied flow execution report with the supplied id, either creating or wholly replacing",
                    "actions": [
                        "workflow:flow-execution-reports:write",
                        "workflow:flow-execution-reports:write:store",
                        "workflow:flow-execution-reports:write:store:one"
                    ]
                },
                "delete": {
                    "description": "Delete one or more flow execution reports using the supplied id(s)",
                    "actions": [
                        "workflow:flow-execution-reports:write",
                        "workflow:flow-execution-reports:write:delete"
                    ]
                }
            },
            "pagination": {
                "pageSize": {
                    "min": 1,
                    "max": 100,
                    "default": 100
                },
                "pages": {
                    "max": 100
                }
            },
            "display": {
                "priority": 10,
                "overview": {
                    "label": "name"
                },
                "info": {
                    "primary": [
                        "ref",
                        "owner",
                        "name"
                    ],
                    "secondary": [
                        "alternativeIdentifiers",
                        "tags",
                        "custom"
                    ],
                    "history": [
                        "createdAt",
                        "createdBy",
                        "updatedAt",
                        "updatedBy",
                        "deletedAt",
                        "deletedBy",
                        "reapAt",
                        "version"
                    ]
                },
                "groups": {
                    "custom": [
                        "custom"
                    ],
                    "identity": [
                        "ref",
                        "owner",
                        "name",
                        "alternativeIdentifiers"
                    ],
                    "history": [
                        "createdAt",
                        "createdBy",
                        "updatedAt",
                        "updatedBy",
                        "deletedAt",
                        "deletedBy",
                        "reapAt",
                        "version"
                    ],
                    "tags": [
                        "tags"
                    ]
                },
                "singularName": "flow execution report",
                "pluralName": "flow execution reports"
            },
            "fields": {
                "ref": {
                    "description": "The derived owner:name reference",
                    "type": "ref",
                    "readOnly": true,
                    "sort": true,
                    "example": "test:resource-name",
                    "fieldName": "ref",
                    "fieldNamePath": "ref",
                    "typeInfo": {
                        "desc": "owner:name pair",
                        "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
                        "name": "ref"
                    },
                    "filteredBy": [
                        "withRef"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "ref",
                            "fieldNamePath": "ref",
                            "description": "filter by the supplied ref",
                            "name": "withRef",
                            "and": true,
                            "or": true,
                            "valueType": "ref"
                        }
                    ]
                },
                "alternativeIdentifiers": {
                    "type": "stringMap",
                    "description": "A map of alternative identifiers for this resource",
                    "example": {
                        "tel": "0800100100",
                        "said": "something"
                    },
                    "fieldName": "alternativeIdentifiers",
                    "fieldNamePath": "alternativeIdentifiers",
                    "typeInfo": {
                        "keys": {
                            "pattern": "[a-zA-Z0-9]+"
                        },
                        "values": {
                            "pattern": "(.+)",
                            "desc": "string"
                        },
                        "desc": "key-value pairs",
                        "name": "stringMap"
                    },
                    "filteredBy": [
                        "withAlternativeIdentifiers"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "alternativeIdentifiers",
                            "fieldNamePath": "alternativeIdentifiers",
                            "description": "filter by the supplied alternative identifiers",
                            "prefix": true,
                            "name": "withAlternativeIdentifiers",
                            "and": true,
                            "or": true,
                            "valueType": "stringMap"
                        }
                    ]
                },
                "owner": {
                    "description": "The tenant owner name",
                    "type": "name",
                    "required": true,
                    "sort": true,
                    "example": "test",
                    "countable": true,
                    "fieldName": "owner",
                    "fieldNamePath": "owner",
                    "typeInfo": {
                        "desc": "name",
                        "pattern": "[a-zA-Z0-9_-]+",
                        "name": "name"
                    }
                },
                "name": {
                    "description": "The tenant specific unique name",
                    "type": "name",
                    "sort": true,
                    "example": "resource-name",
                    "fieldName": "name",
                    "fieldNamePath": "name",
                    "typeInfo": {
                        "desc": "name",
                        "pattern": "[a-zA-Z0-9_-]+",
                        "name": "name"
                    },
                    "filteredBy": [
                        "withName"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "name",
                            "fieldNamePath": "name",
                            "description": "filter by the supplied name",
                            "prefix": true,
                            "name": "withName",
                            "and": true,
                            "or": true,
                            "valueType": "name"
                        }
                    ]
                },
                "title": {
                    "description": "The title for the resource. Will be set to the value of `name` if not supplied",
                    "type": "string",
                    "sort": true,
                    "example": "resource-title",
                    "fieldName": "title",
                    "fieldNamePath": "title",
                    "typeInfo": {
                        "desc": "string",
                        "pattern": ".+",
                        "name": "string"
                    },
                    "filteredBy": [
                        "withTitle"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "title",
                            "fieldNamePath": "title",
                            "description": "filter by the supplied title",
                            "prefix": true,
                            "name": "withTitle",
                            "and": true,
                            "or": true,
                            "valueType": "string"
                        }
                    ]
                },
                "tags": {
                    "description": "tags for the resource",
                    "type": "string",
                    "array": true,
                    "example": [
                        "todo",
                        "usage:boxart"
                    ],
                    "fieldName": "tags",
                    "fieldNamePath": "tags",
                    "typeInfo": {
                        "desc": "string",
                        "pattern": ".+",
                        "name": "string"
                    },
                    "filteredBy": [
                        "withTags"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "tags",
                            "fieldNamePath": "tags",
                            "description": "filter by the supplied tags",
                            "name": "withTags",
                            "and": true,
                            "or": true,
                            "valueType": "string"
                        }
                    ]
                },
                "scores": {
                    "description": "scores for the resource",
                    "type": "scores",
                    "example": {
                        "imdb.a3431": 0.9,
                        "fuse": 2
                    },
                    "fieldName": "scores",
                    "fieldNamePath": "scores",
                    "typeInfo": {
                        "keys": {
                            "pattern": "(?:[a-zA-Z0-9]+)(?:\\.[a-zA-Z0-9]+)*"
                        },
                        "values": {
                            "desc": "number",
                            "pattern": "-?\\d+(?:\\.\\d+)?"
                        },
                        "desc": "Map of FieldNamePath:Number pairs",
                        "name": "scores"
                    },
                    "filteredBy": [
                        "withScore"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "scores",
                            "fieldNamePath": "scores",
                            "description": "filter by the supplied score",
                            "range": true,
                            "name": "withScore",
                            "and": true,
                            "or": true,
                            "valueType": "scores"
                        }
                    ]
                },
                "custom": {
                    "description": "The tenant specific custom fields.  This may be used to hold tenant specific data alongside the document, but it should not be used as a substitute for normal fields.",
                    "type": "map",
                    "max": 100,
                    "fieldName": "custom",
                    "fieldNamePath": "custom",
                    "typeInfo": {
                        "keys": {
                            "pattern": "[a-zA-Z0-9]+"
                        },
                        "values": {
                            "pattern": "(.+)",
                            "desc": "scalar value or an array of scalar values"
                        },
                        "desc": "key-value pairs"
                    }
                },
                "createdAt": {
                    "description": "The timestamp when created",
                    "type": "timestamp",
                    "readOnly": true,
                    "example": "2014-12-25T12:00:00.000Z",
                    "sort": true,
                    "excludeFromVersion": true,
                    "fieldName": "createdAt",
                    "fieldNamePath": "createdAt",
                    "filteredBy": [
                        "withCreatedAt"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "createdAt",
                            "fieldNamePath": "createdAt",
                            "description": "filter by the supplied createdAt",
                            "range": true,
                            "name": "withCreatedAt",
                            "and": true,
                            "or": true,
                            "valueType": "timestamp"
                        }
                    ]
                },
                "createdBy": {
                    "description": "The user that created",
                    "type": "ref",
                    "readOnly": true,
                    "example": "test:test-admin",
                    "sort": true,
                    "fieldName": "createdBy",
                    "fieldNamePath": "createdBy",
                    "typeInfo": {
                        "desc": "owner:name pair",
                        "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
                        "name": "ref"
                    },
                    "filteredBy": [
                        "withCreatedBy"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "createdBy",
                            "fieldNamePath": "createdBy",
                            "description": "filter by the supplied createdBy",
                            "name": "withCreatedBy",
                            "and": true,
                            "or": true,
                            "valueType": "ref"
                        }
                    ]
                },
                "updatedAt": {
                    "description": "The timestamp when last updated",
                    "type": "timestamp",
                    "readOnly": true,
                    "example": "2014-12-25T12:00:00.000Z",
                    "sort": true,
                    "excludeFromVersion": true,
                    "fieldName": "updatedAt",
                    "fieldNamePath": "updatedAt",
                    "filteredBy": [
                        "withUpdatedAt"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "updatedAt",
                            "fieldNamePath": "updatedAt",
                            "description": "filter by the supplied updatedAt",
                            "range": true,
                            "name": "withUpdatedAt",
                            "and": true,
                            "or": true,
                            "valueType": "timestamp"
                        }
                    ]
                },
                "updatedBy": {
                    "description": "The user that last updated",
                    "type": "ref",
                    "readOnly": true,
                    "example": "test:test-admin",
                    "sort": true,
                    "fieldName": "updatedBy",
                    "fieldNamePath": "updatedBy",
                    "typeInfo": {
                        "desc": "owner:name pair",
                        "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
                        "name": "ref"
                    },
                    "filteredBy": [
                        "withUpdatedBy"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "updatedBy",
                            "fieldNamePath": "updatedBy",
                            "description": "filter by the supplied updatedBy",
                            "name": "withUpdatedBy",
                            "and": true,
                            "or": true,
                            "valueType": "ref"
                        }
                    ]
                },
                "deletedAt": {
                    "description": "The timestamp when deleted (only applicable to deleted resources)",
                    "type": "timestamp",
                    "readOnly": true,
                    "example": "2014-12-25T12:00:00.000Z",
                    "sort": true,
                    "excludeFromVersion": true,
                    "fieldName": "deletedAt",
                    "fieldNamePath": "deletedAt",
                    "filteredBy": [
                        "withDeletedAt"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "deletedAt",
                            "fieldNamePath": "deletedAt",
                            "prohibited": [
                                "enduser"
                            ],
                            "description": "filter by the supplied deletedAt",
                            "range": true,
                            "name": "withDeletedAt",
                            "and": true,
                            "or": true,
                            "valueType": "timestamp"
                        }
                    ]
                },
                "deletedBy": {
                    "description": "The user that deleted (only applicable to deleted resources)",
                    "type": "ref",
                    "readOnly": true,
                    "example": "test:test-admin",
                    "sort": true,
                    "excludeFromVersion": true,
                    "fieldName": "deletedBy",
                    "fieldNamePath": "deletedBy",
                    "typeInfo": {
                        "desc": "owner:name pair",
                        "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
                        "name": "ref"
                    },
                    "filteredBy": [
                        "withDeletedBy"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "deletedBy",
                            "fieldNamePath": "deletedBy",
                            "prohibited": [
                                "enduser"
                            ],
                            "description": "filter by the supplied deletedBy",
                            "name": "withDeletedBy",
                            "and": true,
                            "or": true,
                            "valueType": "ref"
                        }
                    ]
                },
                "reapAt": {
                    "description": "The timestamp for reaping (only applicable to deleted resources)",
                    "type": "timestamp",
                    "readOnly": true,
                    "example": "2014-12-25T12:00:00.000Z",
                    "sort": true,
                    "excludeFromVersion": true,
                    "fieldName": "reapAt",
                    "fieldNamePath": "reapAt",
                    "filteredBy": [
                        "withReapAt"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "reapAt",
                            "fieldNamePath": "reapAt",
                            "prohibited": [
                                "enduser",
                                "service",
                                "admin"
                            ],
                            "description": "filter by the supplied reapAt",
                            "range": true,
                            "name": "withReapAt",
                            "and": true,
                            "or": true,
                            "valueType": "timestamp"
                        }
                    ]
                },
                "version": {
                    "description": "The version hash (computed)",
                    "type": "version",
                    "readOnly": true,
                    "example": "356b54eb90cd04566159dfb9c95a0426998a2f7b",
                    "excludeFromVersion": true,
                    "fieldName": "version",
                    "fieldNamePath": "version",
                    "typeInfo": {
                        "desc": "sha1 hex encoded hash",
                        "pattern": "[a-f0-9]{40}"
                    }
                },
                "metadata": {
                    "description": "A field that holds metadata about the resource",
                    "excludeFromVersion": true,
                    "fields": {},
                    "fieldName": "metadata",
                    "fieldNamePath": "metadata",
                    "typeInfo": {}
                },
                "flowExecutionRef": {
                    "description": "Reference to the execution",
                    "type": "ref",
                    "required": true,
                    "sort": true,
                    "primary": true,
                    "example": "owner:flow-execution1",
                    "fieldName": "flowExecutionRef",
                    "fieldNamePath": "flowExecutionRef",
                    "typeInfo": {
                        "desc": "owner:name pair",
                        "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
                        "name": "ref"
                    },
                    "relatedBy": [
                        "flowExecution"
                    ],
                    "relationships": [
                        {
                            "description": "Reference to flowExecution resource",
                            "type": "direct",
                            "resourceType": "flowExecutions",
                            "fieldNamePath": "flowExecutionRef",
                            "fields": [
                                "ref",
                                "name",
                                "alternativeIdentifiers"
                            ],
                            "name": "flowExecution",
                            "intersectable": false,
                            "batchSize": 10
                        }
                    ],
                    "filteredBy": [
                        "withFlowExecutionRef"
                    ],
                    "filters": [
                        {
                            "description": "filter for flowExecutionRef",
                            "type": "with",
                            "fieldNamePath": "flowExecutionRef",
                            "label": "flowExecutionRef",
                            "prefix": true,
                            "name": "withFlowExecutionRef",
                            "and": true,
                            "or": true,
                            "valueType": "ref"
                        }
                    ]
                },
                "operations": {
                    "description": "Final report of the operations",
                    "array": true,
                    "primary": true,
                    "fields": {
                        "key": {
                            "description": "Operation key",
                            "type": "string",
                            "required": true,
                            "primary": true,
                            "example": "flow.file.s3.download",
                            "fieldName": "key",
                            "fieldNamePath": "operations.key",
                            "typeInfo": {
                                "desc": "string",
                                "pattern": ".+",
                                "name": "string"
                            }
                        },
                        "name": {
                            "description": "Operation name",
                            "type": "string",
                            "required": true,
                            "primary": true,
                            "example": "s3_download",
                            "fieldName": "name",
                            "fieldNamePath": "operations.name",
                            "typeInfo": {
                                "desc": "string",
                                "pattern": ".+",
                                "name": "string"
                            }
                        },
                        "progress": {
                            "description": "Operation progress when the execution finished",
                            "type": "percentage",
                            "primary": true,
                            "example": "20",
                            "fieldName": "progress",
                            "fieldNamePath": "operations.progress",
                            "typeInfo": {
                                "desc": "percentage",
                                "pattern": "(?:[0-9](?:\\.[0-9]+)?|100(?:\\.0)?|[0-9][0-9](?:\\.[0-9]+)?)"
                            }
                        },
                        "startedAt": {
                            "description": "Timestamp in ISO 8601 UTC format when the operation started",
                            "type": "timestamp",
                            "primary": true,
                            "example": "2017-01-01T00:00:00.000Z",
                            "fieldName": "startedAt",
                            "fieldNamePath": "operations.startedAt"
                        },
                        "finishedAt": {
                            "description": "Timestamp in ISO 8601 UTC format when the operation finished",
                            "type": "timestamp",
                            "primary": true,
                            "example": "2017-01-01T00:00:00.000Z",
                            "fieldName": "finishedAt",
                            "fieldNamePath": "operations.finishedAt"
                        },
                        "events": {
                            "description": "System occurrences that reports useful information to end users or system administrators",
                            "array": true,
                            "fields": {
                                "severity": {
                                    "description": "Define the type of event based on the specific condition that triggered it, whether action is required, and how urgently action is needed",
                                    "type": "string",
                                    "required": true,
                                    "allowedValues": [
                                        {
                                            "value": "INFO",
                                            "description": "Informational event that provides some useful details about the internal process",
                                            "alternatives": [],
                                            "label": "INFO"
                                        },
                                        {
                                            "value": "DEBUG",
                                            "description": "Relevant information for developers and system administrators",
                                            "alternatives": [],
                                            "label": "DEBUG"
                                        },
                                        {
                                            "value": "WARNING",
                                            "description": "Important information is reported and the process continues",
                                            "alternatives": [],
                                            "label": "WARNING"
                                        },
                                        {
                                            "value": "ERROR",
                                            "description": "The operation indicated in the error message has failed",
                                            "alternatives": [],
                                            "label": "ERROR"
                                        }
                                    ],
                                    "example": "INFO",
                                    "fieldName": "severity",
                                    "fieldNamePath": "operations.events.severity",
                                    "allowedValueMappings": {
                                        "INFO": "INFO",
                                        "DEBUG": "DEBUG",
                                        "WARNING": "WARNING",
                                        "ERROR": "ERROR"
                                    },
                                    "typeInfo": {
                                        "desc": "string",
                                        "pattern": ".+",
                                        "name": "string"
                                    },
                                    "primary": true
                                },
                                "message": {
                                    "description": "Textual description of the event",
                                    "type": "string",
                                    "required": true,
                                    "example": "Event message",
                                    "fieldName": "message",
                                    "fieldNamePath": "operations.events.message",
                                    "typeInfo": {
                                        "desc": "string",
                                        "pattern": ".+",
                                        "name": "string"
                                    },
                                    "primary": true
                                },
                                "timestamp": {
                                    "description": "Timestamp in ISO 8601 UTC format when the event occurred",
                                    "type": "timestamp",
                                    "required": true,
                                    "example": "2017-01-01T00:00:00.000Z",
                                    "fieldName": "timestamp",
                                    "fieldNamePath": "operations.events.timestamp",
                                    "primary": true
                                }
                            },
                            "fieldName": "events",
                            "fieldNamePath": "operations.events",
                            "typeInfo": {}
                        },
                        "inputs": {
                            "description": "List of input bundles that were used in the execution as input",
                            "array": true,
                            "fields": {
                                "name": {
                                    "description": "Input bundle name",
                                    "type": "string",
                                    "required": true,
                                    "example": "input_bundle",
                                    "fieldName": "name",
                                    "fieldNamePath": "operations.inputs.name",
                                    "typeInfo": {
                                        "desc": "string",
                                        "pattern": ".+",
                                        "name": "string"
                                    },
                                    "primary": true
                                },
                                "processedRows": {
                                    "description": "Number of rows in the bundle that have been processed",
                                    "type": "nonNegativeInteger",
                                    "example": 12093,
                                    "fieldName": "processedRows",
                                    "fieldNamePath": "operations.inputs.processedRows",
                                    "typeInfo": {
                                        "desc": "non-negative integer",
                                        "pattern": "\\d+"
                                    },
                                    "primary": true
                                },
                                "processedBytes": {
                                    "description": "Number of bytes used by the bundle that have been processed",
                                    "type": "nonNegativeInteger",
                                    "example": 23789054,
                                    "fieldName": "processedBytes",
                                    "fieldNamePath": "operations.inputs.processedBytes",
                                    "typeInfo": {
                                        "desc": "non-negative integer",
                                        "pattern": "\\d+"
                                    },
                                    "primary": true
                                },
                                "totalRows": {
                                    "description": "Total number of rows in the bundle",
                                    "type": "nonNegativeInteger",
                                    "example": 12093,
                                    "fieldName": "totalRows",
                                    "fieldNamePath": "operations.inputs.totalRows",
                                    "typeInfo": {
                                        "desc": "non-negative integer",
                                        "pattern": "\\d+"
                                    }
                                },
                                "totalBytes": {
                                    "description": "Total number of bytes used by the bundle",
                                    "type": "nonNegativeInteger",
                                    "example": 23789054,
                                    "fieldName": "totalBytes",
                                    "fieldNamePath": "operations.inputs.totalBytes",
                                    "typeInfo": {
                                        "desc": "non-negative integer",
                                        "pattern": "\\d+"
                                    }
                                }
                            },
                            "fieldName": "inputs",
                            "fieldNamePath": "operations.inputs",
                            "typeInfo": {}
                        },
                        "outputs": {
                            "description": "List of output bundles that were generated by the execution",
                            "array": true,
                            "fields": {
                                "name": {
                                    "description": "Output bundle name",
                                    "type": "string",
                                    "required": true,
                                    "example": "output_bundle",
                                    "fieldName": "name",
                                    "fieldNamePath": "operations.outputs.name",
                                    "typeInfo": {
                                        "desc": "string",
                                        "pattern": ".+",
                                        "name": "string"
                                    },
                                    "primary": true
                                },
                                "processedRows": {
                                    "description": "Number of rows in the bundle that have been processed",
                                    "type": "nonNegativeInteger",
                                    "example": 12093,
                                    "fieldName": "processedRows",
                                    "fieldNamePath": "operations.outputs.processedRows",
                                    "typeInfo": {
                                        "desc": "non-negative integer",
                                        "pattern": "\\d+"
                                    },
                                    "primary": true
                                },
                                "processedBytes": {
                                    "description": "Number of bytes used by the bundle that have been processed",
                                    "type": "nonNegativeInteger",
                                    "example": 23789054,
                                    "fieldName": "processedBytes",
                                    "fieldNamePath": "operations.outputs.processedBytes",
                                    "typeInfo": {
                                        "desc": "non-negative integer",
                                        "pattern": "\\d+"
                                    },
                                    "primary": true
                                },
                                "totalRows": {
                                    "description": "Total number of rows in the bundle",
                                    "type": "nonNegativeInteger",
                                    "example": 12093,
                                    "fieldName": "totalRows",
                                    "fieldNamePath": "operations.outputs.totalRows",
                                    "typeInfo": {
                                        "desc": "non-negative integer",
                                        "pattern": "\\d+"
                                    }
                                },
                                "totalBytes": {
                                    "description": "Total number of bytes used by the bundle",
                                    "type": "nonNegativeInteger",
                                    "example": 23789054,
                                    "fieldName": "totalBytes",
                                    "fieldNamePath": "operations.outputs.totalBytes",
                                    "typeInfo": {
                                        "desc": "non-negative integer",
                                        "pattern": "\\d+"
                                    }
                                }
                            },
                            "fieldName": "outputs",
                            "fieldNamePath": "operations.outputs",
                            "typeInfo": {}
                        },
                        "errors": {
                            "description": "List of error bundles generated by the execution",
                            "array": true,
                            "fields": {
                                "name": {
                                    "description": "Error bundle name",
                                    "type": "string",
                                    "required": true,
                                    "example": "error_bundle",
                                    "fieldName": "name",
                                    "fieldNamePath": "operations.errors.name",
                                    "typeInfo": {
                                        "desc": "string",
                                        "pattern": ".+",
                                        "name": "string"
                                    },
                                    "primary": true
                                },
                                "processedRows": {
                                    "description": "Number of rows in the bundle that have been processed",
                                    "type": "nonNegativeInteger",
                                    "example": 12093,
                                    "fieldName": "processedRows",
                                    "fieldNamePath": "operations.errors.processedRows",
                                    "typeInfo": {
                                        "desc": "non-negative integer",
                                        "pattern": "\\d+"
                                    },
                                    "primary": true
                                },
                                "processedBytes": {
                                    "description": "Number of bytes used by the bundle that have been processed",
                                    "type": "nonNegativeInteger",
                                    "example": 23789054,
                                    "fieldName": "processedBytes",
                                    "fieldNamePath": "operations.errors.processedBytes",
                                    "typeInfo": {
                                        "desc": "non-negative integer",
                                        "pattern": "\\d+"
                                    },
                                    "primary": true
                                },
                                "totalRows": {
                                    "description": "Total number of rows in the bundle",
                                    "type": "nonNegativeInteger",
                                    "example": 12093,
                                    "fieldName": "totalRows",
                                    "fieldNamePath": "operations.errors.totalRows",
                                    "typeInfo": {
                                        "desc": "non-negative integer",
                                        "pattern": "\\d+"
                                    }
                                },
                                "totalBytes": {
                                    "description": "Total number of bytes used by the bundle",
                                    "type": "nonNegativeInteger",
                                    "example": 23789054,
                                    "fieldName": "totalBytes",
                                    "fieldNamePath": "operations.errors.totalBytes",
                                    "typeInfo": {
                                        "desc": "non-negative integer",
                                        "pattern": "\\d+"
                                    }
                                }
                            },
                            "fieldName": "errors",
                            "fieldNamePath": "operations.errors",
                            "typeInfo": {}
                        }
                    },
                    "fieldName": "operations",
                    "fieldNamePath": "operations",
                    "typeInfo": {}
                }
            },
            "filters": {
                "q": {
                    "type": "q",
                    "label": "q",
                    "description": "filter by the supplied text",
                    "includes": [
                        "title"
                    ],
                    "name": "q",
                    "valueType": "string",
                    "text": true
                },
                "withName": {
                    "type": "with",
                    "label": "name",
                    "fieldNamePath": "name",
                    "description": "filter by the supplied name",
                    "prefix": true,
                    "name": "withName",
                    "and": true,
                    "or": true,
                    "valueType": "name"
                },
                "withTitle": {
                    "type": "with",
                    "label": "title",
                    "fieldNamePath": "title",
                    "description": "filter by the supplied title",
                    "prefix": true,
                    "name": "withTitle",
                    "and": true,
                    "or": true,
                    "valueType": "string"
                },
                "withRef": {
                    "type": "with",
                    "label": "ref",
                    "fieldNamePath": "ref",
                    "description": "filter by the supplied ref",
                    "name": "withRef",
                    "and": true,
                    "or": true,
                    "valueType": "ref"
                },
                "withAlternativeIdentifiers": {
                    "type": "with",
                    "label": "alternativeIdentifiers",
                    "fieldNamePath": "alternativeIdentifiers",
                    "description": "filter by the supplied alternative identifiers",
                    "prefix": true,
                    "name": "withAlternativeIdentifiers",
                    "and": true,
                    "or": true,
                    "valueType": "stringMap"
                },
                "withTags": {
                    "type": "with",
                    "label": "tags",
                    "fieldNamePath": "tags",
                    "description": "filter by the supplied tags",
                    "name": "withTags",
                    "and": true,
                    "or": true,
                    "valueType": "string"
                },
                "withScore": {
                    "type": "with",
                    "label": "scores",
                    "fieldNamePath": "scores",
                    "description": "filter by the supplied score",
                    "range": true,
                    "name": "withScore",
                    "and": true,
                    "or": true,
                    "valueType": "scores"
                },
                "withCreatedAt": {
                    "type": "with",
                    "label": "createdAt",
                    "fieldNamePath": "createdAt",
                    "description": "filter by the supplied createdAt",
                    "range": true,
                    "name": "withCreatedAt",
                    "and": true,
                    "or": true,
                    "valueType": "timestamp"
                },
                "withCreatedBy": {
                    "type": "with",
                    "label": "createdBy",
                    "fieldNamePath": "createdBy",
                    "description": "filter by the supplied createdBy",
                    "name": "withCreatedBy",
                    "and": true,
                    "or": true,
                    "valueType": "ref"
                },
                "withUpdatedAt": {
                    "type": "with",
                    "label": "updatedAt",
                    "fieldNamePath": "updatedAt",
                    "description": "filter by the supplied updatedAt",
                    "range": true,
                    "name": "withUpdatedAt",
                    "and": true,
                    "or": true,
                    "valueType": "timestamp"
                },
                "withUpdatedBy": {
                    "type": "with",
                    "label": "updatedBy",
                    "fieldNamePath": "updatedBy",
                    "description": "filter by the supplied updatedBy",
                    "name": "withUpdatedBy",
                    "and": true,
                    "or": true,
                    "valueType": "ref"
                },
                "withDeletedAt": {
                    "type": "with",
                    "label": "deletedAt",
                    "fieldNamePath": "deletedAt",
                    "prohibited": [
                        "enduser"
                    ],
                    "description": "filter by the supplied deletedAt",
                    "range": true,
                    "name": "withDeletedAt",
                    "and": true,
                    "or": true,
                    "valueType": "timestamp"
                },
                "withDeletedBy": {
                    "type": "with",
                    "label": "deletedBy",
                    "fieldNamePath": "deletedBy",
                    "prohibited": [
                        "enduser"
                    ],
                    "description": "filter by the supplied deletedBy",
                    "name": "withDeletedBy",
                    "and": true,
                    "or": true,
                    "valueType": "ref"
                },
                "withReapAt": {
                    "type": "with",
                    "label": "reapAt",
                    "fieldNamePath": "reapAt",
                    "prohibited": [
                        "enduser",
                        "service",
                        "admin"
                    ],
                    "description": "filter by the supplied reapAt",
                    "range": true,
                    "name": "withReapAt",
                    "and": true,
                    "or": true,
                    "valueType": "timestamp"
                },
                "withFlowExecutionRef": {
                    "description": "filter for flowExecutionRef",
                    "type": "with",
                    "fieldNamePath": "flowExecutionRef",
                    "label": "flowExecutionRef",
                    "prefix": true,
                    "name": "withFlowExecutionRef",
                    "and": true,
                    "or": true,
                    "valueType": "ref"
                }
            },
            "relationships": {
                "flowExecution": {
                    "description": "Reference to flowExecution resource",
                    "type": "direct",
                    "resourceType": "flowExecutions",
                    "fieldNamePath": "flowExecutionRef",
                    "fields": [
                        "ref",
                        "name",
                        "alternativeIdentifiers"
                    ],
                    "name": "flowExecution",
                    "intersectable": false,
                    "batchSize": 10
                }
            },
            "restrictions": [
                {
                    "type": "ownership",
                    "message": "must contain an owner for which you have permission",
                    "description": "users can only interact with resources that are owned by a tenant they have access to"
                },
                {
                    "type": "unmodifiable",
                    "message": "not allowed to modify resources created by root:root",
                    "description": "users are not allowed to modify resources that were created by root:root"
                },
                {
                    "type": "primaryKey",
                    "message": "primaryKey must be unique",
                    "description": "the primary key (ref) is derived from owner and name, allowing name to be a tenant specific unique external id"
                }
            ],
            "singularName": "flowExecutionReport",
            "pluralName": "flowExecutionReports",
            "serviceName": "workflow",
            "description": "Hold the final report with the progress for each operation of the flowExecution",
            "conditionalUpdates": true,
            "hyphenatedPluralName": "flow-execution-reports",
            "retentionPeriod": "P0D",
            "typeInfo": {}
        },
        "flowExecutionTransitions": {
            "path": "/data",
            "stability": "experimental",
            "operations": {
                "browse": {
                    "description": "Fetches a list of flow execution transitions that may be filtered",
                    "actions": [
                        "workflow:flow-execution-transitions:read",
                        "workflow:flow-execution-transitions:read:browse"
                    ]
                },
                "get": {
                    "description": "Fetches one or more flow execution transitions using the supplied id(s)",
                    "actions": [
                        "workflow:flow-execution-transitions:read",
                        "workflow:flow-execution-transitions:read:get"
                    ]
                },
                "storeBatch": {
                    "description": "Stores one or more flow execution transitions, either creating or wholly replacing",
                    "actions": [
                        "workflow:flow-execution-transitions:write",
                        "workflow:flow-execution-transitions:write:store",
                        "workflow:flow-execution-transitions:write:store:batch"
                    ],
                    "limit": 100
                },
                "storeOne": {
                    "description": "Stores the supplied flow execution transition with the supplied id, either creating or wholly replacing",
                    "actions": [
                        "workflow:flow-execution-transitions:write",
                        "workflow:flow-execution-transitions:write:store",
                        "workflow:flow-execution-transitions:write:store:one"
                    ]
                },
                "delete": {
                    "description": "Delete one or more flow execution transitions using the supplied id(s)",
                    "actions": [
                        "workflow:flow-execution-transitions:write",
                        "workflow:flow-execution-transitions:write:delete"
                    ]
                }
            },
            "pagination": {
                "pageSize": {
                    "min": 1,
                    "max": 100,
                    "default": 100
                },
                "pages": {
                    "max": 100
                }
            },
            "display": {
                "priority": 10,
                "overview": {
                    "label": "name"
                },
                "info": {
                    "primary": [
                        "ref",
                        "owner",
                        "name"
                    ],
                    "secondary": [
                        "alternativeIdentifiers",
                        "tags",
                        "custom"
                    ],
                    "history": [
                        "createdAt",
                        "createdBy",
                        "updatedAt",
                        "updatedBy",
                        "deletedAt",
                        "deletedBy",
                        "reapAt",
                        "version"
                    ]
                },
                "groups": {
                    "custom": [
                        "custom"
                    ],
                    "identity": [
                        "ref",
                        "owner",
                        "name",
                        "alternativeIdentifiers"
                    ],
                    "history": [
                        "createdAt",
                        "createdBy",
                        "updatedAt",
                        "updatedBy",
                        "deletedAt",
                        "deletedBy",
                        "reapAt",
                        "version"
                    ],
                    "tags": [
                        "tags"
                    ]
                },
                "singularName": "flow execution transition",
                "pluralName": "flow execution transitions"
            },
            "fields": {
                "ref": {
                    "description": "The derived owner:name reference",
                    "type": "ref",
                    "readOnly": true,
                    "sort": true,
                    "example": "test:resource-name",
                    "fieldName": "ref",
                    "fieldNamePath": "ref",
                    "typeInfo": {
                        "desc": "owner:name pair",
                        "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
                        "name": "ref"
                    },
                    "filteredBy": [
                        "withRef"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "ref",
                            "fieldNamePath": "ref",
                            "description": "filter by the supplied ref",
                            "name": "withRef",
                            "and": true,
                            "or": true,
                            "valueType": "ref"
                        }
                    ]
                },
                "alternativeIdentifiers": {
                    "type": "stringMap",
                    "description": "A map of alternative identifiers for this resource",
                    "example": {
                        "tel": "0800100100",
                        "said": "something"
                    },
                    "fieldName": "alternativeIdentifiers",
                    "fieldNamePath": "alternativeIdentifiers",
                    "typeInfo": {
                        "keys": {
                            "pattern": "[a-zA-Z0-9]+"
                        },
                        "values": {
                            "pattern": "(.+)",
                            "desc": "string"
                        },
                        "desc": "key-value pairs",
                        "name": "stringMap"
                    },
                    "filteredBy": [
                        "withAlternativeIdentifiers"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "alternativeIdentifiers",
                            "fieldNamePath": "alternativeIdentifiers",
                            "description": "filter by the supplied alternative identifiers",
                            "prefix": true,
                            "name": "withAlternativeIdentifiers",
                            "and": true,
                            "or": true,
                            "valueType": "stringMap"
                        }
                    ]
                },
                "owner": {
                    "description": "The tenant owner name",
                    "type": "name",
                    "required": true,
                    "sort": true,
                    "example": "test",
                    "countable": true,
                    "fieldName": "owner",
                    "fieldNamePath": "owner",
                    "typeInfo": {
                        "desc": "name",
                        "pattern": "[a-zA-Z0-9_-]+",
                        "name": "name"
                    }
                },
                "name": {
                    "description": "The tenant specific unique name",
                    "type": "name",
                    "sort": true,
                    "example": "resource-name",
                    "fieldName": "name",
                    "fieldNamePath": "name",
                    "typeInfo": {
                        "desc": "name",
                        "pattern": "[a-zA-Z0-9_-]+",
                        "name": "name"
                    },
                    "filteredBy": [
                        "withName"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "name",
                            "fieldNamePath": "name",
                            "description": "filter by the supplied name",
                            "prefix": true,
                            "name": "withName",
                            "and": true,
                            "or": true,
                            "valueType": "name"
                        }
                    ]
                },
                "title": {
                    "description": "The title for the resource. Will be set to the value of `name` if not supplied",
                    "type": "string",
                    "sort": true,
                    "example": "resource-title",
                    "fieldName": "title",
                    "fieldNamePath": "title",
                    "typeInfo": {
                        "desc": "string",
                        "pattern": ".+",
                        "name": "string"
                    },
                    "filteredBy": [
                        "withTitle"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "title",
                            "fieldNamePath": "title",
                            "description": "filter by the supplied title",
                            "prefix": true,
                            "name": "withTitle",
                            "and": true,
                            "or": true,
                            "valueType": "string"
                        }
                    ]
                },
                "tags": {
                    "description": "tags for the resource",
                    "type": "string",
                    "array": true,
                    "example": [
                        "todo",
                        "usage:boxart"
                    ],
                    "fieldName": "tags",
                    "fieldNamePath": "tags",
                    "typeInfo": {
                        "desc": "string",
                        "pattern": ".+",
                        "name": "string"
                    },
                    "filteredBy": [
                        "withTags"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "tags",
                            "fieldNamePath": "tags",
                            "description": "filter by the supplied tags",
                            "name": "withTags",
                            "and": true,
                            "or": true,
                            "valueType": "string"
                        }
                    ]
                },
                "scores": {
                    "description": "scores for the resource",
                    "type": "scores",
                    "example": {
                        "imdb.a3431": 0.9,
                        "fuse": 2
                    },
                    "fieldName": "scores",
                    "fieldNamePath": "scores",
                    "typeInfo": {
                        "keys": {
                            "pattern": "(?:[a-zA-Z0-9]+)(?:\\.[a-zA-Z0-9]+)*"
                        },
                        "values": {
                            "desc": "number",
                            "pattern": "-?\\d+(?:\\.\\d+)?"
                        },
                        "desc": "Map of FieldNamePath:Number pairs",
                        "name": "scores"
                    },
                    "filteredBy": [
                        "withScore"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "scores",
                            "fieldNamePath": "scores",
                            "description": "filter by the supplied score",
                            "range": true,
                            "name": "withScore",
                            "and": true,
                            "or": true,
                            "valueType": "scores"
                        }
                    ]
                },
                "custom": {
                    "description": "The tenant specific custom fields.  This may be used to hold tenant specific data alongside the document, but it should not be used as a substitute for normal fields.",
                    "type": "map",
                    "max": 100,
                    "fieldName": "custom",
                    "fieldNamePath": "custom",
                    "typeInfo": {
                        "keys": {
                            "pattern": "[a-zA-Z0-9]+"
                        },
                        "values": {
                            "pattern": "(.+)",
                            "desc": "scalar value or an array of scalar values"
                        },
                        "desc": "key-value pairs"
                    }
                },
                "createdAt": {
                    "description": "The timestamp when created",
                    "type": "timestamp",
                    "readOnly": true,
                    "example": "2014-12-25T12:00:00.000Z",
                    "sort": true,
                    "excludeFromVersion": true,
                    "fieldName": "createdAt",
                    "fieldNamePath": "createdAt",
                    "filteredBy": [
                        "withCreatedAt"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "createdAt",
                            "fieldNamePath": "createdAt",
                            "description": "filter by the supplied createdAt",
                            "range": true,
                            "name": "withCreatedAt",
                            "and": true,
                            "or": true,
                            "valueType": "timestamp"
                        }
                    ]
                },
                "createdBy": {
                    "description": "The user that created",
                    "type": "ref",
                    "readOnly": true,
                    "example": "test:test-admin",
                    "sort": true,
                    "fieldName": "createdBy",
                    "fieldNamePath": "createdBy",
                    "typeInfo": {
                        "desc": "owner:name pair",
                        "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
                        "name": "ref"
                    },
                    "filteredBy": [
                        "withCreatedBy"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "createdBy",
                            "fieldNamePath": "createdBy",
                            "description": "filter by the supplied createdBy",
                            "name": "withCreatedBy",
                            "and": true,
                            "or": true,
                            "valueType": "ref"
                        }
                    ]
                },
                "updatedAt": {
                    "description": "The timestamp when last updated",
                    "type": "timestamp",
                    "readOnly": true,
                    "example": "2014-12-25T12:00:00.000Z",
                    "sort": true,
                    "excludeFromVersion": true,
                    "fieldName": "updatedAt",
                    "fieldNamePath": "updatedAt",
                    "filteredBy": [
                        "withUpdatedAt"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "updatedAt",
                            "fieldNamePath": "updatedAt",
                            "description": "filter by the supplied updatedAt",
                            "range": true,
                            "name": "withUpdatedAt",
                            "and": true,
                            "or": true,
                            "valueType": "timestamp"
                        }
                    ]
                },
                "updatedBy": {
                    "description": "The user that last updated",
                    "type": "ref",
                    "readOnly": true,
                    "example": "test:test-admin",
                    "sort": true,
                    "fieldName": "updatedBy",
                    "fieldNamePath": "updatedBy",
                    "typeInfo": {
                        "desc": "owner:name pair",
                        "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
                        "name": "ref"
                    },
                    "filteredBy": [
                        "withUpdatedBy"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "updatedBy",
                            "fieldNamePath": "updatedBy",
                            "description": "filter by the supplied updatedBy",
                            "name": "withUpdatedBy",
                            "and": true,
                            "or": true,
                            "valueType": "ref"
                        }
                    ]
                },
                "deletedAt": {
                    "description": "The timestamp when deleted (only applicable to deleted resources)",
                    "type": "timestamp",
                    "readOnly": true,
                    "example": "2014-12-25T12:00:00.000Z",
                    "sort": true,
                    "excludeFromVersion": true,
                    "fieldName": "deletedAt",
                    "fieldNamePath": "deletedAt",
                    "filteredBy": [
                        "withDeletedAt"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "deletedAt",
                            "fieldNamePath": "deletedAt",
                            "prohibited": [
                                "enduser"
                            ],
                            "description": "filter by the supplied deletedAt",
                            "range": true,
                            "name": "withDeletedAt",
                            "and": true,
                            "or": true,
                            "valueType": "timestamp"
                        }
                    ]
                },
                "deletedBy": {
                    "description": "The user that deleted (only applicable to deleted resources)",
                    "type": "ref",
                    "readOnly": true,
                    "example": "test:test-admin",
                    "sort": true,
                    "excludeFromVersion": true,
                    "fieldName": "deletedBy",
                    "fieldNamePath": "deletedBy",
                    "typeInfo": {
                        "desc": "owner:name pair",
                        "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
                        "name": "ref"
                    },
                    "filteredBy": [
                        "withDeletedBy"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "deletedBy",
                            "fieldNamePath": "deletedBy",
                            "prohibited": [
                                "enduser"
                            ],
                            "description": "filter by the supplied deletedBy",
                            "name": "withDeletedBy",
                            "and": true,
                            "or": true,
                            "valueType": "ref"
                        }
                    ]
                },
                "reapAt": {
                    "description": "The timestamp for reaping (only applicable to deleted resources)",
                    "type": "timestamp",
                    "readOnly": true,
                    "example": "2014-12-25T12:00:00.000Z",
                    "sort": true,
                    "excludeFromVersion": true,
                    "fieldName": "reapAt",
                    "fieldNamePath": "reapAt",
                    "filteredBy": [
                        "withReapAt"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "reapAt",
                            "fieldNamePath": "reapAt",
                            "prohibited": [
                                "enduser",
                                "service",
                                "admin"
                            ],
                            "description": "filter by the supplied reapAt",
                            "range": true,
                            "name": "withReapAt",
                            "and": true,
                            "or": true,
                            "valueType": "timestamp"
                        }
                    ]
                },
                "version": {
                    "description": "The version hash (computed)",
                    "type": "version",
                    "readOnly": true,
                    "example": "356b54eb90cd04566159dfb9c95a0426998a2f7b",
                    "excludeFromVersion": true,
                    "fieldName": "version",
                    "fieldNamePath": "version",
                    "typeInfo": {
                        "desc": "sha1 hex encoded hash",
                        "pattern": "[a-f0-9]{40}"
                    }
                },
                "metadata": {
                    "description": "A field that holds metadata about the resource",
                    "excludeFromVersion": true,
                    "fields": {},
                    "fieldName": "metadata",
                    "fieldNamePath": "metadata",
                    "typeInfo": {}
                },
                "timestamp": {
                    "description": "Timestamp in ISO 8601 UTC format when the transition occurred",
                    "type": "timestamp",
                    "required": true,
                    "sort": true,
                    "primary": true,
                    "example": "2017-01-01T00:00:00.000Z",
                    "fieldName": "timestamp",
                    "fieldNamePath": "timestamp"
                },
                "flowExecutionRef": {
                    "description": "Reference to the execution",
                    "type": "ref",
                    "required": true,
                    "example": "owner:flow-execution1",
                    "fieldName": "flowExecutionRef",
                    "fieldNamePath": "flowExecutionRef",
                    "typeInfo": {
                        "desc": "owner:name pair",
                        "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
                        "name": "ref"
                    },
                    "relatedBy": [
                        "flowExecution"
                    ],
                    "relationships": [
                        {
                            "description": "Reference to flowExecution resource",
                            "type": "direct",
                            "resourceType": "flowExecutions",
                            "fieldNamePath": "flowExecutionRef",
                            "fields": [
                                "ref",
                                "name",
                                "alternativeIdentifiers"
                            ],
                            "name": "flowExecution",
                            "intersectable": false,
                            "batchSize": 10
                        }
                    ],
                    "filteredBy": [
                        "withFlowExecutionRef"
                    ],
                    "filters": [
                        {
                            "description": "filter for flowExecutionRef",
                            "type": "with",
                            "fieldNamePath": "flowExecutionRef",
                            "label": "flowExecutionRef",
                            "prefix": true,
                            "name": "withFlowExecutionRef",
                            "and": true,
                            "or": true,
                            "valueType": "ref"
                        }
                    ]
                },
                "states": {
                    "description": "Full history of the state transitions",
                    "array": true,
                    "required": true,
                    "primary": true,
                    "fields": {
                        "status": {
                            "description": "State of the execution at the given timestamp",
                            "type": "string",
                            "required": true,
                            "allowedValues": [
                                {
                                    "value": "PENDING",
                                    "description": "The execution is queued waiting for available resource quota.",
                                    "alternatives": [],
                                    "label": "PENDING"
                                },
                                {
                                    "value": "STARTING",
                                    "description": "The execution has been scheduled for execution.",
                                    "alternatives": [],
                                    "label": "STARTING"
                                },
                                {
                                    "value": "RUNNING",
                                    "description": "The execution has been successfully initialised and is running.",
                                    "alternatives": [],
                                    "label": "RUNNING"
                                },
                                {
                                    "value": "KILLING",
                                    "description": "The execution has been tagged to be killed and will begin shutting down.",
                                    "alternatives": [],
                                    "label": "KILLING"
                                },
                                {
                                    "value": "KILLED",
                                    "description": "The execution has been successfully killed. This is a terminal state.",
                                    "alternatives": [],
                                    "label": "KILLED"
                                },
                                {
                                    "value": "RESTARTING",
                                    "description": "The execution has been tagged to be restarted.",
                                    "alternatives": [],
                                    "label": "RESTARTING"
                                },
                                {
                                    "value": "FINISHED",
                                    "description": "The execution finished without errors. This is a terminal state.",
                                    "alternatives": [],
                                    "label": "FINISHED"
                                },
                                {
                                    "value": "FAILED",
                                    "description": "The execution finished after reaching a set of failure limits. This is a terminal state.",
                                    "alternatives": [],
                                    "label": "FAILED"
                                },
                                {
                                    "value": "LOST",
                                    "description": "The execution stayed in a transient state for too long and has been considered lost. This is a terminal state.",
                                    "alternatives": [],
                                    "label": "LOST"
                                },
                                {
                                    "value": "INVALID",
                                    "description": "The execution has some invalid parameter and cannot be performed. This is a terminal state.",
                                    "alternatives": [],
                                    "label": "INVALID"
                                }
                            ],
                            "example": "PENDING",
                            "fieldName": "status",
                            "fieldNamePath": "states.status",
                            "allowedValueMappings": {
                                "PENDING": "PENDING",
                                "STARTING": "STARTING",
                                "RUNNING": "RUNNING",
                                "KILLING": "KILLING",
                                "KILLED": "KILLED",
                                "RESTARTING": "RESTARTING",
                                "FINISHED": "FINISHED",
                                "FAILED": "FAILED",
                                "LOST": "LOST",
                                "INVALID": "INVALID"
                            },
                            "typeInfo": {
                                "desc": "string",
                                "pattern": ".+",
                                "name": "string"
                            },
                            "primary": true
                        },
                        "timestamp": {
                            "description": "Timestamp in ISO 8601 UTC format when the status change occurred",
                            "type": "timestamp",
                            "required": true,
                            "example": "2017-01-01T00:00:00.000Z",
                            "fieldName": "timestamp",
                            "fieldNamePath": "states.timestamp",
                            "primary": true
                        },
                        "message": {
                            "description": "Extra info about what produced the transition",
                            "type": "string",
                            "example": "The execution stayed in a transient state for too long and has been considered lost. This is a terminal state.",
                            "fieldName": "message",
                            "fieldNamePath": "states.message",
                            "typeInfo": {
                                "desc": "string",
                                "pattern": ".+",
                                "name": "string"
                            },
                            "primary": true
                        }
                    },
                    "fieldName": "states",
                    "fieldNamePath": "states",
                    "typeInfo": {}
                }
            },
            "filters": {
                "q": {
                    "type": "q",
                    "label": "q",
                    "description": "filter by the supplied text",
                    "includes": [
                        "title"
                    ],
                    "name": "q",
                    "valueType": "string",
                    "text": true
                },
                "withName": {
                    "type": "with",
                    "label": "name",
                    "fieldNamePath": "name",
                    "description": "filter by the supplied name",
                    "prefix": true,
                    "name": "withName",
                    "and": true,
                    "or": true,
                    "valueType": "name"
                },
                "withTitle": {
                    "type": "with",
                    "label": "title",
                    "fieldNamePath": "title",
                    "description": "filter by the supplied title",
                    "prefix": true,
                    "name": "withTitle",
                    "and": true,
                    "or": true,
                    "valueType": "string"
                },
                "withRef": {
                    "type": "with",
                    "label": "ref",
                    "fieldNamePath": "ref",
                    "description": "filter by the supplied ref",
                    "name": "withRef",
                    "and": true,
                    "or": true,
                    "valueType": "ref"
                },
                "withAlternativeIdentifiers": {
                    "type": "with",
                    "label": "alternativeIdentifiers",
                    "fieldNamePath": "alternativeIdentifiers",
                    "description": "filter by the supplied alternative identifiers",
                    "prefix": true,
                    "name": "withAlternativeIdentifiers",
                    "and": true,
                    "or": true,
                    "valueType": "stringMap"
                },
                "withTags": {
                    "type": "with",
                    "label": "tags",
                    "fieldNamePath": "tags",
                    "description": "filter by the supplied tags",
                    "name": "withTags",
                    "and": true,
                    "or": true,
                    "valueType": "string"
                },
                "withScore": {
                    "type": "with",
                    "label": "scores",
                    "fieldNamePath": "scores",
                    "description": "filter by the supplied score",
                    "range": true,
                    "name": "withScore",
                    "and": true,
                    "or": true,
                    "valueType": "scores"
                },
                "withCreatedAt": {
                    "type": "with",
                    "label": "createdAt",
                    "fieldNamePath": "createdAt",
                    "description": "filter by the supplied createdAt",
                    "range": true,
                    "name": "withCreatedAt",
                    "and": true,
                    "or": true,
                    "valueType": "timestamp"
                },
                "withCreatedBy": {
                    "type": "with",
                    "label": "createdBy",
                    "fieldNamePath": "createdBy",
                    "description": "filter by the supplied createdBy",
                    "name": "withCreatedBy",
                    "and": true,
                    "or": true,
                    "valueType": "ref"
                },
                "withUpdatedAt": {
                    "type": "with",
                    "label": "updatedAt",
                    "fieldNamePath": "updatedAt",
                    "description": "filter by the supplied updatedAt",
                    "range": true,
                    "name": "withUpdatedAt",
                    "and": true,
                    "or": true,
                    "valueType": "timestamp"
                },
                "withUpdatedBy": {
                    "type": "with",
                    "label": "updatedBy",
                    "fieldNamePath": "updatedBy",
                    "description": "filter by the supplied updatedBy",
                    "name": "withUpdatedBy",
                    "and": true,
                    "or": true,
                    "valueType": "ref"
                },
                "withDeletedAt": {
                    "type": "with",
                    "label": "deletedAt",
                    "fieldNamePath": "deletedAt",
                    "prohibited": [
                        "enduser"
                    ],
                    "description": "filter by the supplied deletedAt",
                    "range": true,
                    "name": "withDeletedAt",
                    "and": true,
                    "or": true,
                    "valueType": "timestamp"
                },
                "withDeletedBy": {
                    "type": "with",
                    "label": "deletedBy",
                    "fieldNamePath": "deletedBy",
                    "prohibited": [
                        "enduser"
                    ],
                    "description": "filter by the supplied deletedBy",
                    "name": "withDeletedBy",
                    "and": true,
                    "or": true,
                    "valueType": "ref"
                },
                "withReapAt": {
                    "type": "with",
                    "label": "reapAt",
                    "fieldNamePath": "reapAt",
                    "prohibited": [
                        "enduser",
                        "service",
                        "admin"
                    ],
                    "description": "filter by the supplied reapAt",
                    "range": true,
                    "name": "withReapAt",
                    "and": true,
                    "or": true,
                    "valueType": "timestamp"
                },
                "withFlowExecutionRef": {
                    "description": "filter for flowExecutionRef",
                    "type": "with",
                    "fieldNamePath": "flowExecutionRef",
                    "label": "flowExecutionRef",
                    "prefix": true,
                    "name": "withFlowExecutionRef",
                    "and": true,
                    "or": true,
                    "valueType": "ref"
                }
            },
            "relationships": {
                "flowExecution": {
                    "description": "Reference to flowExecution resource",
                    "type": "direct",
                    "resourceType": "flowExecutions",
                    "fieldNamePath": "flowExecutionRef",
                    "fields": [
                        "ref",
                        "name",
                        "alternativeIdentifiers"
                    ],
                    "name": "flowExecution",
                    "intersectable": false,
                    "batchSize": 10
                },
                "flowInstance": {
                    "description": "Reference to flowInstance resource",
                    "type": "direct",
                    "resourceType": "flowInstances",
                    "through": "flowExecution",
                    "fieldNamePath": "instanceRef",
                    "fields": [
                        "ref",
                        "name",
                        "flowRef",
                        "resourcefulContext",
                        "alternativeIdentifiers"
                    ],
                    "name": "flowInstance",
                    "intersectable": false,
                    "batchSize": 10
                }
            },
            "restrictions": [
                {
                    "type": "ownership",
                    "message": "must contain an owner for which you have permission",
                    "description": "users can only interact with resources that are owned by a tenant they have access to"
                },
                {
                    "type": "unmodifiable",
                    "message": "not allowed to modify resources created by root:root",
                    "description": "users are not allowed to modify resources that were created by root:root"
                },
                {
                    "type": "primaryKey",
                    "message": "primaryKey must be unique",
                    "description": "the primary key (ref) is derived from owner and name, allowing name to be a tenant specific unique external id"
                }
            ],
            "singularName": "flowExecutionTransition",
            "pluralName": "flowExecutionTransitions",
            "serviceName": "workflow",
            "description": "Hold an execution update with the full history of state transitions",
            "conditionalUpdates": true,
            "hyphenatedPluralName": "flow-execution-transitions",
            "retentionPeriod": "P0D",
            "typeInfo": {}
        },
        "flowExecutions": {
            "path": "/data",
            "stability": "stable",
            "operations": {
                "browse": {
                    "description": "Fetches a list of flow executions that may be filtered",
                    "actions": [
                        "workflow:flow-executions:read",
                        "workflow:flow-executions:read:browse"
                    ]
                },
                "get": {
                    "description": "Fetches one or more flow executions using the supplied id(s)",
                    "actions": [
                        "workflow:flow-executions:read",
                        "workflow:flow-executions:read:get"
                    ]
                },
                "storeBatch": {
                    "description": "Stores one or more flow executions, either creating or wholly replacing",
                    "actions": [
                        "workflow:flow-executions:write",
                        "workflow:flow-executions:write:store",
                        "workflow:flow-executions:write:store:batch"
                    ],
                    "limit": 100
                },
                "storeOne": {
                    "description": "Stores the supplied flow execution with the supplied id, either creating or wholly replacing",
                    "actions": [
                        "workflow:flow-executions:write",
                        "workflow:flow-executions:write:store",
                        "workflow:flow-executions:write:store:one"
                    ]
                },
                "delete": {
                    "description": "Delete one or more flow executions using the supplied id(s)",
                    "actions": [
                        "workflow:flow-executions:write",
                        "workflow:flow-executions:write:delete"
                    ]
                }
            },
            "pagination": {
                "pageSize": {
                    "min": 1,
                    "max": 100,
                    "default": 100
                },
                "pages": {
                    "max": 100
                }
            },
            "display": {
                "priority": 6,
                "overview": {
                    "label": "title"
                },
                "info": {
                    "primary": [
                        "ref",
                        "owner",
                        "name"
                    ],
                    "secondary": [
                        "alternativeIdentifiers",
                        "tags",
                        "custom"
                    ],
                    "history": [
                        "createdAt",
                        "createdBy",
                        "updatedAt",
                        "updatedBy",
                        "deletedAt",
                        "deletedBy",
                        "reapAt",
                        "version"
                    ]
                },
                "groups": {
                    "custom": [
                        "custom"
                    ],
                    "identity": [
                        "ref",
                        "owner",
                        "name",
                        "alternativeIdentifiers"
                    ],
                    "history": [
                        "createdAt",
                        "createdBy",
                        "updatedAt",
                        "updatedBy",
                        "deletedAt",
                        "deletedBy",
                        "reapAt",
                        "version"
                    ],
                    "tags": [
                        "tags"
                    ],
                    "context": [
                        "instanceRef"
                    ]
                },
                "singularName": "flow execution",
                "pluralName": "flow executions"
            },
            "fields": {
                "ref": {
                    "description": "The derived owner:name reference",
                    "type": "ref",
                    "readOnly": true,
                    "sort": true,
                    "example": "test:resource-name",
                    "fieldName": "ref",
                    "fieldNamePath": "ref",
                    "typeInfo": {
                        "desc": "owner:name pair",
                        "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
                        "name": "ref"
                    },
                    "filteredBy": [
                        "withRef"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "ref",
                            "fieldNamePath": "ref",
                            "description": "filter by the supplied ref",
                            "name": "withRef",
                            "and": true,
                            "or": true,
                            "valueType": "ref"
                        }
                    ]
                },
                "alternativeIdentifiers": {
                    "type": "stringMap",
                    "description": "Contains any internal identifiers within the platform",
                    "example": "{\"auroraTaskId\": \"a-id\"}",
                    "required": true,
                    "sort": true,
                    "fieldName": "alternativeIdentifiers",
                    "fieldNamePath": "alternativeIdentifiers",
                    "typeInfo": {
                        "keys": {
                            "pattern": "[a-zA-Z0-9]+"
                        },
                        "values": {
                            "pattern": "(.+)",
                            "desc": "string"
                        },
                        "desc": "key-value pairs",
                        "name": "stringMap"
                    },
                    "filteredBy": [
                        "withAlternativeIdentifiers"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "alternativeIdentifiers",
                            "fieldNamePath": "alternativeIdentifiers",
                            "description": "filter by the supplied alternative identifiers",
                            "prefix": true,
                            "name": "withAlternativeIdentifiers",
                            "and": true,
                            "or": true,
                            "valueType": "stringMap"
                        }
                    ]
                },
                "owner": {
                    "description": "The tenant owner name",
                    "type": "name",
                    "required": true,
                    "sort": true,
                    "example": "test",
                    "countable": true,
                    "fieldName": "owner",
                    "fieldNamePath": "owner",
                    "typeInfo": {
                        "desc": "name",
                        "pattern": "[a-zA-Z0-9_-]+",
                        "name": "name"
                    }
                },
                "name": {
                    "description": "The tenant specific unique name",
                    "type": "name",
                    "sort": true,
                    "example": "resource-name",
                    "fieldName": "name",
                    "fieldNamePath": "name",
                    "typeInfo": {
                        "desc": "name",
                        "pattern": "[a-zA-Z0-9_-]+",
                        "name": "name"
                    },
                    "filteredBy": [
                        "withName"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "name",
                            "fieldNamePath": "name",
                            "description": "filter by the supplied name",
                            "prefix": true,
                            "name": "withName",
                            "and": true,
                            "or": true,
                            "valueType": "name"
                        }
                    ]
                },
                "title": {
                    "description": "The title for the resource. Will be set to the value of `name` if not supplied",
                    "type": "string",
                    "sort": true,
                    "example": "resource-title",
                    "primary": true,
                    "fieldName": "title",
                    "fieldNamePath": "title",
                    "typeInfo": {
                        "desc": "string",
                        "pattern": ".+",
                        "name": "string"
                    },
                    "filteredBy": [
                        "withTitle"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "title",
                            "fieldNamePath": "title",
                            "description": "filter by the supplied title",
                            "prefix": true,
                            "name": "withTitle",
                            "and": true,
                            "or": true,
                            "valueType": "string"
                        }
                    ]
                },
                "tags": {
                    "description": "tags for the resource",
                    "type": "string",
                    "array": true,
                    "example": [
                        "todo",
                        "usage:boxart"
                    ],
                    "fieldName": "tags",
                    "fieldNamePath": "tags",
                    "typeInfo": {
                        "desc": "string",
                        "pattern": ".+",
                        "name": "string"
                    },
                    "filteredBy": [
                        "withTags"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "tags",
                            "fieldNamePath": "tags",
                            "description": "filter by the supplied tags",
                            "name": "withTags",
                            "and": true,
                            "or": true,
                            "valueType": "string"
                        }
                    ]
                },
                "scores": {
                    "description": "scores for the resource",
                    "type": "scores",
                    "example": {
                        "imdb.a3431": 0.9,
                        "fuse": 2
                    },
                    "fieldName": "scores",
                    "fieldNamePath": "scores",
                    "typeInfo": {
                        "keys": {
                            "pattern": "(?:[a-zA-Z0-9]+)(?:\\.[a-zA-Z0-9]+)*"
                        },
                        "values": {
                            "desc": "number",
                            "pattern": "-?\\d+(?:\\.\\d+)?"
                        },
                        "desc": "Map of FieldNamePath:Number pairs",
                        "name": "scores"
                    },
                    "filteredBy": [
                        "withScore"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "scores",
                            "fieldNamePath": "scores",
                            "description": "filter by the supplied score",
                            "range": true,
                            "name": "withScore",
                            "and": true,
                            "or": true,
                            "valueType": "scores"
                        }
                    ]
                },
                "custom": {
                    "description": "The tenant specific custom fields.  This may be used to hold tenant specific data alongside the document, but it should not be used as a substitute for normal fields.",
                    "type": "map",
                    "max": 100,
                    "fieldName": "custom",
                    "fieldNamePath": "custom",
                    "typeInfo": {
                        "keys": {
                            "pattern": "[a-zA-Z0-9]+"
                        },
                        "values": {
                            "pattern": "(.+)",
                            "desc": "scalar value or an array of scalar values"
                        },
                        "desc": "key-value pairs"
                    }
                },
                "createdAt": {
                    "description": "The timestamp when created",
                    "type": "timestamp",
                    "readOnly": true,
                    "example": "2014-12-25T12:00:00.000Z",
                    "sort": true,
                    "excludeFromVersion": true,
                    "fieldName": "createdAt",
                    "fieldNamePath": "createdAt",
                    "filteredBy": [
                        "withCreatedAt"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "createdAt",
                            "fieldNamePath": "createdAt",
                            "description": "filter by the supplied createdAt",
                            "range": true,
                            "name": "withCreatedAt",
                            "and": true,
                            "or": true,
                            "valueType": "timestamp"
                        }
                    ]
                },
                "createdBy": {
                    "description": "The user that created",
                    "type": "ref",
                    "readOnly": true,
                    "example": "test:test-admin",
                    "sort": true,
                    "fieldName": "createdBy",
                    "fieldNamePath": "createdBy",
                    "typeInfo": {
                        "desc": "owner:name pair",
                        "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
                        "name": "ref"
                    },
                    "filteredBy": [
                        "withCreatedBy"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "createdBy",
                            "fieldNamePath": "createdBy",
                            "description": "filter by the supplied createdBy",
                            "name": "withCreatedBy",
                            "and": true,
                            "or": true,
                            "valueType": "ref"
                        }
                    ]
                },
                "updatedAt": {
                    "description": "The timestamp when last updated",
                    "type": "timestamp",
                    "readOnly": true,
                    "example": "2014-12-25T12:00:00.000Z",
                    "sort": true,
                    "excludeFromVersion": true,
                    "fieldName": "updatedAt",
                    "fieldNamePath": "updatedAt",
                    "filteredBy": [
                        "withUpdatedAt"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "updatedAt",
                            "fieldNamePath": "updatedAt",
                            "description": "filter by the supplied updatedAt",
                            "range": true,
                            "name": "withUpdatedAt",
                            "and": true,
                            "or": true,
                            "valueType": "timestamp"
                        }
                    ]
                },
                "updatedBy": {
                    "description": "The user that last updated",
                    "type": "ref",
                    "readOnly": true,
                    "example": "test:test-admin",
                    "sort": true,
                    "fieldName": "updatedBy",
                    "fieldNamePath": "updatedBy",
                    "typeInfo": {
                        "desc": "owner:name pair",
                        "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
                        "name": "ref"
                    },
                    "filteredBy": [
                        "withUpdatedBy"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "updatedBy",
                            "fieldNamePath": "updatedBy",
                            "description": "filter by the supplied updatedBy",
                            "name": "withUpdatedBy",
                            "and": true,
                            "or": true,
                            "valueType": "ref"
                        }
                    ]
                },
                "deletedAt": {
                    "description": "The timestamp when deleted (only applicable to deleted resources)",
                    "type": "timestamp",
                    "readOnly": true,
                    "example": "2014-12-25T12:00:00.000Z",
                    "sort": true,
                    "excludeFromVersion": true,
                    "fieldName": "deletedAt",
                    "fieldNamePath": "deletedAt",
                    "filteredBy": [
                        "withDeletedAt"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "deletedAt",
                            "fieldNamePath": "deletedAt",
                            "prohibited": [
                                "enduser"
                            ],
                            "description": "filter by the supplied deletedAt",
                            "range": true,
                            "name": "withDeletedAt",
                            "and": true,
                            "or": true,
                            "valueType": "timestamp"
                        }
                    ]
                },
                "deletedBy": {
                    "description": "The user that deleted (only applicable to deleted resources)",
                    "type": "ref",
                    "readOnly": true,
                    "example": "test:test-admin",
                    "sort": true,
                    "excludeFromVersion": true,
                    "fieldName": "deletedBy",
                    "fieldNamePath": "deletedBy",
                    "typeInfo": {
                        "desc": "owner:name pair",
                        "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
                        "name": "ref"
                    },
                    "filteredBy": [
                        "withDeletedBy"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "deletedBy",
                            "fieldNamePath": "deletedBy",
                            "prohibited": [
                                "enduser"
                            ],
                            "description": "filter by the supplied deletedBy",
                            "name": "withDeletedBy",
                            "and": true,
                            "or": true,
                            "valueType": "ref"
                        }
                    ]
                },
                "reapAt": {
                    "description": "The timestamp for reaping (only applicable to deleted resources)",
                    "type": "timestamp",
                    "readOnly": true,
                    "example": "2014-12-25T12:00:00.000Z",
                    "sort": true,
                    "excludeFromVersion": true,
                    "fieldName": "reapAt",
                    "fieldNamePath": "reapAt",
                    "filteredBy": [
                        "withReapAt"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "reapAt",
                            "fieldNamePath": "reapAt",
                            "prohibited": [
                                "enduser",
                                "service",
                                "admin"
                            ],
                            "description": "filter by the supplied reapAt",
                            "range": true,
                            "name": "withReapAt",
                            "and": true,
                            "or": true,
                            "valueType": "timestamp"
                        }
                    ]
                },
                "version": {
                    "description": "The version hash (computed)",
                    "type": "version",
                    "readOnly": true,
                    "example": "356b54eb90cd04566159dfb9c95a0426998a2f7b",
                    "excludeFromVersion": true,
                    "fieldName": "version",
                    "fieldNamePath": "version",
                    "typeInfo": {
                        "desc": "sha1 hex encoded hash",
                        "pattern": "[a-f0-9]{40}"
                    }
                },
                "metadata": {
                    "description": "A field that holds metadata about the resource",
                    "excludeFromVersion": true,
                    "fields": {},
                    "fieldName": "metadata",
                    "fieldNamePath": "metadata",
                    "typeInfo": {}
                },
                "instanceRef": {
                    "description": "Reference to the Flow Instance from which this Flow Execution was created.",
                    "type": "ref",
                    "sort": true,
                    "required": true,
                    "countable": true,
                    "primary": true,
                    "example": "owner:instance1",
                    "fieldName": "instanceRef",
                    "fieldNamePath": "instanceRef",
                    "typeInfo": {
                        "desc": "owner:name pair",
                        "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
                        "name": "ref"
                    },
                    "relatedBy": [
                        "flowInstance"
                    ],
                    "relationships": [
                        {
                            "description": "flow instance related to this execution",
                            "type": "direct",
                            "resourceType": "flowInstances",
                            "fieldNamePath": "instanceRef",
                            "fields": [
                                "ref",
                                "name",
                                "flowRef",
                                "resourcefulContext",
                                "alternativeIdentifiers"
                            ],
                            "name": "flowInstance",
                            "intersectable": false,
                            "batchSize": 10
                        }
                    ],
                    "filteredBy": [
                        "withInstanceRef"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "fieldNamePath": "instanceRef",
                            "description": "filter by de supplied instance ref",
                            "label": "instanceRef",
                            "name": "withInstanceRef",
                            "and": true,
                            "or": true,
                            "valueType": "ref"
                        }
                    ]
                },
                "executionStatus": {
                    "description": "State of the execution at the current moment",
                    "type": "string",
                    "allowedValues": [
                        {
                            "value": "PENDING",
                            "description": "The execution is queued waiting for available resource quota.",
                            "alternatives": [],
                            "label": "PENDING"
                        },
                        {
                            "value": "STARTING",
                            "description": "The execution has been scheduled for execution.",
                            "alternatives": [],
                            "label": "STARTING"
                        },
                        {
                            "value": "RUNNING",
                            "description": "The execution has been successfully initialised and is running.",
                            "alternatives": [],
                            "label": "RUNNING"
                        },
                        {
                            "value": "KILLING",
                            "description": "The execution has been tagged to be killed and will begin shutting down.",
                            "alternatives": [],
                            "label": "KILLING"
                        },
                        {
                            "value": "KILLED",
                            "description": "The execution has been successfully killed. This is a terminal state.",
                            "alternatives": [],
                            "label": "KILLED"
                        },
                        {
                            "value": "RESTARTING",
                            "description": "The execution has been tagged to be restarted.",
                            "alternatives": [],
                            "label": "RESTARTING"
                        },
                        {
                            "value": "FINISHED",
                            "description": "The execution finished without errors. This is a terminal state.",
                            "alternatives": [],
                            "label": "FINISHED"
                        },
                        {
                            "value": "FAILED",
                            "description": "The execution finished after reaching a set of failure limits. This is a terminal state.",
                            "alternatives": [],
                            "label": "FAILED"
                        },
                        {
                            "value": "LOST",
                            "description": "The execution stayed in a transient state for too long and has been considered lost. This is a terminal state.",
                            "alternatives": [],
                            "label": "LOST"
                        },
                        {
                            "value": "INVALID",
                            "description": "The execution has some invalid parameter and cannot be performed. This is a terminal state.",
                            "alternatives": [],
                            "label": "INVALID"
                        }
                    ],
                    "example": "PENDING",
                    "fieldName": "executionStatus",
                    "fieldNamePath": "executionStatus",
                    "allowedValueMappings": {
                        "PENDING": "PENDING",
                        "STARTING": "STARTING",
                        "RUNNING": "RUNNING",
                        "KILLING": "KILLING",
                        "KILLED": "KILLED",
                        "RESTARTING": "RESTARTING",
                        "FINISHED": "FINISHED",
                        "FAILED": "FAILED",
                        "LOST": "LOST",
                        "INVALID": "INVALID"
                    },
                    "typeInfo": {
                        "desc": "string",
                        "pattern": ".+",
                        "name": "string"
                    }
                }
            },
            "filters": {
                "q": {
                    "type": "q",
                    "label": "q",
                    "description": "filter by the supplied text",
                    "includes": [
                        "title"
                    ],
                    "name": "q",
                    "valueType": "string",
                    "text": true
                },
                "withName": {
                    "type": "with",
                    "label": "name",
                    "fieldNamePath": "name",
                    "description": "filter by the supplied name",
                    "prefix": true,
                    "name": "withName",
                    "and": true,
                    "or": true,
                    "valueType": "name"
                },
                "withTitle": {
                    "type": "with",
                    "label": "title",
                    "fieldNamePath": "title",
                    "description": "filter by the supplied title",
                    "prefix": true,
                    "name": "withTitle",
                    "and": true,
                    "or": true,
                    "valueType": "string"
                },
                "withRef": {
                    "type": "with",
                    "label": "ref",
                    "fieldNamePath": "ref",
                    "description": "filter by the supplied ref",
                    "name": "withRef",
                    "and": true,
                    "or": true,
                    "valueType": "ref"
                },
                "withAlternativeIdentifiers": {
                    "type": "with",
                    "label": "alternativeIdentifiers",
                    "fieldNamePath": "alternativeIdentifiers",
                    "description": "filter by the supplied alternative identifiers",
                    "prefix": true,
                    "name": "withAlternativeIdentifiers",
                    "and": true,
                    "or": true,
                    "valueType": "stringMap"
                },
                "withTags": {
                    "type": "with",
                    "label": "tags",
                    "fieldNamePath": "tags",
                    "description": "filter by the supplied tags",
                    "name": "withTags",
                    "and": true,
                    "or": true,
                    "valueType": "string"
                },
                "withScore": {
                    "type": "with",
                    "label": "scores",
                    "fieldNamePath": "scores",
                    "description": "filter by the supplied score",
                    "range": true,
                    "name": "withScore",
                    "and": true,
                    "or": true,
                    "valueType": "scores"
                },
                "withCreatedAt": {
                    "type": "with",
                    "label": "createdAt",
                    "fieldNamePath": "createdAt",
                    "description": "filter by the supplied createdAt",
                    "range": true,
                    "name": "withCreatedAt",
                    "and": true,
                    "or": true,
                    "valueType": "timestamp"
                },
                "withCreatedBy": {
                    "type": "with",
                    "label": "createdBy",
                    "fieldNamePath": "createdBy",
                    "description": "filter by the supplied createdBy",
                    "name": "withCreatedBy",
                    "and": true,
                    "or": true,
                    "valueType": "ref"
                },
                "withUpdatedAt": {
                    "type": "with",
                    "label": "updatedAt",
                    "fieldNamePath": "updatedAt",
                    "description": "filter by the supplied updatedAt",
                    "range": true,
                    "name": "withUpdatedAt",
                    "and": true,
                    "or": true,
                    "valueType": "timestamp"
                },
                "withUpdatedBy": {
                    "type": "with",
                    "label": "updatedBy",
                    "fieldNamePath": "updatedBy",
                    "description": "filter by the supplied updatedBy",
                    "name": "withUpdatedBy",
                    "and": true,
                    "or": true,
                    "valueType": "ref"
                },
                "withDeletedAt": {
                    "type": "with",
                    "label": "deletedAt",
                    "fieldNamePath": "deletedAt",
                    "prohibited": [
                        "enduser"
                    ],
                    "description": "filter by the supplied deletedAt",
                    "range": true,
                    "name": "withDeletedAt",
                    "and": true,
                    "or": true,
                    "valueType": "timestamp"
                },
                "withDeletedBy": {
                    "type": "with",
                    "label": "deletedBy",
                    "fieldNamePath": "deletedBy",
                    "prohibited": [
                        "enduser"
                    ],
                    "description": "filter by the supplied deletedBy",
                    "name": "withDeletedBy",
                    "and": true,
                    "or": true,
                    "valueType": "ref"
                },
                "withReapAt": {
                    "type": "with",
                    "label": "reapAt",
                    "fieldNamePath": "reapAt",
                    "prohibited": [
                        "enduser",
                        "service",
                        "admin"
                    ],
                    "description": "filter by the supplied reapAt",
                    "range": true,
                    "name": "withReapAt",
                    "and": true,
                    "or": true,
                    "valueType": "timestamp"
                },
                "withInstanceRef": {
                    "type": "with",
                    "fieldNamePath": "instanceRef",
                    "description": "filter by de supplied instance ref",
                    "label": "instanceRef",
                    "name": "withInstanceRef",
                    "and": true,
                    "or": true,
                    "valueType": "ref"
                }
            },
            "relationships": {
                "flowInstance": {
                    "description": "flow instance related to this execution",
                    "type": "direct",
                    "resourceType": "flowInstances",
                    "fieldNamePath": "instanceRef",
                    "fields": [
                        "ref",
                        "name",
                        "flowRef",
                        "resourcefulContext",
                        "alternativeIdentifiers"
                    ],
                    "name": "flowInstance",
                    "intersectable": false,
                    "batchSize": 10
                },
                "flowExecutionTransition": {
                    "description": "status transitions related to this execution",
                    "type": "indirect",
                    "resourceType": "flowExecutionTransitions",
                    "filterName": "withFlowExecutionRef",
                    "fields": [
                        "ref",
                        "timestamp",
                        "states"
                    ],
                    "name": "flowExecutionTransition",
                    "intersectable": false,
                    "batchSize": 10
                },
                "flowExecutionReport": {
                    "description": "final report of the progress of the operations related to this execution",
                    "type": "indirect",
                    "resourceType": "flowExecutionReports",
                    "filterName": "withFlowExecutionRef",
                    "fields": [
                        "ref",
                        "operations"
                    ],
                    "name": "flowExecutionReport",
                    "intersectable": false,
                    "batchSize": 10
                },
                "flowFlags": {
                    "description": "flags related to this execution",
                    "type": "indirect",
                    "resourceType": "flowFlags",
                    "filterName": "withExecutionRef",
                    "fields": [
                        "ref",
                        "name"
                    ],
                    "name": "flowFlags",
                    "intersectable": false,
                    "batchSize": 10
                }
            },
            "restrictions": [
                {
                    "type": "ownership",
                    "message": "must contain an owner for which you have permission",
                    "description": "users can only interact with resources that are owned by a tenant they have access to"
                },
                {
                    "type": "unmodifiable",
                    "message": "not allowed to modify resources created by root:root",
                    "description": "users are not allowed to modify resources that were created by root:root"
                },
                {
                    "type": "primaryKey",
                    "message": "primaryKey must be unique",
                    "description": "the primary key (ref) is derived from owner and name, allowing name to be a tenant specific unique external id"
                }
            ],
            "singularName": "flowExecution",
            "pluralName": "flowExecutions",
            "serviceName": "workflow",
            "description": "Holds the runtime state of the execution and a link to the Flow Instance. This information is ultimately derived from the task information exported via the Webhook and that job state topic carries.",
            "conditionalUpdates": true,
            "hyphenatedPluralName": "flow-executions",
            "retentionPeriod": "P0D",
            "typeInfo": {}
        },
        "flowFlags": {
            "path": "/data",
            "stability": "stable",
            "operations": {
                "browse": {
                    "description": "Fetches a list of flow flags that may be filtered",
                    "actions": [
                        "workflow:flow-flags:read",
                        "workflow:flow-flags:read:browse"
                    ]
                },
                "get": {
                    "description": "Fetches one or more flow flags using the supplied id(s)",
                    "actions": [
                        "workflow:flow-flags:read",
                        "workflow:flow-flags:read:get"
                    ]
                },
                "storeBatch": {
                    "description": "Stores one or more flow flags, either creating or wholly replacing",
                    "actions": [
                        "workflow:flow-flags:write",
                        "workflow:flow-flags:write:store",
                        "workflow:flow-flags:write:store:batch"
                    ],
                    "limit": 100
                },
                "storeOne": {
                    "description": "Stores the supplied flow flag with the supplied id, either creating or wholly replacing",
                    "actions": [
                        "workflow:flow-flags:write",
                        "workflow:flow-flags:write:store",
                        "workflow:flow-flags:write:store:one"
                    ]
                },
                "delete": {
                    "description": "Delete one or more flow flags using the supplied id(s)",
                    "actions": [
                        "workflow:flow-flags:write",
                        "workflow:flow-flags:write:delete"
                    ]
                }
            },
            "pagination": {
                "pageSize": {
                    "min": 1,
                    "max": 100,
                    "default": 100
                },
                "pages": {
                    "max": 100
                }
            },
            "display": {
                "priority": 1,
                "overview": {
                    "label": "title"
                },
                "info": {
                    "primary": [
                        "ref",
                        "owner",
                        "name"
                    ],
                    "secondary": [
                        "alternativeIdentifiers",
                        "tags",
                        "custom"
                    ],
                    "history": [
                        "createdAt",
                        "createdBy",
                        "updatedAt",
                        "updatedBy",
                        "deletedAt",
                        "deletedBy",
                        "reapAt",
                        "version"
                    ]
                },
                "groups": {
                    "custom": [
                        "custom"
                    ],
                    "identity": [
                        "ref",
                        "owner",
                        "name",
                        "alternativeIdentifiers"
                    ],
                    "history": [
                        "createdAt",
                        "createdBy",
                        "updatedAt",
                        "updatedBy",
                        "deletedAt",
                        "deletedBy",
                        "reapAt",
                        "version"
                    ],
                    "tags": [
                        "tags"
                    ],
                    "overview": [
                        "status",
                        "message",
                        "comment"
                    ],
                    "context": [
                        "resourcefulContext",
                        "taskRef",
                        "instanceRef",
                        "executionRef"
                    ]
                },
                "singularName": "flow flag",
                "pluralName": "flow flags"
            },
            "fields": {
                "ref": {
                    "description": "The derived owner:name reference",
                    "type": "ref",
                    "readOnly": true,
                    "sort": true,
                    "example": "test:resource-name",
                    "fieldName": "ref",
                    "fieldNamePath": "ref",
                    "typeInfo": {
                        "desc": "owner:name pair",
                        "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
                        "name": "ref"
                    },
                    "filteredBy": [
                        "withRef"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "ref",
                            "fieldNamePath": "ref",
                            "description": "filter by the supplied ref",
                            "name": "withRef",
                            "and": true,
                            "or": true,
                            "valueType": "ref"
                        }
                    ]
                },
                "alternativeIdentifiers": {
                    "type": "stringMap",
                    "description": "A map of alternative identifiers for this resource",
                    "example": {
                        "tel": "0800100100",
                        "said": "something"
                    },
                    "fieldName": "alternativeIdentifiers",
                    "fieldNamePath": "alternativeIdentifiers",
                    "typeInfo": {
                        "keys": {
                            "pattern": "[a-zA-Z0-9]+"
                        },
                        "values": {
                            "pattern": "(.+)",
                            "desc": "string"
                        },
                        "desc": "key-value pairs",
                        "name": "stringMap"
                    },
                    "filteredBy": [
                        "withAlternativeIdentifiers"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "alternativeIdentifiers",
                            "fieldNamePath": "alternativeIdentifiers",
                            "description": "filter by the supplied alternative identifiers",
                            "prefix": true,
                            "name": "withAlternativeIdentifiers",
                            "and": true,
                            "or": true,
                            "valueType": "stringMap"
                        }
                    ]
                },
                "owner": {
                    "description": "The tenant owner name",
                    "type": "name",
                    "required": true,
                    "sort": true,
                    "example": "test",
                    "countable": true,
                    "fieldName": "owner",
                    "fieldNamePath": "owner",
                    "typeInfo": {
                        "desc": "name",
                        "pattern": "[a-zA-Z0-9_-]+",
                        "name": "name"
                    }
                },
                "name": {
                    "description": "The tenant specific unique name",
                    "type": "name",
                    "sort": true,
                    "example": "resource-name",
                    "fieldName": "name",
                    "fieldNamePath": "name",
                    "typeInfo": {
                        "desc": "name",
                        "pattern": "[a-zA-Z0-9_-]+",
                        "name": "name"
                    },
                    "filteredBy": [
                        "withName"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "name",
                            "fieldNamePath": "name",
                            "description": "filter by the supplied name",
                            "prefix": true,
                            "name": "withName",
                            "and": true,
                            "or": true,
                            "valueType": "name"
                        }
                    ]
                },
                "title": {
                    "description": "The title for the resource. Will be set to the value of `name` if not supplied",
                    "type": "string",
                    "sort": true,
                    "example": "resource-title",
                    "primary": true,
                    "fieldName": "title",
                    "fieldNamePath": "title",
                    "typeInfo": {
                        "desc": "string",
                        "pattern": ".+",
                        "name": "string"
                    },
                    "filteredBy": [
                        "withTitle"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "title",
                            "fieldNamePath": "title",
                            "description": "filter by the supplied title",
                            "prefix": true,
                            "name": "withTitle",
                            "and": true,
                            "or": true,
                            "valueType": "string"
                        }
                    ]
                },
                "tags": {
                    "description": "tags for the resource",
                    "type": "string",
                    "array": true,
                    "example": [
                        "todo",
                        "usage:boxart"
                    ],
                    "fieldName": "tags",
                    "fieldNamePath": "tags",
                    "typeInfo": {
                        "desc": "string",
                        "pattern": ".+",
                        "name": "string"
                    },
                    "filteredBy": [
                        "withTags"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "tags",
                            "fieldNamePath": "tags",
                            "description": "filter by the supplied tags",
                            "name": "withTags",
                            "and": true,
                            "or": true,
                            "valueType": "string"
                        }
                    ]
                },
                "scores": {
                    "description": "scores for the resource",
                    "type": "scores",
                    "example": {
                        "imdb.a3431": 0.9,
                        "fuse": 2
                    },
                    "fieldName": "scores",
                    "fieldNamePath": "scores",
                    "typeInfo": {
                        "keys": {
                            "pattern": "(?:[a-zA-Z0-9]+)(?:\\.[a-zA-Z0-9]+)*"
                        },
                        "values": {
                            "desc": "number",
                            "pattern": "-?\\d+(?:\\.\\d+)?"
                        },
                        "desc": "Map of FieldNamePath:Number pairs",
                        "name": "scores"
                    },
                    "filteredBy": [
                        "withScore"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "scores",
                            "fieldNamePath": "scores",
                            "description": "filter by the supplied score",
                            "range": true,
                            "name": "withScore",
                            "and": true,
                            "or": true,
                            "valueType": "scores"
                        }
                    ]
                },
                "custom": {
                    "description": "The tenant specific custom fields.  This may be used to hold tenant specific data alongside the document, but it should not be used as a substitute for normal fields.",
                    "type": "map",
                    "max": 100,
                    "fieldName": "custom",
                    "fieldNamePath": "custom",
                    "typeInfo": {
                        "keys": {
                            "pattern": "[a-zA-Z0-9]+"
                        },
                        "values": {
                            "pattern": "(.+)",
                            "desc": "scalar value or an array of scalar values"
                        },
                        "desc": "key-value pairs"
                    }
                },
                "createdAt": {
                    "description": "The timestamp when created",
                    "type": "timestamp",
                    "readOnly": true,
                    "example": "2014-12-25T12:00:00.000Z",
                    "sort": true,
                    "excludeFromVersion": true,
                    "fieldName": "createdAt",
                    "fieldNamePath": "createdAt",
                    "filteredBy": [
                        "withCreatedAt"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "createdAt",
                            "fieldNamePath": "createdAt",
                            "description": "filter by the supplied createdAt",
                            "range": true,
                            "name": "withCreatedAt",
                            "and": true,
                            "or": true,
                            "valueType": "timestamp"
                        }
                    ]
                },
                "createdBy": {
                    "description": "The user that created",
                    "type": "ref",
                    "readOnly": true,
                    "example": "test:test-admin",
                    "sort": true,
                    "fieldName": "createdBy",
                    "fieldNamePath": "createdBy",
                    "typeInfo": {
                        "desc": "owner:name pair",
                        "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
                        "name": "ref"
                    },
                    "filteredBy": [
                        "withCreatedBy"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "createdBy",
                            "fieldNamePath": "createdBy",
                            "description": "filter by the supplied createdBy",
                            "name": "withCreatedBy",
                            "and": true,
                            "or": true,
                            "valueType": "ref"
                        }
                    ]
                },
                "updatedAt": {
                    "description": "The timestamp when last updated",
                    "type": "timestamp",
                    "readOnly": true,
                    "example": "2014-12-25T12:00:00.000Z",
                    "sort": true,
                    "excludeFromVersion": true,
                    "fieldName": "updatedAt",
                    "fieldNamePath": "updatedAt",
                    "filteredBy": [
                        "withUpdatedAt"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "updatedAt",
                            "fieldNamePath": "updatedAt",
                            "description": "filter by the supplied updatedAt",
                            "range": true,
                            "name": "withUpdatedAt",
                            "and": true,
                            "or": true,
                            "valueType": "timestamp"
                        }
                    ]
                },
                "updatedBy": {
                    "description": "The user that last updated",
                    "type": "ref",
                    "readOnly": true,
                    "example": "test:test-admin",
                    "sort": true,
                    "fieldName": "updatedBy",
                    "fieldNamePath": "updatedBy",
                    "typeInfo": {
                        "desc": "owner:name pair",
                        "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
                        "name": "ref"
                    },
                    "filteredBy": [
                        "withUpdatedBy"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "updatedBy",
                            "fieldNamePath": "updatedBy",
                            "description": "filter by the supplied updatedBy",
                            "name": "withUpdatedBy",
                            "and": true,
                            "or": true,
                            "valueType": "ref"
                        }
                    ]
                },
                "deletedAt": {
                    "description": "The timestamp when deleted (only applicable to deleted resources)",
                    "type": "timestamp",
                    "readOnly": true,
                    "example": "2014-12-25T12:00:00.000Z",
                    "sort": true,
                    "excludeFromVersion": true,
                    "fieldName": "deletedAt",
                    "fieldNamePath": "deletedAt",
                    "filteredBy": [
                        "withDeletedAt"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "deletedAt",
                            "fieldNamePath": "deletedAt",
                            "prohibited": [
                                "enduser"
                            ],
                            "description": "filter by the supplied deletedAt",
                            "range": true,
                            "name": "withDeletedAt",
                            "and": true,
                            "or": true,
                            "valueType": "timestamp"
                        }
                    ]
                },
                "deletedBy": {
                    "description": "The user that deleted (only applicable to deleted resources)",
                    "type": "ref",
                    "readOnly": true,
                    "example": "test:test-admin",
                    "sort": true,
                    "excludeFromVersion": true,
                    "fieldName": "deletedBy",
                    "fieldNamePath": "deletedBy",
                    "typeInfo": {
                        "desc": "owner:name pair",
                        "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
                        "name": "ref"
                    },
                    "filteredBy": [
                        "withDeletedBy"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "deletedBy",
                            "fieldNamePath": "deletedBy",
                            "prohibited": [
                                "enduser"
                            ],
                            "description": "filter by the supplied deletedBy",
                            "name": "withDeletedBy",
                            "and": true,
                            "or": true,
                            "valueType": "ref"
                        }
                    ]
                },
                "reapAt": {
                    "description": "The timestamp for reaping (only applicable to deleted resources)",
                    "type": "timestamp",
                    "readOnly": true,
                    "example": "2014-12-25T12:00:00.000Z",
                    "sort": true,
                    "excludeFromVersion": true,
                    "fieldName": "reapAt",
                    "fieldNamePath": "reapAt",
                    "filteredBy": [
                        "withReapAt"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "reapAt",
                            "fieldNamePath": "reapAt",
                            "prohibited": [
                                "enduser",
                                "service",
                                "admin"
                            ],
                            "description": "filter by the supplied reapAt",
                            "range": true,
                            "name": "withReapAt",
                            "and": true,
                            "or": true,
                            "valueType": "timestamp"
                        }
                    ]
                },
                "version": {
                    "description": "The version hash (computed)",
                    "type": "version",
                    "readOnly": true,
                    "example": "356b54eb90cd04566159dfb9c95a0426998a2f7b",
                    "excludeFromVersion": true,
                    "fieldName": "version",
                    "fieldNamePath": "version",
                    "typeInfo": {
                        "desc": "sha1 hex encoded hash",
                        "pattern": "[a-f0-9]{40}"
                    }
                },
                "metadata": {
                    "description": "A field that holds metadata about the resource",
                    "excludeFromVersion": true,
                    "fields": {},
                    "fieldName": "metadata",
                    "fieldNamePath": "metadata",
                    "typeInfo": {}
                },
                "taskRef": {
                    "description": "Reference to the Task.",
                    "type": "ref",
                    "sort": true,
                    "example": "owner:taks1",
                    "fieldName": "taskRef",
                    "fieldNamePath": "taskRef",
                    "typeInfo": {
                        "desc": "owner:name pair",
                        "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
                        "name": "ref"
                    },
                    "relatedBy": [
                        "flowTask"
                    ],
                    "relationships": [
                        {
                            "description": "Reference to Task resource",
                            "type": "direct",
                            "resourceType": "flowTasks",
                            "fieldNamePath": "taskRef",
                            "fields": [
                                "ref",
                                "name"
                            ],
                            "name": "flowTask",
                            "intersectable": false,
                            "batchSize": 10
                        }
                    ],
                    "filteredBy": [
                        "withTaskRef"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "fieldNamePath": "taskRef",
                            "description": "filter by the supplied Task ref",
                            "label": "taskRef",
                            "name": "withTaskRef",
                            "and": true,
                            "or": true,
                            "valueType": "ref"
                        }
                    ]
                },
                "message": {
                    "description": "Message.",
                    "type": "string",
                    "sort": true,
                    "required": true,
                    "primary": true,
                    "example": "The message associated with the flag.",
                    "fieldName": "message",
                    "fieldNamePath": "message",
                    "typeInfo": {
                        "desc": "string",
                        "pattern": ".+",
                        "name": "string"
                    }
                },
                "resourcefulContext": {
                    "description": "Reference to the Resource \"context\" that this Flow was triggered for",
                    "type": "string",
                    "sort": true,
                    "primary": true,
                    "array": true,
                    "example": [
                        "resourceful://metadata/contents/owner:resource1"
                    ],
                    "fieldName": "resourcefulContext",
                    "fieldNamePath": "resourcefulContext",
                    "typeInfo": {
                        "desc": "string",
                        "pattern": ".+",
                        "name": "string"
                    },
                    "filteredBy": [
                        "withResourcefulContext"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "fieldNamePath": "resourcefulContext",
                            "description": "filter by the supplied resourceful context",
                            "label": "resourcefulContext",
                            "prefix": true,
                            "name": "withResourcefulContext",
                            "and": true,
                            "or": true,
                            "valueType": "string"
                        }
                    ]
                },
                "instanceRef": {
                    "description": "Reference to the Instance.",
                    "type": "ref",
                    "sort": true,
                    "required": true,
                    "example": "owner:instance1",
                    "fieldName": "instanceRef",
                    "fieldNamePath": "instanceRef",
                    "typeInfo": {
                        "desc": "owner:name pair",
                        "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
                        "name": "ref"
                    },
                    "relatedBy": [
                        "flowInstance"
                    ],
                    "relationships": [
                        {
                            "description": "Reference to Instance resource",
                            "type": "direct",
                            "resourceType": "flowInstances",
                            "fieldNamePath": "instanceRef",
                            "fields": [
                                "ref",
                                "name"
                            ],
                            "name": "flowInstance",
                            "intersectable": false,
                            "batchSize": 10
                        }
                    ],
                    "filteredBy": [
                        "withInstanceRef"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "fieldNamePath": "instanceRef",
                            "description": "filter by the supplied Instance ref",
                            "label": "instanceRef",
                            "name": "withInstanceRef",
                            "and": true,
                            "or": true,
                            "valueType": "ref"
                        }
                    ]
                },
                "executionRef": {
                    "description": "Reference to the Execution.",
                    "type": "ref",
                    "sort": true,
                    "required": true,
                    "example": "owner:execution1",
                    "fieldName": "executionRef",
                    "fieldNamePath": "executionRef",
                    "typeInfo": {
                        "desc": "owner:name pair",
                        "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
                        "name": "ref"
                    },
                    "relatedBy": [
                        "flowExecution"
                    ],
                    "relationships": [
                        {
                            "description": "Reference to Execution resource",
                            "type": "direct",
                            "resourceType": "flowExecutions",
                            "fieldNamePath": "executionRef",
                            "fields": [
                                "ref",
                                "name"
                            ],
                            "name": "flowExecution",
                            "intersectable": false,
                            "batchSize": 10
                        }
                    ],
                    "filteredBy": [
                        "withExecutionRef"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "fieldNamePath": "executionRef",
                            "description": "filter by the supplied Execution ref",
                            "label": "executionRef",
                            "name": "withExecutionRef",
                            "and": true,
                            "or": true,
                            "valueType": "ref"
                        }
                    ]
                },
                "status": {
                    "description": "Status of the flag",
                    "type": "string",
                    "sort": true,
                    "required": true,
                    "primary": true,
                    "countable": true,
                    "default": "ACTIVE",
                    "allowedValues": [
                        {
                            "value": "CLEAR",
                            "description": "The flag is not active either because an exception did not occur or it has been resolved",
                            "alternatives": [],
                            "label": "CLEAR"
                        },
                        {
                            "value": "ACTIVE",
                            "description": "The flag is active and ready to be resolved",
                            "alternatives": [],
                            "label": "ACTIVE"
                        },
                        {
                            "value": "REJECTED",
                            "description": "The flag has been rejected",
                            "alternatives": [],
                            "label": "REJECTED"
                        }
                    ],
                    "example": "ACTIVE",
                    "fieldName": "status",
                    "fieldNamePath": "status",
                    "allowedValueMappings": {
                        "CLEAR": "CLEAR",
                        "ACTIVE": "ACTIVE",
                        "REJECTED": "REJECTED"
                    },
                    "typeInfo": {
                        "desc": "string",
                        "pattern": ".+",
                        "name": "string"
                    },
                    "filteredBy": [
                        "withStatus"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "fieldNamePath": "status",
                            "description": "filter by the supplied status",
                            "label": "status",
                            "name": "withStatus",
                            "and": true,
                            "or": true,
                            "valueType": "string"
                        }
                    ]
                },
                "comment": {
                    "description": "Open text field to allow editor to annotate the flag.",
                    "type": "string",
                    "primary": true,
                    "example": "The flag has been managed.",
                    "fieldName": "comment",
                    "fieldNamePath": "comment",
                    "typeInfo": {
                        "desc": "string",
                        "pattern": ".+",
                        "name": "string"
                    }
                }
            },
            "filters": {
                "q": {
                    "type": "q",
                    "label": "q",
                    "description": "filter by the supplied text",
                    "includes": [
                        "title"
                    ],
                    "name": "q",
                    "valueType": "string",
                    "text": true
                },
                "withName": {
                    "type": "with",
                    "label": "name",
                    "fieldNamePath": "name",
                    "description": "filter by the supplied name",
                    "prefix": true,
                    "name": "withName",
                    "and": true,
                    "or": true,
                    "valueType": "name"
                },
                "withTitle": {
                    "type": "with",
                    "label": "title",
                    "fieldNamePath": "title",
                    "description": "filter by the supplied title",
                    "prefix": true,
                    "name": "withTitle",
                    "and": true,
                    "or": true,
                    "valueType": "string"
                },
                "withRef": {
                    "type": "with",
                    "label": "ref",
                    "fieldNamePath": "ref",
                    "description": "filter by the supplied ref",
                    "name": "withRef",
                    "and": true,
                    "or": true,
                    "valueType": "ref"
                },
                "withAlternativeIdentifiers": {
                    "type": "with",
                    "label": "alternativeIdentifiers",
                    "fieldNamePath": "alternativeIdentifiers",
                    "description": "filter by the supplied alternative identifiers",
                    "prefix": true,
                    "name": "withAlternativeIdentifiers",
                    "and": true,
                    "or": true,
                    "valueType": "stringMap"
                },
                "withTags": {
                    "type": "with",
                    "label": "tags",
                    "fieldNamePath": "tags",
                    "description": "filter by the supplied tags",
                    "name": "withTags",
                    "and": true,
                    "or": true,
                    "valueType": "string"
                },
                "withScore": {
                    "type": "with",
                    "label": "scores",
                    "fieldNamePath": "scores",
                    "description": "filter by the supplied score",
                    "range": true,
                    "name": "withScore",
                    "and": true,
                    "or": true,
                    "valueType": "scores"
                },
                "withCreatedAt": {
                    "type": "with",
                    "label": "createdAt",
                    "fieldNamePath": "createdAt",
                    "description": "filter by the supplied createdAt",
                    "range": true,
                    "name": "withCreatedAt",
                    "and": true,
                    "or": true,
                    "valueType": "timestamp"
                },
                "withCreatedBy": {
                    "type": "with",
                    "label": "createdBy",
                    "fieldNamePath": "createdBy",
                    "description": "filter by the supplied createdBy",
                    "name": "withCreatedBy",
                    "and": true,
                    "or": true,
                    "valueType": "ref"
                },
                "withUpdatedAt": {
                    "type": "with",
                    "label": "updatedAt",
                    "fieldNamePath": "updatedAt",
                    "description": "filter by the supplied updatedAt",
                    "range": true,
                    "name": "withUpdatedAt",
                    "and": true,
                    "or": true,
                    "valueType": "timestamp"
                },
                "withUpdatedBy": {
                    "type": "with",
                    "label": "updatedBy",
                    "fieldNamePath": "updatedBy",
                    "description": "filter by the supplied updatedBy",
                    "name": "withUpdatedBy",
                    "and": true,
                    "or": true,
                    "valueType": "ref"
                },
                "withDeletedAt": {
                    "type": "with",
                    "label": "deletedAt",
                    "fieldNamePath": "deletedAt",
                    "prohibited": [
                        "enduser"
                    ],
                    "description": "filter by the supplied deletedAt",
                    "range": true,
                    "name": "withDeletedAt",
                    "and": true,
                    "or": true,
                    "valueType": "timestamp"
                },
                "withDeletedBy": {
                    "type": "with",
                    "label": "deletedBy",
                    "fieldNamePath": "deletedBy",
                    "prohibited": [
                        "enduser"
                    ],
                    "description": "filter by the supplied deletedBy",
                    "name": "withDeletedBy",
                    "and": true,
                    "or": true,
                    "valueType": "ref"
                },
                "withReapAt": {
                    "type": "with",
                    "label": "reapAt",
                    "fieldNamePath": "reapAt",
                    "prohibited": [
                        "enduser",
                        "service",
                        "admin"
                    ],
                    "description": "filter by the supplied reapAt",
                    "range": true,
                    "name": "withReapAt",
                    "and": true,
                    "or": true,
                    "valueType": "timestamp"
                },
                "withExecutionRef": {
                    "type": "with",
                    "fieldNamePath": "executionRef",
                    "description": "filter by the supplied Execution ref",
                    "label": "executionRef",
                    "name": "withExecutionRef",
                    "and": true,
                    "or": true,
                    "valueType": "ref"
                },
                "withInstanceRef": {
                    "type": "with",
                    "fieldNamePath": "instanceRef",
                    "description": "filter by the supplied Instance ref",
                    "label": "instanceRef",
                    "name": "withInstanceRef",
                    "and": true,
                    "or": true,
                    "valueType": "ref"
                },
                "withTaskRef": {
                    "type": "with",
                    "fieldNamePath": "taskRef",
                    "description": "filter by the supplied Task ref",
                    "label": "taskRef",
                    "name": "withTaskRef",
                    "and": true,
                    "or": true,
                    "valueType": "ref"
                },
                "withResourcefulContext": {
                    "type": "with",
                    "fieldNamePath": "resourcefulContext",
                    "description": "filter by the supplied resourceful context",
                    "label": "resourcefulContext",
                    "prefix": true,
                    "name": "withResourcefulContext",
                    "and": true,
                    "or": true,
                    "valueType": "string"
                },
                "withStatus": {
                    "type": "with",
                    "fieldNamePath": "status",
                    "description": "filter by the supplied status",
                    "label": "status",
                    "name": "withStatus",
                    "and": true,
                    "or": true,
                    "valueType": "string"
                }
            },
            "relationships": {
                "flowExecution": {
                    "description": "Reference to Execution resource",
                    "type": "direct",
                    "resourceType": "flowExecutions",
                    "fieldNamePath": "executionRef",
                    "fields": [
                        "ref",
                        "name"
                    ],
                    "name": "flowExecution",
                    "intersectable": false,
                    "batchSize": 10
                },
                "flowInstance": {
                    "description": "Reference to Instance resource",
                    "type": "direct",
                    "resourceType": "flowInstances",
                    "fieldNamePath": "instanceRef",
                    "fields": [
                        "ref",
                        "name"
                    ],
                    "name": "flowInstance",
                    "intersectable": false,
                    "batchSize": 10
                },
                "flowTask": {
                    "description": "Reference to Task resource",
                    "type": "direct",
                    "resourceType": "flowTasks",
                    "fieldNamePath": "taskRef",
                    "fields": [
                        "ref",
                        "name"
                    ],
                    "name": "flowTask",
                    "intersectable": false,
                    "batchSize": 10
                }
            },
            "restrictions": [
                {
                    "type": "ownership",
                    "message": "must contain an owner for which you have permission",
                    "description": "users can only interact with resources that are owned by a tenant they have access to"
                },
                {
                    "type": "unmodifiable",
                    "message": "not allowed to modify resources created by root:root",
                    "description": "users are not allowed to modify resources that were created by root:root"
                },
                {
                    "type": "primaryKey",
                    "message": "primaryKey must be unique",
                    "description": "the primary key (ref) is derived from owner and name, allowing name to be a tenant specific unique external id"
                }
            ],
            "singularName": "flowFlag",
            "pluralName": "flowFlags",
            "serviceName": "workflow",
            "description": "A flag for when intervention is needed in a workflow",
            "conditionalUpdates": true,
            "hyphenatedPluralName": "flow-flags",
            "retentionPeriod": "P0D",
            "typeInfo": {}
        },
        "flowInstances": {
            "path": "/data",
            "stability": "stable",
            "operations": {
                "browse": {
                    "description": "Fetches a list of flow instances that may be filtered",
                    "actions": [
                        "workflow:flow-instances:read",
                        "workflow:flow-instances:read:browse"
                    ]
                },
                "get": {
                    "description": "Fetches one or more flow instances using the supplied id(s)",
                    "actions": [
                        "workflow:flow-instances:read",
                        "workflow:flow-instances:read:get"
                    ]
                },
                "storeBatch": {
                    "description": "Stores one or more flow instances, either creating or wholly replacing",
                    "actions": [
                        "workflow:flow-instances:write",
                        "workflow:flow-instances:write:store",
                        "workflow:flow-instances:write:store:batch"
                    ],
                    "limit": 100
                },
                "storeOne": {
                    "description": "Stores the supplied flow instance with the supplied id, either creating or wholly replacing",
                    "actions": [
                        "workflow:flow-instances:write",
                        "workflow:flow-instances:write:store",
                        "workflow:flow-instances:write:store:one"
                    ]
                },
                "delete": {
                    "description": "Delete one or more flow instances using the supplied id(s)",
                    "actions": [
                        "workflow:flow-instances:write",
                        "workflow:flow-instances:write:delete"
                    ]
                }
            },
            "pagination": {
                "pageSize": {
                    "min": 1,
                    "max": 100,
                    "default": 100
                },
                "pages": {
                    "max": 100
                }
            },
            "display": {
                "priority": 4,
                "overview": {
                    "label": "title"
                },
                "info": {
                    "primary": [
                        "ref",
                        "owner",
                        "name"
                    ],
                    "secondary": [
                        "alternativeIdentifiers",
                        "tags",
                        "custom"
                    ],
                    "history": [
                        "createdAt",
                        "createdBy",
                        "updatedAt",
                        "updatedBy",
                        "deletedAt",
                        "deletedBy",
                        "reapAt",
                        "version"
                    ]
                },
                "groups": {
                    "custom": [
                        "custom"
                    ],
                    "identity": [
                        "ref",
                        "owner",
                        "name",
                        "alternativeIdentifiers"
                    ],
                    "history": [
                        "createdAt",
                        "createdBy",
                        "updatedAt",
                        "updatedBy",
                        "deletedAt",
                        "deletedBy",
                        "reapAt",
                        "version"
                    ],
                    "tags": [
                        "tags"
                    ],
                    "overview": [
                        "executionStatus",
                        "critical",
                        "priority"
                    ],
                    "context": [
                        "resourcefulContext",
                        "flowRef",
                        "taskRef",
                        "policyRef"
                    ]
                },
                "singularName": "flow instance",
                "pluralName": "flow instances"
            },
            "fields": {
                "ref": {
                    "description": "The derived owner:name reference",
                    "type": "ref",
                    "readOnly": true,
                    "sort": true,
                    "example": "test:resource-name",
                    "fieldName": "ref",
                    "fieldNamePath": "ref",
                    "typeInfo": {
                        "desc": "owner:name pair",
                        "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
                        "name": "ref"
                    },
                    "filteredBy": [
                        "withRef"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "ref",
                            "fieldNamePath": "ref",
                            "description": "filter by the supplied ref",
                            "name": "withRef",
                            "and": true,
                            "or": true,
                            "valueType": "ref"
                        }
                    ]
                },
                "alternativeIdentifiers": {
                    "type": "stringMap",
                    "description": "A map of alternative identifiers for this resource",
                    "example": {
                        "tel": "0800100100",
                        "said": "something"
                    },
                    "fieldName": "alternativeIdentifiers",
                    "fieldNamePath": "alternativeIdentifiers",
                    "typeInfo": {
                        "keys": {
                            "pattern": "[a-zA-Z0-9]+"
                        },
                        "values": {
                            "pattern": "(.+)",
                            "desc": "string"
                        },
                        "desc": "key-value pairs",
                        "name": "stringMap"
                    },
                    "filteredBy": [
                        "withAlternativeIdentifiers"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "alternativeIdentifiers",
                            "fieldNamePath": "alternativeIdentifiers",
                            "description": "filter by the supplied alternativeIdentifiers, e.g. withAlternativeIdentifiers=auroraJobId:a-id",
                            "prefix": true,
                            "name": "withAlternativeIdentifiers",
                            "and": true,
                            "or": true,
                            "valueType": "stringMap"
                        }
                    ]
                },
                "owner": {
                    "description": "The tenant owner name",
                    "type": "name",
                    "required": true,
                    "sort": true,
                    "example": "test",
                    "countable": true,
                    "fieldName": "owner",
                    "fieldNamePath": "owner",
                    "typeInfo": {
                        "desc": "name",
                        "pattern": "[a-zA-Z0-9_-]+",
                        "name": "name"
                    }
                },
                "name": {
                    "description": "The tenant specific unique name",
                    "type": "name",
                    "sort": true,
                    "example": "resource-name",
                    "fieldName": "name",
                    "fieldNamePath": "name",
                    "typeInfo": {
                        "desc": "name",
                        "pattern": "[a-zA-Z0-9_-]+",
                        "name": "name"
                    },
                    "filteredBy": [
                        "withName"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "name",
                            "fieldNamePath": "name",
                            "description": "filter by the supplied name",
                            "prefix": true,
                            "name": "withName",
                            "and": true,
                            "or": true,
                            "valueType": "name"
                        }
                    ]
                },
                "title": {
                    "description": "The title for the resource. Will be set to the value of `name` if not supplied",
                    "type": "string",
                    "sort": true,
                    "example": "resource-title",
                    "primary": true,
                    "fieldName": "title",
                    "fieldNamePath": "title",
                    "typeInfo": {
                        "desc": "string",
                        "pattern": ".+",
                        "name": "string"
                    },
                    "filteredBy": [
                        "withTitle"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "title",
                            "fieldNamePath": "title",
                            "description": "filter by the supplied title",
                            "prefix": true,
                            "name": "withTitle",
                            "and": true,
                            "or": true,
                            "valueType": "string"
                        }
                    ]
                },
                "tags": {
                    "description": "tags for the resource",
                    "type": "string",
                    "array": true,
                    "example": [
                        "todo",
                        "usage:boxart"
                    ],
                    "fieldName": "tags",
                    "fieldNamePath": "tags",
                    "typeInfo": {
                        "desc": "string",
                        "pattern": ".+",
                        "name": "string"
                    },
                    "filteredBy": [
                        "withTags"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "tags",
                            "fieldNamePath": "tags",
                            "description": "filter by the supplied tags",
                            "name": "withTags",
                            "and": true,
                            "or": true,
                            "valueType": "string"
                        }
                    ]
                },
                "scores": {
                    "description": "scores for the resource",
                    "type": "scores",
                    "example": {
                        "imdb.a3431": 0.9,
                        "fuse": 2
                    },
                    "fieldName": "scores",
                    "fieldNamePath": "scores",
                    "typeInfo": {
                        "keys": {
                            "pattern": "(?:[a-zA-Z0-9]+)(?:\\.[a-zA-Z0-9]+)*"
                        },
                        "values": {
                            "desc": "number",
                            "pattern": "-?\\d+(?:\\.\\d+)?"
                        },
                        "desc": "Map of FieldNamePath:Number pairs",
                        "name": "scores"
                    },
                    "filteredBy": [
                        "withScore"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "scores",
                            "fieldNamePath": "scores",
                            "description": "filter by the supplied score",
                            "range": true,
                            "name": "withScore",
                            "and": true,
                            "or": true,
                            "valueType": "scores"
                        }
                    ]
                },
                "custom": {
                    "description": "The tenant specific custom fields.  This may be used to hold tenant specific data alongside the document, but it should not be used as a substitute for normal fields.",
                    "type": "map",
                    "max": 100,
                    "fieldName": "custom",
                    "fieldNamePath": "custom",
                    "typeInfo": {
                        "keys": {
                            "pattern": "[a-zA-Z0-9]+"
                        },
                        "values": {
                            "pattern": "(.+)",
                            "desc": "scalar value or an array of scalar values"
                        },
                        "desc": "key-value pairs"
                    }
                },
                "createdAt": {
                    "description": "The timestamp when created",
                    "type": "timestamp",
                    "readOnly": true,
                    "example": "2014-12-25T12:00:00.000Z",
                    "sort": true,
                    "excludeFromVersion": true,
                    "fieldName": "createdAt",
                    "fieldNamePath": "createdAt",
                    "filteredBy": [
                        "withCreatedAt"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "createdAt",
                            "fieldNamePath": "createdAt",
                            "description": "filter by the supplied createdAt",
                            "range": true,
                            "name": "withCreatedAt",
                            "and": true,
                            "or": true,
                            "valueType": "timestamp"
                        }
                    ]
                },
                "createdBy": {
                    "description": "The user that created",
                    "type": "ref",
                    "readOnly": true,
                    "example": "test:test-admin",
                    "sort": true,
                    "fieldName": "createdBy",
                    "fieldNamePath": "createdBy",
                    "typeInfo": {
                        "desc": "owner:name pair",
                        "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
                        "name": "ref"
                    },
                    "filteredBy": [
                        "withCreatedBy"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "createdBy",
                            "fieldNamePath": "createdBy",
                            "description": "filter by the supplied createdBy",
                            "name": "withCreatedBy",
                            "and": true,
                            "or": true,
                            "valueType": "ref"
                        }
                    ]
                },
                "updatedAt": {
                    "description": "The timestamp when last updated",
                    "type": "timestamp",
                    "readOnly": true,
                    "example": "2014-12-25T12:00:00.000Z",
                    "sort": true,
                    "excludeFromVersion": true,
                    "fieldName": "updatedAt",
                    "fieldNamePath": "updatedAt",
                    "filteredBy": [
                        "withUpdatedAt"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "updatedAt",
                            "fieldNamePath": "updatedAt",
                            "description": "filter by the supplied updatedAt",
                            "range": true,
                            "name": "withUpdatedAt",
                            "and": true,
                            "or": true,
                            "valueType": "timestamp"
                        }
                    ]
                },
                "updatedBy": {
                    "description": "The user that last updated",
                    "type": "ref",
                    "readOnly": true,
                    "example": "test:test-admin",
                    "sort": true,
                    "fieldName": "updatedBy",
                    "fieldNamePath": "updatedBy",
                    "typeInfo": {
                        "desc": "owner:name pair",
                        "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
                        "name": "ref"
                    },
                    "filteredBy": [
                        "withUpdatedBy"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "updatedBy",
                            "fieldNamePath": "updatedBy",
                            "description": "filter by the supplied updatedBy",
                            "name": "withUpdatedBy",
                            "and": true,
                            "or": true,
                            "valueType": "ref"
                        }
                    ]
                },
                "deletedAt": {
                    "description": "The timestamp when deleted (only applicable to deleted resources)",
                    "type": "timestamp",
                    "readOnly": true,
                    "example": "2014-12-25T12:00:00.000Z",
                    "sort": true,
                    "excludeFromVersion": true,
                    "fieldName": "deletedAt",
                    "fieldNamePath": "deletedAt",
                    "filteredBy": [
                        "withDeletedAt"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "deletedAt",
                            "fieldNamePath": "deletedAt",
                            "prohibited": [
                                "enduser"
                            ],
                            "description": "filter by the supplied deletedAt",
                            "range": true,
                            "name": "withDeletedAt",
                            "and": true,
                            "or": true,
                            "valueType": "timestamp"
                        }
                    ]
                },
                "deletedBy": {
                    "description": "The user that deleted (only applicable to deleted resources)",
                    "type": "ref",
                    "readOnly": true,
                    "example": "test:test-admin",
                    "sort": true,
                    "excludeFromVersion": true,
                    "fieldName": "deletedBy",
                    "fieldNamePath": "deletedBy",
                    "typeInfo": {
                        "desc": "owner:name pair",
                        "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
                        "name": "ref"
                    },
                    "filteredBy": [
                        "withDeletedBy"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "deletedBy",
                            "fieldNamePath": "deletedBy",
                            "prohibited": [
                                "enduser"
                            ],
                            "description": "filter by the supplied deletedBy",
                            "name": "withDeletedBy",
                            "and": true,
                            "or": true,
                            "valueType": "ref"
                        }
                    ]
                },
                "reapAt": {
                    "description": "The timestamp for reaping (only applicable to deleted resources)",
                    "type": "timestamp",
                    "readOnly": true,
                    "example": "2014-12-25T12:00:00.000Z",
                    "sort": true,
                    "excludeFromVersion": true,
                    "fieldName": "reapAt",
                    "fieldNamePath": "reapAt",
                    "filteredBy": [
                        "withReapAt"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "reapAt",
                            "fieldNamePath": "reapAt",
                            "prohibited": [
                                "enduser",
                                "service",
                                "admin"
                            ],
                            "description": "filter by the supplied reapAt",
                            "range": true,
                            "name": "withReapAt",
                            "and": true,
                            "or": true,
                            "valueType": "timestamp"
                        }
                    ]
                },
                "version": {
                    "description": "The version hash (computed)",
                    "type": "version",
                    "readOnly": true,
                    "example": "356b54eb90cd04566159dfb9c95a0426998a2f7b",
                    "excludeFromVersion": true,
                    "fieldName": "version",
                    "fieldNamePath": "version",
                    "typeInfo": {
                        "desc": "sha1 hex encoded hash",
                        "pattern": "[a-f0-9]{40}"
                    }
                },
                "metadata": {
                    "description": "A field that holds metadata about the resource",
                    "excludeFromVersion": true,
                    "fields": {},
                    "fieldName": "metadata",
                    "fieldNamePath": "metadata",
                    "typeInfo": {}
                },
                "flowRef": {
                    "description": "Reference to the Flow from which this Flow Instance was created.",
                    "type": "ref",
                    "sort": true,
                    "required": true,
                    "example": "owner:flow1",
                    "fieldName": "flowRef",
                    "fieldNamePath": "flowRef",
                    "typeInfo": {
                        "desc": "owner:name pair",
                        "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
                        "name": "ref"
                    },
                    "relatedBy": [
                        "flow"
                    ],
                    "relationships": [
                        {
                            "description": "Reference to flow resource",
                            "type": "direct",
                            "resourceType": "flows",
                            "fieldNamePath": "flowRef",
                            "fields": [
                                "ref",
                                "name",
                                "title",
                                "description",
                                "clientToolsVersion"
                            ],
                            "name": "flow",
                            "intersectable": false,
                            "batchSize": 10
                        }
                    ],
                    "filteredBy": [
                        "withFlowRef"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "fieldNamePath": "flowRef",
                            "description": "filter by the supplied flow ref",
                            "label": "flowRef",
                            "name": "withFlowRef",
                            "and": true,
                            "or": true,
                            "valueType": "ref"
                        }
                    ]
                },
                "resourcefulContext": {
                    "description": "Reference to the Resource \"context\" that this Flow was triggered for",
                    "type": "string",
                    "sort": true,
                    "primary": true,
                    "array": true,
                    "example": [
                        "resourceful://metadata/contents/owner:resource1"
                    ],
                    "fieldName": "resourcefulContext",
                    "fieldNamePath": "resourcefulContext",
                    "typeInfo": {
                        "desc": "string",
                        "pattern": ".+",
                        "name": "string"
                    },
                    "filteredBy": [
                        "withResourcefulContext"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "fieldNamePath": "resourcefulContext",
                            "description": "filter by the supplied resourceful context",
                            "label": "resourcefulContext",
                            "prefix": true,
                            "name": "withResourcefulContext",
                            "and": true,
                            "or": true,
                            "valueType": "string"
                        }
                    ]
                },
                "critical": {
                    "description": "Specifies the criticality of this Flow Instance. Critical Flow Instances may preempt non-critical Flow Instances if there is insufficient quota. The default is non-critical.",
                    "type": "boolean",
                    "default": false,
                    "fieldName": "critical",
                    "fieldNamePath": "critical",
                    "typeInfo": {
                        "desc": "true or false",
                        "pattern": "(?:true|false)",
                        "name": "boolean"
                    }
                },
                "bindings": {
                    "description": "The set of binding parameters supplied as part of this Flow Instance. The binding parameters are key-value pairs which are used during template property placeholder substitution.",
                    "type": "stringMap",
                    "required": true,
                    "fieldName": "bindings",
                    "fieldNamePath": "bindings",
                    "typeInfo": {
                        "keys": {
                            "pattern": "[a-zA-Z0-9]+"
                        },
                        "values": {
                            "pattern": "(.+)",
                            "desc": "string"
                        },
                        "desc": "key-value pairs",
                        "name": "stringMap"
                    }
                },
                "priority": {
                    "description": "The priority assignment for this Flow Instance.",
                    "type": "integer",
                    "sort": true,
                    "primary": true,
                    "default": 0,
                    "fieldName": "priority",
                    "fieldNamePath": "priority",
                    "typeInfo": {
                        "desc": "integer",
                        "pattern": "-?[0-9]+"
                    }
                },
                "policyRef": {
                    "description": "Reference to the Policy.",
                    "type": "ref",
                    "fieldName": "policyRef",
                    "fieldNamePath": "policyRef",
                    "typeInfo": {
                        "desc": "owner:name pair",
                        "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
                        "name": "ref"
                    },
                    "relatedBy": [
                        "policy"
                    ],
                    "relationships": [
                        {
                            "description": "Reference to policy resource",
                            "type": "direct",
                            "resourceType": "policies",
                            "fieldNamePath": "policyRef",
                            "fields": [
                                "ref",
                                "name",
                                "bindings"
                            ],
                            "name": "policy",
                            "intersectable": false,
                            "batchSize": 10
                        }
                    ],
                    "filteredBy": [
                        "withPolicyRef"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "fieldNamePath": "policyRef",
                            "description": "filter by the supplied policy ref",
                            "label": "policyRef",
                            "name": "withPolicyRef",
                            "and": true,
                            "or": true,
                            "valueType": "ref"
                        }
                    ]
                },
                "schedulingRef": {
                    "description": "Reference to the Scheduling to be applied to the instance execution.",
                    "type": "ref",
                    "fieldName": "schedulingRef",
                    "fieldNamePath": "schedulingRef",
                    "typeInfo": {
                        "desc": "owner:name pair",
                        "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
                        "name": "ref"
                    },
                    "relatedBy": [
                        "scheduling"
                    ],
                    "relationships": [
                        {
                            "description": "Reference to scheduling resource",
                            "type": "direct",
                            "resourceType": "schedulings",
                            "fieldNamePath": "schedulingRef",
                            "fields": [
                                "ref",
                                "name",
                                "deployment"
                            ],
                            "name": "scheduling",
                            "intersectable": false,
                            "batchSize": 10
                        }
                    ],
                    "filteredBy": [
                        "withSchedulingRef"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "fieldNamePath": "schedulingRef",
                            "description": "filter by the supplied scheduling ref",
                            "label": "schedulingRef",
                            "name": "withSchedulingRef",
                            "and": true,
                            "or": true,
                            "valueType": "ref"
                        }
                    ]
                },
                "taskRef": {
                    "description": "Reference to a Task.",
                    "type": "ref",
                    "fieldName": "taskRef",
                    "fieldNamePath": "taskRef",
                    "typeInfo": {
                        "desc": "owner:name pair",
                        "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
                        "name": "ref"
                    },
                    "relatedBy": [
                        "flowTask"
                    ],
                    "relationships": [
                        {
                            "description": "Reference to Task resource",
                            "type": "direct",
                            "resourceType": "flowTasks",
                            "fieldNamePath": "taskRef",
                            "fields": [
                                "ref",
                                "name"
                            ],
                            "name": "flowTask",
                            "intersectable": false,
                            "batchSize": 10
                        }
                    ],
                    "filteredBy": [
                        "withTaskRef"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "fieldNamePath": "taskRef",
                            "description": "filter by the supplied task ref",
                            "label": "taskRef",
                            "name": "withTaskRef",
                            "and": true,
                            "or": true,
                            "valueType": "ref"
                        }
                    ]
                },
                "candidate": {
                    "description": "Contains the candidates.",
                    "type": "stringMap",
                    "example": {
                        "predict": "true"
                    },
                    "fieldName": "candidate",
                    "fieldNamePath": "candidate",
                    "typeInfo": {
                        "keys": {
                            "pattern": "[a-zA-Z0-9]+"
                        },
                        "values": {
                            "pattern": "(.+)",
                            "desc": "string"
                        },
                        "desc": "key-value pairs",
                        "name": "stringMap"
                    }
                },
                "executionStatus": {
                    "description": "Define the current status of the execution",
                    "type": "string",
                    "allowedValues": [
                        {
                            "value": "PENDING",
                            "description": "The execution is queued waiting for available resource quota.",
                            "alternatives": [],
                            "label": "PENDING"
                        },
                        {
                            "value": "STARTING",
                            "description": "The execution has been scheduled for execution.",
                            "alternatives": [],
                            "label": "STARTING"
                        },
                        {
                            "value": "RUNNING",
                            "description": "The execution has been successfully initialised and is running.",
                            "alternatives": [],
                            "label": "RUNNING"
                        },
                        {
                            "value": "KILLING",
                            "description": "The execution has been tagged to be killed and will begin shutting down.",
                            "alternatives": [],
                            "label": "KILLING"
                        },
                        {
                            "value": "KILLED",
                            "description": "The execution has been successfully killed. This is a terminal state.",
                            "alternatives": [],
                            "label": "KILLED"
                        },
                        {
                            "value": "RESTARTING",
                            "description": "The execution has been tagged to be restarted.",
                            "alternatives": [],
                            "label": "RESTARTING"
                        },
                        {
                            "value": "FINISHED",
                            "description": "The execution finished without errors. This is a terminal state.",
                            "alternatives": [],
                            "label": "FINISHED"
                        },
                        {
                            "value": "FAILED",
                            "description": "The execution finished after reaching a set of failure limits. This is a terminal state.",
                            "alternatives": [],
                            "label": "FAILED"
                        },
                        {
                            "value": "LOST",
                            "description": "The execution stayed in a transient state for too long and has been considered lost. This is a terminal state.",
                            "alternatives": [],
                            "label": "LOST"
                        },
                        {
                            "value": "INVALID",
                            "description": "The execution has some invalid parameter and cannot be performed. This is a terminal state.",
                            "alternatives": [],
                            "label": "INVALID"
                        }
                    ],
                    "sort": true,
                    "primary": true,
                    "example": "FINISHED",
                    "fieldName": "executionStatus",
                    "fieldNamePath": "executionStatus",
                    "allowedValueMappings": {
                        "PENDING": "PENDING",
                        "STARTING": "STARTING",
                        "RUNNING": "RUNNING",
                        "KILLING": "KILLING",
                        "KILLED": "KILLED",
                        "RESTARTING": "RESTARTING",
                        "FINISHED": "FINISHED",
                        "FAILED": "FAILED",
                        "LOST": "LOST",
                        "INVALID": "INVALID"
                    },
                    "typeInfo": {
                        "desc": "string",
                        "pattern": ".+",
                        "name": "string"
                    },
                    "filteredBy": [
                        "withExecutionStatus"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "fieldNamePath": "executionStatus",
                            "description": "filter by the supplied execution status",
                            "label": "executionStatus",
                            "name": "withExecutionStatus",
                            "and": true,
                            "or": true,
                            "valueType": "string"
                        }
                    ]
                }
            },
            "filters": {
                "q": {
                    "type": "q",
                    "label": "q",
                    "description": "filter by the supplied text",
                    "includes": [
                        "title"
                    ],
                    "name": "q",
                    "valueType": "string",
                    "text": true
                },
                "withName": {
                    "type": "with",
                    "label": "name",
                    "fieldNamePath": "name",
                    "description": "filter by the supplied name",
                    "prefix": true,
                    "name": "withName",
                    "and": true,
                    "or": true,
                    "valueType": "name"
                },
                "withTitle": {
                    "type": "with",
                    "label": "title",
                    "fieldNamePath": "title",
                    "description": "filter by the supplied title",
                    "prefix": true,
                    "name": "withTitle",
                    "and": true,
                    "or": true,
                    "valueType": "string"
                },
                "withRef": {
                    "type": "with",
                    "label": "ref",
                    "fieldNamePath": "ref",
                    "description": "filter by the supplied ref",
                    "name": "withRef",
                    "and": true,
                    "or": true,
                    "valueType": "ref"
                },
                "withAlternativeIdentifiers": {
                    "type": "with",
                    "label": "alternativeIdentifiers",
                    "fieldNamePath": "alternativeIdentifiers",
                    "description": "filter by the supplied alternativeIdentifiers, e.g. withAlternativeIdentifiers=auroraJobId:a-id",
                    "prefix": true,
                    "name": "withAlternativeIdentifiers",
                    "and": true,
                    "or": true,
                    "valueType": "stringMap"
                },
                "withTags": {
                    "type": "with",
                    "label": "tags",
                    "fieldNamePath": "tags",
                    "description": "filter by the supplied tags",
                    "name": "withTags",
                    "and": true,
                    "or": true,
                    "valueType": "string"
                },
                "withScore": {
                    "type": "with",
                    "label": "scores",
                    "fieldNamePath": "scores",
                    "description": "filter by the supplied score",
                    "range": true,
                    "name": "withScore",
                    "and": true,
                    "or": true,
                    "valueType": "scores"
                },
                "withCreatedAt": {
                    "type": "with",
                    "label": "createdAt",
                    "fieldNamePath": "createdAt",
                    "description": "filter by the supplied createdAt",
                    "range": true,
                    "name": "withCreatedAt",
                    "and": true,
                    "or": true,
                    "valueType": "timestamp"
                },
                "withCreatedBy": {
                    "type": "with",
                    "label": "createdBy",
                    "fieldNamePath": "createdBy",
                    "description": "filter by the supplied createdBy",
                    "name": "withCreatedBy",
                    "and": true,
                    "or": true,
                    "valueType": "ref"
                },
                "withUpdatedAt": {
                    "type": "with",
                    "label": "updatedAt",
                    "fieldNamePath": "updatedAt",
                    "description": "filter by the supplied updatedAt",
                    "range": true,
                    "name": "withUpdatedAt",
                    "and": true,
                    "or": true,
                    "valueType": "timestamp"
                },
                "withUpdatedBy": {
                    "type": "with",
                    "label": "updatedBy",
                    "fieldNamePath": "updatedBy",
                    "description": "filter by the supplied updatedBy",
                    "name": "withUpdatedBy",
                    "and": true,
                    "or": true,
                    "valueType": "ref"
                },
                "withDeletedAt": {
                    "type": "with",
                    "label": "deletedAt",
                    "fieldNamePath": "deletedAt",
                    "prohibited": [
                        "enduser"
                    ],
                    "description": "filter by the supplied deletedAt",
                    "range": true,
                    "name": "withDeletedAt",
                    "and": true,
                    "or": true,
                    "valueType": "timestamp"
                },
                "withDeletedBy": {
                    "type": "with",
                    "label": "deletedBy",
                    "fieldNamePath": "deletedBy",
                    "prohibited": [
                        "enduser"
                    ],
                    "description": "filter by the supplied deletedBy",
                    "name": "withDeletedBy",
                    "and": true,
                    "or": true,
                    "valueType": "ref"
                },
                "withReapAt": {
                    "type": "with",
                    "label": "reapAt",
                    "fieldNamePath": "reapAt",
                    "prohibited": [
                        "enduser",
                        "service",
                        "admin"
                    ],
                    "description": "filter by the supplied reapAt",
                    "range": true,
                    "name": "withReapAt",
                    "and": true,
                    "or": true,
                    "valueType": "timestamp"
                },
                "withResourcefulContext": {
                    "type": "with",
                    "fieldNamePath": "resourcefulContext",
                    "description": "filter by the supplied resourceful context",
                    "label": "resourcefulContext",
                    "prefix": true,
                    "name": "withResourcefulContext",
                    "and": true,
                    "or": true,
                    "valueType": "string"
                },
                "withFlowRef": {
                    "type": "with",
                    "fieldNamePath": "flowRef",
                    "description": "filter by the supplied flow ref",
                    "label": "flowRef",
                    "name": "withFlowRef",
                    "and": true,
                    "or": true,
                    "valueType": "ref"
                },
                "withPolicyRef": {
                    "type": "with",
                    "fieldNamePath": "policyRef",
                    "description": "filter by the supplied policy ref",
                    "label": "policyRef",
                    "name": "withPolicyRef",
                    "and": true,
                    "or": true,
                    "valueType": "ref"
                },
                "withSchedulingRef": {
                    "type": "with",
                    "fieldNamePath": "schedulingRef",
                    "description": "filter by the supplied scheduling ref",
                    "label": "schedulingRef",
                    "name": "withSchedulingRef",
                    "and": true,
                    "or": true,
                    "valueType": "ref"
                },
                "withExecutionStatus": {
                    "type": "with",
                    "fieldNamePath": "executionStatus",
                    "description": "filter by the supplied execution status",
                    "label": "executionStatus",
                    "name": "withExecutionStatus",
                    "and": true,
                    "or": true,
                    "valueType": "string"
                },
                "withTaskRef": {
                    "type": "with",
                    "fieldNamePath": "taskRef",
                    "description": "filter by the supplied task ref",
                    "label": "taskRef",
                    "name": "withTaskRef",
                    "and": true,
                    "or": true,
                    "valueType": "ref"
                }
            },
            "relationships": {
                "flow": {
                    "description": "Reference to flow resource",
                    "type": "direct",
                    "resourceType": "flows",
                    "fieldNamePath": "flowRef",
                    "fields": [
                        "ref",
                        "name",
                        "title",
                        "description",
                        "clientToolsVersion"
                    ],
                    "name": "flow",
                    "intersectable": false,
                    "batchSize": 10
                },
                "flowExecutions": {
                    "description": "All flowExecutions related to this flowInstance",
                    "type": "indirect",
                    "resourceType": "flowExecutions",
                    "filterName": "withInstanceRef",
                    "fields": [
                        "ref",
                        "name",
                        "alternativeIdentifiers"
                    ],
                    "name": "flowExecutions",
                    "intersectable": false,
                    "batchSize": 10
                },
                "flowCommands": {
                    "description": "All flowCommands related to this flowInstance",
                    "type": "indirect",
                    "resourceType": "flowCommands",
                    "filterName": "withInstanceRef",
                    "fields": [
                        "ref",
                        "action",
                        "parameters"
                    ],
                    "name": "flowCommands",
                    "intersectable": false,
                    "batchSize": 10
                },
                "policy": {
                    "description": "Reference to policy resource",
                    "type": "direct",
                    "resourceType": "policies",
                    "fieldNamePath": "policyRef",
                    "fields": [
                        "ref",
                        "name",
                        "bindings"
                    ],
                    "name": "policy",
                    "intersectable": false,
                    "batchSize": 10
                },
                "scheduling": {
                    "description": "Reference to scheduling resource",
                    "type": "direct",
                    "resourceType": "schedulings",
                    "fieldNamePath": "schedulingRef",
                    "fields": [
                        "ref",
                        "name",
                        "deployment"
                    ],
                    "name": "scheduling",
                    "intersectable": false,
                    "batchSize": 10
                },
                "flowTask": {
                    "description": "Reference to Task resource",
                    "type": "direct",
                    "resourceType": "flowTasks",
                    "fieldNamePath": "taskRef",
                    "fields": [
                        "ref",
                        "name"
                    ],
                    "name": "flowTask",
                    "intersectable": false,
                    "batchSize": 10
                },
                "flowPredictions": {
                    "description": "All flowPredictions related to this flowInstance",
                    "type": "indirect",
                    "resourceType": "flowPredictions",
                    "filterName": "withInstanceRef",
                    "fields": [
                        "ref",
                        "estimatedDuration",
                        "errors"
                    ],
                    "name": "flowPredictions",
                    "intersectable": false,
                    "batchSize": 10
                },
                "flowFlags": {
                    "description": "All flowFlags related to this flowInstance",
                    "type": "indirect",
                    "resourceType": "flowFlags",
                    "filterName": "withInstanceRef",
                    "fields": [
                        "ref",
                        "name"
                    ],
                    "name": "flowFlags",
                    "intersectable": false,
                    "batchSize": 10
                }
            },
            "restrictions": [
                {
                    "type": "ownership",
                    "message": "must contain an owner for which you have permission",
                    "description": "users can only interact with resources that are owned by a tenant they have access to"
                },
                {
                    "type": "unmodifiable",
                    "message": "not allowed to modify resources created by root:root",
                    "description": "users are not allowed to modify resources that were created by root:root"
                },
                {
                    "type": "primaryKey",
                    "message": "primaryKey must be unique",
                    "description": "the primary key (ref) is derived from owner and name, allowing name to be a tenant specific unique external id"
                }
            ],
            "singularName": "flowInstance",
            "pluralName": "flowInstances",
            "serviceName": "workflow",
            "description": "Represent a Flow with a collection of bound variables which can be executed multiple times. It relates directly to a Job within Aurora",
            "conditionalUpdates": true,
            "hyphenatedPluralName": "flow-instances",
            "retentionPeriod": "P0D",
            "typeInfo": {}
        },
        "flowPredictions": {
            "path": "/data",
            "stability": "experimental",
            "operations": {
                "browse": {
                    "description": "Fetches a list of flow predictions that may be filtered",
                    "actions": [
                        "workflow:flow-predictions:read",
                        "workflow:flow-predictions:read:browse"
                    ]
                },
                "get": {
                    "description": "Fetches one or more flow predictions using the supplied id(s)",
                    "actions": [
                        "workflow:flow-predictions:read",
                        "workflow:flow-predictions:read:get"
                    ]
                },
                "storeBatch": {
                    "description": "Stores one or more flow predictions, either creating or wholly replacing",
                    "actions": [
                        "workflow:flow-predictions:write",
                        "workflow:flow-predictions:write:store",
                        "workflow:flow-predictions:write:store:batch"
                    ],
                    "limit": 100
                },
                "storeOne": {
                    "description": "Stores the supplied flow prediction with the supplied id, either creating or wholly replacing",
                    "actions": [
                        "workflow:flow-predictions:write",
                        "workflow:flow-predictions:write:store",
                        "workflow:flow-predictions:write:store:one"
                    ]
                },
                "delete": {
                    "description": "Delete one or more flow predictions using the supplied id(s)",
                    "actions": [
                        "workflow:flow-predictions:write",
                        "workflow:flow-predictions:write:delete"
                    ]
                }
            },
            "pagination": {
                "pageSize": {
                    "min": 1,
                    "max": 100,
                    "default": 100
                },
                "pages": {
                    "max": 100
                }
            },
            "display": {
                "priority": 10,
                "overview": {
                    "label": "name"
                },
                "info": {
                    "primary": [
                        "ref",
                        "owner",
                        "name"
                    ],
                    "secondary": [
                        "alternativeIdentifiers",
                        "tags",
                        "custom"
                    ],
                    "history": [
                        "createdAt",
                        "createdBy",
                        "updatedAt",
                        "updatedBy",
                        "deletedAt",
                        "deletedBy",
                        "reapAt",
                        "version"
                    ]
                },
                "groups": {
                    "custom": [
                        "custom"
                    ],
                    "identity": [
                        "ref",
                        "owner",
                        "name",
                        "alternativeIdentifiers"
                    ],
                    "history": [
                        "createdAt",
                        "createdBy",
                        "updatedAt",
                        "updatedBy",
                        "deletedAt",
                        "deletedBy",
                        "reapAt",
                        "version"
                    ],
                    "tags": [
                        "tags"
                    ]
                },
                "singularName": "flow prediction",
                "pluralName": "flow predictions"
            },
            "fields": {
                "ref": {
                    "description": "The derived owner:name reference",
                    "type": "ref",
                    "readOnly": true,
                    "sort": true,
                    "example": "test:resource-name",
                    "fieldName": "ref",
                    "fieldNamePath": "ref",
                    "typeInfo": {
                        "desc": "owner:name pair",
                        "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
                        "name": "ref"
                    },
                    "filteredBy": [
                        "withRef"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "ref",
                            "fieldNamePath": "ref",
                            "description": "filter by the supplied ref",
                            "name": "withRef",
                            "and": true,
                            "or": true,
                            "valueType": "ref"
                        }
                    ],
                    "primary": true
                },
                "alternativeIdentifiers": {
                    "type": "stringMap",
                    "description": "A map of alternative identifiers for this resource",
                    "example": {
                        "tel": "0800100100",
                        "said": "something"
                    },
                    "fieldName": "alternativeIdentifiers",
                    "fieldNamePath": "alternativeIdentifiers",
                    "typeInfo": {
                        "keys": {
                            "pattern": "[a-zA-Z0-9]+"
                        },
                        "values": {
                            "pattern": "(.+)",
                            "desc": "string"
                        },
                        "desc": "key-value pairs",
                        "name": "stringMap"
                    },
                    "filteredBy": [
                        "withAlternativeIdentifiers"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "alternativeIdentifiers",
                            "fieldNamePath": "alternativeIdentifiers",
                            "description": "filter by the supplied alternative identifiers",
                            "prefix": true,
                            "name": "withAlternativeIdentifiers",
                            "and": true,
                            "or": true,
                            "valueType": "stringMap"
                        }
                    ],
                    "primary": true
                },
                "owner": {
                    "description": "The tenant owner name",
                    "type": "name",
                    "required": true,
                    "sort": true,
                    "example": "test",
                    "countable": true,
                    "fieldName": "owner",
                    "fieldNamePath": "owner",
                    "typeInfo": {
                        "desc": "name",
                        "pattern": "[a-zA-Z0-9_-]+",
                        "name": "name"
                    },
                    "primary": true
                },
                "name": {
                    "description": "The tenant specific unique name",
                    "type": "name",
                    "sort": true,
                    "example": "resource-name",
                    "fieldName": "name",
                    "fieldNamePath": "name",
                    "typeInfo": {
                        "desc": "name",
                        "pattern": "[a-zA-Z0-9_-]+",
                        "name": "name"
                    },
                    "filteredBy": [
                        "withName"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "name",
                            "fieldNamePath": "name",
                            "description": "filter by the supplied name",
                            "prefix": true,
                            "name": "withName",
                            "and": true,
                            "or": true,
                            "valueType": "name"
                        }
                    ]
                },
                "title": {
                    "description": "The title for the resource. Will be set to the value of `name` if not supplied",
                    "type": "string",
                    "sort": true,
                    "example": "resource-title",
                    "fieldName": "title",
                    "fieldNamePath": "title",
                    "typeInfo": {
                        "desc": "string",
                        "pattern": ".+",
                        "name": "string"
                    },
                    "filteredBy": [
                        "withTitle"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "title",
                            "fieldNamePath": "title",
                            "description": "filter by the supplied title",
                            "prefix": true,
                            "name": "withTitle",
                            "and": true,
                            "or": true,
                            "valueType": "string"
                        }
                    ]
                },
                "tags": {
                    "description": "tags for the resource",
                    "type": "string",
                    "array": true,
                    "example": [
                        "todo",
                        "usage:boxart"
                    ],
                    "fieldName": "tags",
                    "fieldNamePath": "tags",
                    "typeInfo": {
                        "desc": "string",
                        "pattern": ".+",
                        "name": "string"
                    },
                    "filteredBy": [
                        "withTags"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "tags",
                            "fieldNamePath": "tags",
                            "description": "filter by the supplied tags",
                            "name": "withTags",
                            "and": true,
                            "or": true,
                            "valueType": "string"
                        }
                    ]
                },
                "scores": {
                    "description": "scores for the resource",
                    "type": "scores",
                    "example": {
                        "imdb.a3431": 0.9,
                        "fuse": 2
                    },
                    "fieldName": "scores",
                    "fieldNamePath": "scores",
                    "typeInfo": {
                        "keys": {
                            "pattern": "(?:[a-zA-Z0-9]+)(?:\\.[a-zA-Z0-9]+)*"
                        },
                        "values": {
                            "desc": "number",
                            "pattern": "-?\\d+(?:\\.\\d+)?"
                        },
                        "desc": "Map of FieldNamePath:Number pairs",
                        "name": "scores"
                    },
                    "filteredBy": [
                        "withScore"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "scores",
                            "fieldNamePath": "scores",
                            "description": "filter by the supplied score",
                            "range": true,
                            "name": "withScore",
                            "and": true,
                            "or": true,
                            "valueType": "scores"
                        }
                    ]
                },
                "custom": {
                    "description": "The tenant specific custom fields.  This may be used to hold tenant specific data alongside the document, but it should not be used as a substitute for normal fields.",
                    "type": "map",
                    "max": 100,
                    "fieldName": "custom",
                    "fieldNamePath": "custom",
                    "typeInfo": {
                        "keys": {
                            "pattern": "[a-zA-Z0-9]+"
                        },
                        "values": {
                            "pattern": "(.+)",
                            "desc": "scalar value or an array of scalar values"
                        },
                        "desc": "key-value pairs"
                    }
                },
                "createdAt": {
                    "description": "The timestamp when created",
                    "type": "timestamp",
                    "readOnly": true,
                    "example": "2014-12-25T12:00:00.000Z",
                    "sort": true,
                    "excludeFromVersion": true,
                    "fieldName": "createdAt",
                    "fieldNamePath": "createdAt",
                    "filteredBy": [
                        "withCreatedAt"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "createdAt",
                            "fieldNamePath": "createdAt",
                            "description": "filter by the supplied createdAt",
                            "range": true,
                            "name": "withCreatedAt",
                            "and": true,
                            "or": true,
                            "valueType": "timestamp"
                        }
                    ]
                },
                "createdBy": {
                    "description": "The user that created",
                    "type": "ref",
                    "readOnly": true,
                    "example": "test:test-admin",
                    "sort": true,
                    "fieldName": "createdBy",
                    "fieldNamePath": "createdBy",
                    "typeInfo": {
                        "desc": "owner:name pair",
                        "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
                        "name": "ref"
                    },
                    "filteredBy": [
                        "withCreatedBy"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "createdBy",
                            "fieldNamePath": "createdBy",
                            "description": "filter by the supplied createdBy",
                            "name": "withCreatedBy",
                            "and": true,
                            "or": true,
                            "valueType": "ref"
                        }
                    ]
                },
                "updatedAt": {
                    "description": "The timestamp when last updated",
                    "type": "timestamp",
                    "readOnly": true,
                    "example": "2014-12-25T12:00:00.000Z",
                    "sort": true,
                    "excludeFromVersion": true,
                    "fieldName": "updatedAt",
                    "fieldNamePath": "updatedAt",
                    "filteredBy": [
                        "withUpdatedAt"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "updatedAt",
                            "fieldNamePath": "updatedAt",
                            "description": "filter by the supplied updatedAt",
                            "range": true,
                            "name": "withUpdatedAt",
                            "and": true,
                            "or": true,
                            "valueType": "timestamp"
                        }
                    ]
                },
                "updatedBy": {
                    "description": "The user that last updated",
                    "type": "ref",
                    "readOnly": true,
                    "example": "test:test-admin",
                    "sort": true,
                    "fieldName": "updatedBy",
                    "fieldNamePath": "updatedBy",
                    "typeInfo": {
                        "desc": "owner:name pair",
                        "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
                        "name": "ref"
                    },
                    "filteredBy": [
                        "withUpdatedBy"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "updatedBy",
                            "fieldNamePath": "updatedBy",
                            "description": "filter by the supplied updatedBy",
                            "name": "withUpdatedBy",
                            "and": true,
                            "or": true,
                            "valueType": "ref"
                        }
                    ]
                },
                "deletedAt": {
                    "description": "The timestamp when deleted (only applicable to deleted resources)",
                    "type": "timestamp",
                    "readOnly": true,
                    "example": "2014-12-25T12:00:00.000Z",
                    "sort": true,
                    "excludeFromVersion": true,
                    "fieldName": "deletedAt",
                    "fieldNamePath": "deletedAt",
                    "filteredBy": [
                        "withDeletedAt"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "deletedAt",
                            "fieldNamePath": "deletedAt",
                            "prohibited": [
                                "enduser"
                            ],
                            "description": "filter by the supplied deletedAt",
                            "range": true,
                            "name": "withDeletedAt",
                            "and": true,
                            "or": true,
                            "valueType": "timestamp"
                        }
                    ]
                },
                "deletedBy": {
                    "description": "The user that deleted (only applicable to deleted resources)",
                    "type": "ref",
                    "readOnly": true,
                    "example": "test:test-admin",
                    "sort": true,
                    "excludeFromVersion": true,
                    "fieldName": "deletedBy",
                    "fieldNamePath": "deletedBy",
                    "typeInfo": {
                        "desc": "owner:name pair",
                        "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
                        "name": "ref"
                    },
                    "filteredBy": [
                        "withDeletedBy"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "deletedBy",
                            "fieldNamePath": "deletedBy",
                            "prohibited": [
                                "enduser"
                            ],
                            "description": "filter by the supplied deletedBy",
                            "name": "withDeletedBy",
                            "and": true,
                            "or": true,
                            "valueType": "ref"
                        }
                    ]
                },
                "reapAt": {
                    "description": "The timestamp for reaping (only applicable to deleted resources)",
                    "type": "timestamp",
                    "readOnly": true,
                    "example": "2014-12-25T12:00:00.000Z",
                    "sort": true,
                    "excludeFromVersion": true,
                    "fieldName": "reapAt",
                    "fieldNamePath": "reapAt",
                    "filteredBy": [
                        "withReapAt"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "reapAt",
                            "fieldNamePath": "reapAt",
                            "prohibited": [
                                "enduser",
                                "service",
                                "admin"
                            ],
                            "description": "filter by the supplied reapAt",
                            "range": true,
                            "name": "withReapAt",
                            "and": true,
                            "or": true,
                            "valueType": "timestamp"
                        }
                    ]
                },
                "version": {
                    "description": "The version hash (computed)",
                    "type": "version",
                    "readOnly": true,
                    "example": "356b54eb90cd04566159dfb9c95a0426998a2f7b",
                    "excludeFromVersion": true,
                    "fieldName": "version",
                    "fieldNamePath": "version",
                    "typeInfo": {
                        "desc": "sha1 hex encoded hash",
                        "pattern": "[a-f0-9]{40}"
                    }
                },
                "metadata": {
                    "description": "A field that holds metadata about the resource",
                    "excludeFromVersion": true,
                    "fields": {},
                    "fieldName": "metadata",
                    "fieldNamePath": "metadata",
                    "typeInfo": {}
                },
                "instanceRef": {
                    "description": "Reference to the Flow Instance from which this Flow Prediction is associated.",
                    "type": "ref",
                    "sort": true,
                    "required": true,
                    "example": "owner:instance1",
                    "fieldName": "instanceRef",
                    "fieldNamePath": "instanceRef",
                    "typeInfo": {
                        "desc": "owner:name pair",
                        "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
                        "name": "ref"
                    },
                    "relatedBy": [
                        "flowInstance"
                    ],
                    "relationships": [
                        {
                            "description": "flow instance related to this prediction",
                            "type": "direct",
                            "resourceType": "flowInstances",
                            "fieldNamePath": "instanceRef",
                            "fields": [
                                "ref",
                                "name",
                                "flowRef",
                                "resourcefulContext",
                                "alternativeIdentifiers"
                            ],
                            "name": "flowInstance",
                            "intersectable": false,
                            "batchSize": 10
                        }
                    ],
                    "filteredBy": [
                        "withInstanceRef"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "fieldNamePath": "instanceRef",
                            "description": "filter by de supplied instance ref",
                            "label": "instanceRef",
                            "name": "withInstanceRef",
                            "and": true,
                            "or": true,
                            "valueType": "ref"
                        }
                    ]
                },
                "estimatedDuration": {
                    "description": "Number of seconds that the flowInstance is estimated to take.",
                    "type": "integer",
                    "default": 0,
                    "fieldName": "estimatedDuration",
                    "fieldNamePath": "estimatedDuration",
                    "typeInfo": {
                        "desc": "integer",
                        "pattern": "-?[0-9]+"
                    },
                    "xfieldedBy": {
                        "type": "exactlyOne",
                        "fields": [
                            "estimatedDuration",
                            "errors"
                        ]
                    }
                },
                "errors": {
                    "description": "Collection of errors generated as output of estimation process",
                    "array": true,
                    "fields": {
                        "errorCode": {
                            "description": "Error code generated in estimation process.",
                            "type": "string",
                            "required": true,
                            "example": "error_code",
                            "fieldName": "errorCode",
                            "fieldNamePath": "errors.errorCode",
                            "typeInfo": {
                                "desc": "string",
                                "pattern": ".+",
                                "name": "string"
                            },
                            "primary": true
                        },
                        "errorMessage": {
                            "description": "Error message generated in estimation process.",
                            "type": "string",
                            "required": true,
                            "example": "error_message",
                            "fieldName": "errorMessage",
                            "fieldNamePath": "errors.errorMessage",
                            "typeInfo": {
                                "desc": "string",
                                "pattern": ".+",
                                "name": "string"
                            },
                            "primary": true
                        }
                    },
                    "fieldName": "errors",
                    "fieldNamePath": "errors",
                    "typeInfo": {},
                    "xfieldedBy": {
                        "type": "exactlyOne",
                        "fields": [
                            "estimatedDuration",
                            "errors"
                        ]
                    }
                }
            },
            "filters": {
                "q": {
                    "type": "q",
                    "label": "q",
                    "description": "filter by the supplied text",
                    "includes": [
                        "title"
                    ],
                    "name": "q",
                    "valueType": "string",
                    "text": true
                },
                "withName": {
                    "type": "with",
                    "label": "name",
                    "fieldNamePath": "name",
                    "description": "filter by the supplied name",
                    "prefix": true,
                    "name": "withName",
                    "and": true,
                    "or": true,
                    "valueType": "name"
                },
                "withTitle": {
                    "type": "with",
                    "label": "title",
                    "fieldNamePath": "title",
                    "description": "filter by the supplied title",
                    "prefix": true,
                    "name": "withTitle",
                    "and": true,
                    "or": true,
                    "valueType": "string"
                },
                "withRef": {
                    "type": "with",
                    "label": "ref",
                    "fieldNamePath": "ref",
                    "description": "filter by the supplied ref",
                    "name": "withRef",
                    "and": true,
                    "or": true,
                    "valueType": "ref"
                },
                "withAlternativeIdentifiers": {
                    "type": "with",
                    "label": "alternativeIdentifiers",
                    "fieldNamePath": "alternativeIdentifiers",
                    "description": "filter by the supplied alternative identifiers",
                    "prefix": true,
                    "name": "withAlternativeIdentifiers",
                    "and": true,
                    "or": true,
                    "valueType": "stringMap"
                },
                "withTags": {
                    "type": "with",
                    "label": "tags",
                    "fieldNamePath": "tags",
                    "description": "filter by the supplied tags",
                    "name": "withTags",
                    "and": true,
                    "or": true,
                    "valueType": "string"
                },
                "withScore": {
                    "type": "with",
                    "label": "scores",
                    "fieldNamePath": "scores",
                    "description": "filter by the supplied score",
                    "range": true,
                    "name": "withScore",
                    "and": true,
                    "or": true,
                    "valueType": "scores"
                },
                "withCreatedAt": {
                    "type": "with",
                    "label": "createdAt",
                    "fieldNamePath": "createdAt",
                    "description": "filter by the supplied createdAt",
                    "range": true,
                    "name": "withCreatedAt",
                    "and": true,
                    "or": true,
                    "valueType": "timestamp"
                },
                "withCreatedBy": {
                    "type": "with",
                    "label": "createdBy",
                    "fieldNamePath": "createdBy",
                    "description": "filter by the supplied createdBy",
                    "name": "withCreatedBy",
                    "and": true,
                    "or": true,
                    "valueType": "ref"
                },
                "withUpdatedAt": {
                    "type": "with",
                    "label": "updatedAt",
                    "fieldNamePath": "updatedAt",
                    "description": "filter by the supplied updatedAt",
                    "range": true,
                    "name": "withUpdatedAt",
                    "and": true,
                    "or": true,
                    "valueType": "timestamp"
                },
                "withUpdatedBy": {
                    "type": "with",
                    "label": "updatedBy",
                    "fieldNamePath": "updatedBy",
                    "description": "filter by the supplied updatedBy",
                    "name": "withUpdatedBy",
                    "and": true,
                    "or": true,
                    "valueType": "ref"
                },
                "withDeletedAt": {
                    "type": "with",
                    "label": "deletedAt",
                    "fieldNamePath": "deletedAt",
                    "prohibited": [
                        "enduser"
                    ],
                    "description": "filter by the supplied deletedAt",
                    "range": true,
                    "name": "withDeletedAt",
                    "and": true,
                    "or": true,
                    "valueType": "timestamp"
                },
                "withDeletedBy": {
                    "type": "with",
                    "label": "deletedBy",
                    "fieldNamePath": "deletedBy",
                    "prohibited": [
                        "enduser"
                    ],
                    "description": "filter by the supplied deletedBy",
                    "name": "withDeletedBy",
                    "and": true,
                    "or": true,
                    "valueType": "ref"
                },
                "withReapAt": {
                    "type": "with",
                    "label": "reapAt",
                    "fieldNamePath": "reapAt",
                    "prohibited": [
                        "enduser",
                        "service",
                        "admin"
                    ],
                    "description": "filter by the supplied reapAt",
                    "range": true,
                    "name": "withReapAt",
                    "and": true,
                    "or": true,
                    "valueType": "timestamp"
                },
                "withInstanceRef": {
                    "type": "with",
                    "fieldNamePath": "instanceRef",
                    "description": "filter by de supplied instance ref",
                    "label": "instanceRef",
                    "name": "withInstanceRef",
                    "and": true,
                    "or": true,
                    "valueType": "ref"
                }
            },
            "relationships": {
                "flowInstance": {
                    "description": "flow instance related to this prediction",
                    "type": "direct",
                    "resourceType": "flowInstances",
                    "fieldNamePath": "instanceRef",
                    "fields": [
                        "ref",
                        "name",
                        "flowRef",
                        "resourcefulContext",
                        "alternativeIdentifiers"
                    ],
                    "name": "flowInstance",
                    "intersectable": false,
                    "batchSize": 10
                }
            },
            "restrictions": [
                {
                    "type": "ownership",
                    "message": "must contain an owner for which you have permission",
                    "description": "users can only interact with resources that are owned by a tenant they have access to"
                },
                {
                    "type": "unmodifiable",
                    "message": "not allowed to modify resources created by root:root",
                    "description": "users are not allowed to modify resources that were created by root:root"
                },
                {
                    "type": "primaryKey",
                    "message": "primaryKey must be unique",
                    "description": "the primary key (ref) is derived from owner and name, allowing name to be a tenant specific unique external id"
                }
            ],
            "singularName": "flowPrediction",
            "pluralName": "flowPredictions",
            "serviceName": "workflow",
            "description": "Represent a Prediction with a collection of errors. ",
            "xfields": [
                {
                    "type": "exactlyOne",
                    "fields": [
                        "estimatedDuration",
                        "errors"
                    ]
                }
            ],
            "conditionalUpdates": true,
            "hyphenatedPluralName": "flow-predictions",
            "retentionPeriod": "P0D",
            "typeInfo": {}
        },
        "flowPresets": {
            "path": "/data",
            "stability": "experimental",
            "operations": {
                "browse": {
                    "description": "Fetches a list of flow presets that may be filtered",
                    "actions": [
                        "workflow:flow-presets:read",
                        "workflow:flow-presets:read:browse"
                    ]
                },
                "get": {
                    "description": "Fetches one or more flow presets using the supplied id(s)",
                    "actions": [
                        "workflow:flow-presets:read",
                        "workflow:flow-presets:read:get"
                    ]
                },
                "storeBatch": {
                    "description": "Stores one or more flow presets, either creating or wholly replacing",
                    "actions": [
                        "workflow:flow-presets:write",
                        "workflow:flow-presets:write:store",
                        "workflow:flow-presets:write:store:batch"
                    ],
                    "limit": 100
                },
                "storeOne": {
                    "description": "Stores the supplied flow preset with the supplied id, either creating or wholly replacing",
                    "actions": [
                        "workflow:flow-presets:write",
                        "workflow:flow-presets:write:store",
                        "workflow:flow-presets:write:store:one"
                    ]
                },
                "delete": {
                    "description": "Delete one or more flow presets using the supplied id(s)",
                    "actions": [
                        "workflow:flow-presets:write",
                        "workflow:flow-presets:write:delete"
                    ]
                }
            },
            "pagination": {
                "pageSize": {
                    "min": 1,
                    "max": 100,
                    "default": 100
                },
                "pages": {
                    "max": 100
                }
            },
            "display": {
                "priority": 10,
                "overview": {
                    "label": "name"
                },
                "info": {
                    "primary": [
                        "ref",
                        "owner",
                        "name"
                    ],
                    "secondary": [
                        "alternativeIdentifiers",
                        "tags",
                        "custom"
                    ],
                    "history": [
                        "createdAt",
                        "createdBy",
                        "updatedAt",
                        "updatedBy",
                        "deletedAt",
                        "deletedBy",
                        "reapAt",
                        "version"
                    ]
                },
                "groups": {
                    "custom": [
                        "custom"
                    ],
                    "identity": [
                        "ref",
                        "owner",
                        "name",
                        "alternativeIdentifiers"
                    ],
                    "history": [
                        "createdAt",
                        "createdBy",
                        "updatedAt",
                        "updatedBy",
                        "deletedAt",
                        "deletedBy",
                        "reapAt",
                        "version"
                    ],
                    "tags": [
                        "tags"
                    ]
                },
                "singularName": "flow preset",
                "pluralName": "flow presets"
            },
            "fields": {
                "ref": {
                    "description": "The derived owner:name reference",
                    "type": "ref",
                    "readOnly": true,
                    "sort": true,
                    "example": "test:resource-name",
                    "fieldName": "ref",
                    "fieldNamePath": "ref",
                    "typeInfo": {
                        "desc": "owner:name pair",
                        "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
                        "name": "ref"
                    },
                    "filteredBy": [
                        "withRef"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "ref",
                            "fieldNamePath": "ref",
                            "description": "filter by the supplied ref",
                            "name": "withRef",
                            "and": true,
                            "or": true,
                            "valueType": "ref"
                        }
                    ]
                },
                "alternativeIdentifiers": {
                    "type": "stringMap",
                    "description": "A map of alternative identifiers for this resource",
                    "example": {
                        "tel": "0800100100",
                        "said": "something"
                    },
                    "fieldName": "alternativeIdentifiers",
                    "fieldNamePath": "alternativeIdentifiers",
                    "typeInfo": {
                        "keys": {
                            "pattern": "[a-zA-Z0-9]+"
                        },
                        "values": {
                            "pattern": "(.+)",
                            "desc": "string"
                        },
                        "desc": "key-value pairs",
                        "name": "stringMap"
                    },
                    "filteredBy": [
                        "withAlternativeIdentifiers"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "alternativeIdentifiers",
                            "fieldNamePath": "alternativeIdentifiers",
                            "description": "filter by the supplied alternative identifiers",
                            "prefix": true,
                            "name": "withAlternativeIdentifiers",
                            "and": true,
                            "or": true,
                            "valueType": "stringMap"
                        }
                    ]
                },
                "owner": {
                    "description": "The tenant owner name",
                    "type": "name",
                    "required": true,
                    "sort": true,
                    "example": "test",
                    "countable": true,
                    "fieldName": "owner",
                    "fieldNamePath": "owner",
                    "typeInfo": {
                        "desc": "name",
                        "pattern": "[a-zA-Z0-9_-]+",
                        "name": "name"
                    }
                },
                "name": {
                    "description": "The tenant specific unique name",
                    "type": "name",
                    "sort": true,
                    "example": "resource-name",
                    "fieldName": "name",
                    "fieldNamePath": "name",
                    "typeInfo": {
                        "desc": "name",
                        "pattern": "[a-zA-Z0-9_-]+",
                        "name": "name"
                    },
                    "filteredBy": [
                        "withName"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "name",
                            "fieldNamePath": "name",
                            "description": "filter by the supplied name",
                            "prefix": true,
                            "name": "withName",
                            "and": true,
                            "or": true,
                            "valueType": "name"
                        }
                    ]
                },
                "title": {
                    "description": "The title for the resource. Will be set to the value of `name` if not supplied",
                    "type": "string",
                    "sort": true,
                    "example": "resource-title",
                    "fieldName": "title",
                    "fieldNamePath": "title",
                    "typeInfo": {
                        "desc": "string",
                        "pattern": ".+",
                        "name": "string"
                    },
                    "filteredBy": [
                        "withTitle"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "title",
                            "fieldNamePath": "title",
                            "description": "filter by the supplied title",
                            "prefix": true,
                            "name": "withTitle",
                            "and": true,
                            "or": true,
                            "valueType": "string"
                        }
                    ]
                },
                "tags": {
                    "description": "tags for the resource",
                    "type": "string",
                    "array": true,
                    "example": [
                        "todo",
                        "usage:boxart"
                    ],
                    "fieldName": "tags",
                    "fieldNamePath": "tags",
                    "typeInfo": {
                        "desc": "string",
                        "pattern": ".+",
                        "name": "string"
                    },
                    "filteredBy": [
                        "withTags"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "tags",
                            "fieldNamePath": "tags",
                            "description": "filter by the supplied tags",
                            "name": "withTags",
                            "and": true,
                            "or": true,
                            "valueType": "string"
                        }
                    ]
                },
                "scores": {
                    "description": "scores for the resource",
                    "type": "scores",
                    "example": {
                        "imdb.a3431": 0.9,
                        "fuse": 2
                    },
                    "fieldName": "scores",
                    "fieldNamePath": "scores",
                    "typeInfo": {
                        "keys": {
                            "pattern": "(?:[a-zA-Z0-9]+)(?:\\.[a-zA-Z0-9]+)*"
                        },
                        "values": {
                            "desc": "number",
                            "pattern": "-?\\d+(?:\\.\\d+)?"
                        },
                        "desc": "Map of FieldNamePath:Number pairs",
                        "name": "scores"
                    },
                    "filteredBy": [
                        "withScore"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "scores",
                            "fieldNamePath": "scores",
                            "description": "filter by the supplied score",
                            "range": true,
                            "name": "withScore",
                            "and": true,
                            "or": true,
                            "valueType": "scores"
                        }
                    ]
                },
                "custom": {
                    "description": "The tenant specific custom fields.  This may be used to hold tenant specific data alongside the document, but it should not be used as a substitute for normal fields.",
                    "type": "map",
                    "max": 100,
                    "fieldName": "custom",
                    "fieldNamePath": "custom",
                    "typeInfo": {
                        "keys": {
                            "pattern": "[a-zA-Z0-9]+"
                        },
                        "values": {
                            "pattern": "(.+)",
                            "desc": "scalar value or an array of scalar values"
                        },
                        "desc": "key-value pairs"
                    }
                },
                "createdAt": {
                    "description": "The timestamp when created",
                    "type": "timestamp",
                    "readOnly": true,
                    "example": "2014-12-25T12:00:00.000Z",
                    "sort": true,
                    "excludeFromVersion": true,
                    "fieldName": "createdAt",
                    "fieldNamePath": "createdAt",
                    "filteredBy": [
                        "withCreatedAt"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "createdAt",
                            "fieldNamePath": "createdAt",
                            "description": "filter by the supplied createdAt",
                            "range": true,
                            "name": "withCreatedAt",
                            "and": true,
                            "or": true,
                            "valueType": "timestamp"
                        }
                    ]
                },
                "createdBy": {
                    "description": "The user that created",
                    "type": "ref",
                    "readOnly": true,
                    "example": "test:test-admin",
                    "sort": true,
                    "fieldName": "createdBy",
                    "fieldNamePath": "createdBy",
                    "typeInfo": {
                        "desc": "owner:name pair",
                        "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
                        "name": "ref"
                    },
                    "filteredBy": [
                        "withCreatedBy"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "createdBy",
                            "fieldNamePath": "createdBy",
                            "description": "filter by the supplied createdBy",
                            "name": "withCreatedBy",
                            "and": true,
                            "or": true,
                            "valueType": "ref"
                        }
                    ]
                },
                "updatedAt": {
                    "description": "The timestamp when last updated",
                    "type": "timestamp",
                    "readOnly": true,
                    "example": "2014-12-25T12:00:00.000Z",
                    "sort": true,
                    "excludeFromVersion": true,
                    "fieldName": "updatedAt",
                    "fieldNamePath": "updatedAt",
                    "filteredBy": [
                        "withUpdatedAt"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "updatedAt",
                            "fieldNamePath": "updatedAt",
                            "description": "filter by the supplied updatedAt",
                            "range": true,
                            "name": "withUpdatedAt",
                            "and": true,
                            "or": true,
                            "valueType": "timestamp"
                        }
                    ]
                },
                "updatedBy": {
                    "description": "The user that last updated",
                    "type": "ref",
                    "readOnly": true,
                    "example": "test:test-admin",
                    "sort": true,
                    "fieldName": "updatedBy",
                    "fieldNamePath": "updatedBy",
                    "typeInfo": {
                        "desc": "owner:name pair",
                        "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
                        "name": "ref"
                    },
                    "filteredBy": [
                        "withUpdatedBy"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "updatedBy",
                            "fieldNamePath": "updatedBy",
                            "description": "filter by the supplied updatedBy",
                            "name": "withUpdatedBy",
                            "and": true,
                            "or": true,
                            "valueType": "ref"
                        }
                    ]
                },
                "deletedAt": {
                    "description": "The timestamp when deleted (only applicable to deleted resources)",
                    "type": "timestamp",
                    "readOnly": true,
                    "example": "2014-12-25T12:00:00.000Z",
                    "sort": true,
                    "excludeFromVersion": true,
                    "fieldName": "deletedAt",
                    "fieldNamePath": "deletedAt",
                    "filteredBy": [
                        "withDeletedAt"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "deletedAt",
                            "fieldNamePath": "deletedAt",
                            "prohibited": [
                                "enduser"
                            ],
                            "description": "filter by the supplied deletedAt",
                            "range": true,
                            "name": "withDeletedAt",
                            "and": true,
                            "or": true,
                            "valueType": "timestamp"
                        }
                    ]
                },
                "deletedBy": {
                    "description": "The user that deleted (only applicable to deleted resources)",
                    "type": "ref",
                    "readOnly": true,
                    "example": "test:test-admin",
                    "sort": true,
                    "excludeFromVersion": true,
                    "fieldName": "deletedBy",
                    "fieldNamePath": "deletedBy",
                    "typeInfo": {
                        "desc": "owner:name pair",
                        "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
                        "name": "ref"
                    },
                    "filteredBy": [
                        "withDeletedBy"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "deletedBy",
                            "fieldNamePath": "deletedBy",
                            "prohibited": [
                                "enduser"
                            ],
                            "description": "filter by the supplied deletedBy",
                            "name": "withDeletedBy",
                            "and": true,
                            "or": true,
                            "valueType": "ref"
                        }
                    ]
                },
                "reapAt": {
                    "description": "The timestamp for reaping (only applicable to deleted resources)",
                    "type": "timestamp",
                    "readOnly": true,
                    "example": "2014-12-25T12:00:00.000Z",
                    "sort": true,
                    "excludeFromVersion": true,
                    "fieldName": "reapAt",
                    "fieldNamePath": "reapAt",
                    "filteredBy": [
                        "withReapAt"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "reapAt",
                            "fieldNamePath": "reapAt",
                            "prohibited": [
                                "enduser",
                                "service",
                                "admin"
                            ],
                            "description": "filter by the supplied reapAt",
                            "range": true,
                            "name": "withReapAt",
                            "and": true,
                            "or": true,
                            "valueType": "timestamp"
                        }
                    ]
                },
                "version": {
                    "description": "The version hash (computed)",
                    "type": "version",
                    "readOnly": true,
                    "example": "356b54eb90cd04566159dfb9c95a0426998a2f7b",
                    "excludeFromVersion": true,
                    "fieldName": "version",
                    "fieldNamePath": "version",
                    "typeInfo": {
                        "desc": "sha1 hex encoded hash",
                        "pattern": "[a-f0-9]{40}"
                    }
                },
                "metadata": {
                    "description": "A field that holds metadata about the resource",
                    "excludeFromVersion": true,
                    "fields": {},
                    "fieldName": "metadata",
                    "fieldNamePath": "metadata",
                    "typeInfo": {}
                },
                "configuration": {
                    "description": "Set of pair key/value that defines the preset",
                    "array": true,
                    "primary": true,
                    "fields": {
                        "operationType": {
                            "description": "The operation type specifies the category of operation that this preset configuration will apply to",
                            "type": "string",
                            "required": true,
                            "example": "flow.file.s3",
                            "fieldName": "operationType",
                            "fieldNamePath": "configuration.operationType",
                            "typeInfo": {
                                "desc": "string",
                                "pattern": ".+",
                                "name": "string"
                            },
                            "primary": true
                        },
                        "key": {
                            "description": "The key identifies the preset configuration so it can be referenced within Flow or discovered automatically by a Flow Operation. Keys are specified using a JSON path expression such as `some.key`",
                            "required": true,
                            "type": "jsonPath",
                            "example": "OutputGroups[0].CustomName",
                            "fieldName": "key",
                            "fieldNamePath": "configuration.key",
                            "typeInfo": {
                                "desc": "one or more jsonPath elements using dot notation",
                                "pattern": "([a-zA-Z0-9_-]+(?:\\[\\d+\\])?)+(?:\\.[a-zA-Z0-9_-]+(?:\\[\\d+\\])?)*"
                            },
                            "primary": true
                        },
                        "value": {
                            "description": "The value is the preset value associated with the provided key for the configured `operationType`",
                            "required": true,
                            "type": "string",
                            "example": "mp4",
                            "fieldName": "value",
                            "fieldNamePath": "configuration.value",
                            "typeInfo": {
                                "desc": "string",
                                "pattern": ".+",
                                "name": "string"
                            },
                            "primary": true
                        }
                    },
                    "fieldName": "configuration",
                    "fieldNamePath": "configuration",
                    "typeInfo": {}
                }
            },
            "filters": {
                "q": {
                    "type": "q",
                    "label": "q",
                    "description": "filter by the supplied text",
                    "includes": [
                        "title"
                    ],
                    "name": "q",
                    "valueType": "string",
                    "text": true
                },
                "withName": {
                    "type": "with",
                    "label": "name",
                    "fieldNamePath": "name",
                    "description": "filter by the supplied name",
                    "prefix": true,
                    "name": "withName",
                    "and": true,
                    "or": true,
                    "valueType": "name"
                },
                "withTitle": {
                    "type": "with",
                    "label": "title",
                    "fieldNamePath": "title",
                    "description": "filter by the supplied title",
                    "prefix": true,
                    "name": "withTitle",
                    "and": true,
                    "or": true,
                    "valueType": "string"
                },
                "withRef": {
                    "type": "with",
                    "label": "ref",
                    "fieldNamePath": "ref",
                    "description": "filter by the supplied ref",
                    "name": "withRef",
                    "and": true,
                    "or": true,
                    "valueType": "ref"
                },
                "withAlternativeIdentifiers": {
                    "type": "with",
                    "label": "alternativeIdentifiers",
                    "fieldNamePath": "alternativeIdentifiers",
                    "description": "filter by the supplied alternative identifiers",
                    "prefix": true,
                    "name": "withAlternativeIdentifiers",
                    "and": true,
                    "or": true,
                    "valueType": "stringMap"
                },
                "withTags": {
                    "type": "with",
                    "label": "tags",
                    "fieldNamePath": "tags",
                    "description": "filter by the supplied tags",
                    "name": "withTags",
                    "and": true,
                    "or": true,
                    "valueType": "string"
                },
                "withScore": {
                    "type": "with",
                    "label": "scores",
                    "fieldNamePath": "scores",
                    "description": "filter by the supplied score",
                    "range": true,
                    "name": "withScore",
                    "and": true,
                    "or": true,
                    "valueType": "scores"
                },
                "withCreatedAt": {
                    "type": "with",
                    "label": "createdAt",
                    "fieldNamePath": "createdAt",
                    "description": "filter by the supplied createdAt",
                    "range": true,
                    "name": "withCreatedAt",
                    "and": true,
                    "or": true,
                    "valueType": "timestamp"
                },
                "withCreatedBy": {
                    "type": "with",
                    "label": "createdBy",
                    "fieldNamePath": "createdBy",
                    "description": "filter by the supplied createdBy",
                    "name": "withCreatedBy",
                    "and": true,
                    "or": true,
                    "valueType": "ref"
                },
                "withUpdatedAt": {
                    "type": "with",
                    "label": "updatedAt",
                    "fieldNamePath": "updatedAt",
                    "description": "filter by the supplied updatedAt",
                    "range": true,
                    "name": "withUpdatedAt",
                    "and": true,
                    "or": true,
                    "valueType": "timestamp"
                },
                "withUpdatedBy": {
                    "type": "with",
                    "label": "updatedBy",
                    "fieldNamePath": "updatedBy",
                    "description": "filter by the supplied updatedBy",
                    "name": "withUpdatedBy",
                    "and": true,
                    "or": true,
                    "valueType": "ref"
                },
                "withDeletedAt": {
                    "type": "with",
                    "label": "deletedAt",
                    "fieldNamePath": "deletedAt",
                    "prohibited": [
                        "enduser"
                    ],
                    "description": "filter by the supplied deletedAt",
                    "range": true,
                    "name": "withDeletedAt",
                    "and": true,
                    "or": true,
                    "valueType": "timestamp"
                },
                "withDeletedBy": {
                    "type": "with",
                    "label": "deletedBy",
                    "fieldNamePath": "deletedBy",
                    "prohibited": [
                        "enduser"
                    ],
                    "description": "filter by the supplied deletedBy",
                    "name": "withDeletedBy",
                    "and": true,
                    "or": true,
                    "valueType": "ref"
                },
                "withReapAt": {
                    "type": "with",
                    "label": "reapAt",
                    "fieldNamePath": "reapAt",
                    "prohibited": [
                        "enduser",
                        "service",
                        "admin"
                    ],
                    "description": "filter by the supplied reapAt",
                    "range": true,
                    "name": "withReapAt",
                    "and": true,
                    "or": true,
                    "valueType": "timestamp"
                }
            },
            "relationships": {},
            "restrictions": [
                {
                    "type": "ownership",
                    "message": "must contain an owner for which you have permission",
                    "description": "users can only interact with resources that are owned by a tenant they have access to"
                },
                {
                    "type": "unmodifiable",
                    "message": "not allowed to modify resources created by root:root",
                    "description": "users are not allowed to modify resources that were created by root:root"
                },
                {
                    "type": "primaryKey",
                    "message": "primaryKey must be unique",
                    "description": "the primary key (ref) is derived from owner and name, allowing name to be a tenant specific unique external id"
                }
            ],
            "singularName": "flowPreset",
            "pluralName": "flowPresets",
            "serviceName": "workflow",
            "description": "Represent a Preset to be applied as default configuration to an operation",
            "conditionalUpdates": true,
            "hyphenatedPluralName": "flow-presets",
            "retentionPeriod": "P0D",
            "typeInfo": {}
        },
        "flowTasks": {
            "path": "/data",
            "stability": "stable",
            "operations": {
                "browse": {
                    "description": "Fetches a list of flow tasks that may be filtered",
                    "actions": [
                        "workflow:flow-tasks:read",
                        "workflow:flow-tasks:read:browse"
                    ]
                },
                "get": {
                    "description": "Fetches one or more flow tasks using the supplied id(s)",
                    "actions": [
                        "workflow:flow-tasks:read",
                        "workflow:flow-tasks:read:get"
                    ]
                },
                "storeBatch": {
                    "description": "Stores one or more flow tasks, either creating or wholly replacing",
                    "actions": [
                        "workflow:flow-tasks:write",
                        "workflow:flow-tasks:write:store",
                        "workflow:flow-tasks:write:store:batch"
                    ],
                    "limit": 100
                },
                "storeOne": {
                    "description": "Stores the supplied flow task with the supplied id, either creating or wholly replacing",
                    "actions": [
                        "workflow:flow-tasks:write",
                        "workflow:flow-tasks:write:store",
                        "workflow:flow-tasks:write:store:one"
                    ]
                },
                "delete": {
                    "description": "Delete one or more flow tasks using the supplied id(s)",
                    "actions": [
                        "workflow:flow-tasks:write",
                        "workflow:flow-tasks:write:delete"
                    ]
                }
            },
            "pagination": {
                "pageSize": {
                    "min": 1,
                    "max": 100,
                    "default": 100
                },
                "pages": {
                    "max": 100
                }
            },
            "display": {
                "priority": 3,
                "overview": {
                    "label": "title"
                },
                "info": {
                    "primary": [
                        "ref",
                        "owner",
                        "name"
                    ],
                    "secondary": [
                        "alternativeIdentifiers",
                        "tags",
                        "custom"
                    ],
                    "history": [
                        "createdAt",
                        "createdBy",
                        "updatedAt",
                        "updatedBy",
                        "deletedAt",
                        "deletedBy",
                        "reapAt",
                        "version"
                    ]
                },
                "groups": {
                    "custom": [
                        "custom"
                    ],
                    "identity": [
                        "ref",
                        "owner",
                        "name",
                        "alternativeIdentifiers"
                    ],
                    "history": [
                        "createdAt",
                        "createdBy",
                        "updatedAt",
                        "updatedBy",
                        "deletedAt",
                        "deletedBy",
                        "reapAt",
                        "version"
                    ],
                    "tags": [
                        "tags"
                    ],
                    "overview": [
                        "instanceStatus"
                    ],
                    "context": [
                        "resourcefulContext",
                        "workOrderRef",
                        "flowRef"
                    ]
                },
                "singularName": "flow task",
                "pluralName": "flow tasks"
            },
            "fields": {
                "ref": {
                    "description": "The derived owner:name reference",
                    "type": "ref",
                    "readOnly": true,
                    "sort": true,
                    "example": "test:resource-name",
                    "fieldName": "ref",
                    "fieldNamePath": "ref",
                    "typeInfo": {
                        "desc": "owner:name pair",
                        "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
                        "name": "ref"
                    },
                    "filteredBy": [
                        "withRef"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "ref",
                            "fieldNamePath": "ref",
                            "description": "filter by the supplied ref",
                            "name": "withRef",
                            "and": true,
                            "or": true,
                            "valueType": "ref"
                        }
                    ]
                },
                "alternativeIdentifiers": {
                    "type": "stringMap",
                    "description": "A map of alternative identifiers for this resource",
                    "example": {
                        "tel": "0800100100",
                        "said": "something"
                    },
                    "fieldName": "alternativeIdentifiers",
                    "fieldNamePath": "alternativeIdentifiers",
                    "typeInfo": {
                        "keys": {
                            "pattern": "[a-zA-Z0-9]+"
                        },
                        "values": {
                            "pattern": "(.+)",
                            "desc": "string"
                        },
                        "desc": "key-value pairs",
                        "name": "stringMap"
                    },
                    "filteredBy": [
                        "withAlternativeIdentifiers"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "alternativeIdentifiers",
                            "fieldNamePath": "alternativeIdentifiers",
                            "description": "filter by the supplied alternative identifiers",
                            "prefix": true,
                            "name": "withAlternativeIdentifiers",
                            "and": true,
                            "or": true,
                            "valueType": "stringMap"
                        }
                    ]
                },
                "owner": {
                    "description": "The tenant owner name",
                    "type": "name",
                    "required": true,
                    "sort": true,
                    "example": "test",
                    "countable": true,
                    "fieldName": "owner",
                    "fieldNamePath": "owner",
                    "typeInfo": {
                        "desc": "name",
                        "pattern": "[a-zA-Z0-9_-]+",
                        "name": "name"
                    }
                },
                "name": {
                    "description": "The tenant specific unique name",
                    "type": "name",
                    "sort": true,
                    "example": "resource-name",
                    "fieldName": "name",
                    "fieldNamePath": "name",
                    "typeInfo": {
                        "desc": "name",
                        "pattern": "[a-zA-Z0-9_-]+",
                        "name": "name"
                    },
                    "filteredBy": [
                        "withName"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "name",
                            "fieldNamePath": "name",
                            "description": "filter by the supplied name",
                            "prefix": true,
                            "name": "withName",
                            "and": true,
                            "or": true,
                            "valueType": "name"
                        }
                    ]
                },
                "title": {
                    "description": "The title for the resource. Will be set to the value of `name` if not supplied",
                    "type": "string",
                    "sort": true,
                    "example": "resource-title",
                    "primary": true,
                    "fieldName": "title",
                    "fieldNamePath": "title",
                    "typeInfo": {
                        "desc": "string",
                        "pattern": ".+",
                        "name": "string"
                    },
                    "filteredBy": [
                        "withTitle"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "title",
                            "fieldNamePath": "title",
                            "description": "filter by the supplied title",
                            "prefix": true,
                            "name": "withTitle",
                            "and": true,
                            "or": true,
                            "valueType": "string"
                        }
                    ]
                },
                "tags": {
                    "description": "tags for the resource",
                    "type": "string",
                    "array": true,
                    "example": [
                        "todo",
                        "usage:boxart"
                    ],
                    "fieldName": "tags",
                    "fieldNamePath": "tags",
                    "typeInfo": {
                        "desc": "string",
                        "pattern": ".+",
                        "name": "string"
                    },
                    "filteredBy": [
                        "withTags"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "tags",
                            "fieldNamePath": "tags",
                            "description": "filter by the supplied tags",
                            "name": "withTags",
                            "and": true,
                            "or": true,
                            "valueType": "string"
                        }
                    ]
                },
                "scores": {
                    "description": "scores for the resource",
                    "type": "scores",
                    "example": {
                        "imdb.a3431": 0.9,
                        "fuse": 2
                    },
                    "fieldName": "scores",
                    "fieldNamePath": "scores",
                    "typeInfo": {
                        "keys": {
                            "pattern": "(?:[a-zA-Z0-9]+)(?:\\.[a-zA-Z0-9]+)*"
                        },
                        "values": {
                            "desc": "number",
                            "pattern": "-?\\d+(?:\\.\\d+)?"
                        },
                        "desc": "Map of FieldNamePath:Number pairs",
                        "name": "scores"
                    },
                    "filteredBy": [
                        "withScore"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "scores",
                            "fieldNamePath": "scores",
                            "description": "filter by the supplied score",
                            "range": true,
                            "name": "withScore",
                            "and": true,
                            "or": true,
                            "valueType": "scores"
                        }
                    ]
                },
                "custom": {
                    "description": "The tenant specific custom fields.  This may be used to hold tenant specific data alongside the document, but it should not be used as a substitute for normal fields.",
                    "type": "map",
                    "max": 100,
                    "fieldName": "custom",
                    "fieldNamePath": "custom",
                    "typeInfo": {
                        "keys": {
                            "pattern": "[a-zA-Z0-9]+"
                        },
                        "values": {
                            "pattern": "(.+)",
                            "desc": "scalar value or an array of scalar values"
                        },
                        "desc": "key-value pairs"
                    }
                },
                "createdAt": {
                    "description": "The timestamp when created",
                    "type": "timestamp",
                    "readOnly": true,
                    "example": "2014-12-25T12:00:00.000Z",
                    "sort": true,
                    "excludeFromVersion": true,
                    "fieldName": "createdAt",
                    "fieldNamePath": "createdAt",
                    "filteredBy": [
                        "withCreatedAt"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "createdAt",
                            "fieldNamePath": "createdAt",
                            "description": "filter by the supplied createdAt",
                            "range": true,
                            "name": "withCreatedAt",
                            "and": true,
                            "or": true,
                            "valueType": "timestamp"
                        }
                    ]
                },
                "createdBy": {
                    "description": "The user that created",
                    "type": "ref",
                    "readOnly": true,
                    "example": "test:test-admin",
                    "sort": true,
                    "fieldName": "createdBy",
                    "fieldNamePath": "createdBy",
                    "typeInfo": {
                        "desc": "owner:name pair",
                        "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
                        "name": "ref"
                    },
                    "filteredBy": [
                        "withCreatedBy"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "createdBy",
                            "fieldNamePath": "createdBy",
                            "description": "filter by the supplied createdBy",
                            "name": "withCreatedBy",
                            "and": true,
                            "or": true,
                            "valueType": "ref"
                        }
                    ]
                },
                "updatedAt": {
                    "description": "The timestamp when last updated",
                    "type": "timestamp",
                    "readOnly": true,
                    "example": "2014-12-25T12:00:00.000Z",
                    "sort": true,
                    "excludeFromVersion": true,
                    "fieldName": "updatedAt",
                    "fieldNamePath": "updatedAt",
                    "filteredBy": [
                        "withUpdatedAt"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "updatedAt",
                            "fieldNamePath": "updatedAt",
                            "description": "filter by the supplied updatedAt",
                            "range": true,
                            "name": "withUpdatedAt",
                            "and": true,
                            "or": true,
                            "valueType": "timestamp"
                        }
                    ]
                },
                "updatedBy": {
                    "description": "The user that last updated",
                    "type": "ref",
                    "readOnly": true,
                    "example": "test:test-admin",
                    "sort": true,
                    "fieldName": "updatedBy",
                    "fieldNamePath": "updatedBy",
                    "typeInfo": {
                        "desc": "owner:name pair",
                        "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
                        "name": "ref"
                    },
                    "filteredBy": [
                        "withUpdatedBy"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "updatedBy",
                            "fieldNamePath": "updatedBy",
                            "description": "filter by the supplied updatedBy",
                            "name": "withUpdatedBy",
                            "and": true,
                            "or": true,
                            "valueType": "ref"
                        }
                    ]
                },
                "deletedAt": {
                    "description": "The timestamp when deleted (only applicable to deleted resources)",
                    "type": "timestamp",
                    "readOnly": true,
                    "example": "2014-12-25T12:00:00.000Z",
                    "sort": true,
                    "excludeFromVersion": true,
                    "fieldName": "deletedAt",
                    "fieldNamePath": "deletedAt",
                    "filteredBy": [
                        "withDeletedAt"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "deletedAt",
                            "fieldNamePath": "deletedAt",
                            "prohibited": [
                                "enduser"
                            ],
                            "description": "filter by the supplied deletedAt",
                            "range": true,
                            "name": "withDeletedAt",
                            "and": true,
                            "or": true,
                            "valueType": "timestamp"
                        }
                    ]
                },
                "deletedBy": {
                    "description": "The user that deleted (only applicable to deleted resources)",
                    "type": "ref",
                    "readOnly": true,
                    "example": "test:test-admin",
                    "sort": true,
                    "excludeFromVersion": true,
                    "fieldName": "deletedBy",
                    "fieldNamePath": "deletedBy",
                    "typeInfo": {
                        "desc": "owner:name pair",
                        "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
                        "name": "ref"
                    },
                    "filteredBy": [
                        "withDeletedBy"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "deletedBy",
                            "fieldNamePath": "deletedBy",
                            "prohibited": [
                                "enduser"
                            ],
                            "description": "filter by the supplied deletedBy",
                            "name": "withDeletedBy",
                            "and": true,
                            "or": true,
                            "valueType": "ref"
                        }
                    ]
                },
                "reapAt": {
                    "description": "The timestamp for reaping (only applicable to deleted resources)",
                    "type": "timestamp",
                    "readOnly": true,
                    "example": "2014-12-25T12:00:00.000Z",
                    "sort": true,
                    "excludeFromVersion": true,
                    "fieldName": "reapAt",
                    "fieldNamePath": "reapAt",
                    "filteredBy": [
                        "withReapAt"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "reapAt",
                            "fieldNamePath": "reapAt",
                            "prohibited": [
                                "enduser",
                                "service",
                                "admin"
                            ],
                            "description": "filter by the supplied reapAt",
                            "range": true,
                            "name": "withReapAt",
                            "and": true,
                            "or": true,
                            "valueType": "timestamp"
                        }
                    ]
                },
                "version": {
                    "description": "The version hash (computed)",
                    "type": "version",
                    "readOnly": true,
                    "example": "356b54eb90cd04566159dfb9c95a0426998a2f7b",
                    "excludeFromVersion": true,
                    "fieldName": "version",
                    "fieldNamePath": "version",
                    "typeInfo": {
                        "desc": "sha1 hex encoded hash",
                        "pattern": "[a-f0-9]{40}"
                    }
                },
                "metadata": {
                    "description": "A field that holds metadata about the resource",
                    "excludeFromVersion": true,
                    "fields": {},
                    "fieldName": "metadata",
                    "fieldNamePath": "metadata",
                    "typeInfo": {}
                },
                "flowRef": {
                    "description": "Reference to the Flow.",
                    "type": "ref",
                    "sort": true,
                    "required": true,
                    "example": "owner:flow1",
                    "fieldName": "flowRef",
                    "fieldNamePath": "flowRef",
                    "typeInfo": {
                        "desc": "owner:name pair",
                        "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
                        "name": "ref"
                    },
                    "relatedBy": [
                        "flow"
                    ],
                    "relationships": [
                        {
                            "description": "Reference to flow resource",
                            "type": "direct",
                            "resourceType": "flows",
                            "fieldNamePath": "flowRef",
                            "fields": [
                                "ref",
                                "name",
                                "title",
                                "description",
                                "clientToolsVersion"
                            ],
                            "name": "flow",
                            "intersectable": false,
                            "batchSize": 10
                        }
                    ],
                    "filteredBy": [
                        "withFlowRef"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "fieldNamePath": "flowRef",
                            "description": "filter by the supplied flow ref",
                            "label": "flowRef",
                            "name": "withFlowRef",
                            "and": true,
                            "or": true,
                            "valueType": "ref"
                        }
                    ]
                },
                "workOrderRef": {
                    "description": "Reference to the work order from which this Flow belongs.",
                    "type": "ref",
                    "sort": true,
                    "example": "owner:work-order1",
                    "fieldName": "workOrderRef",
                    "fieldNamePath": "workOrderRef",
                    "typeInfo": {
                        "desc": "owner:name pair",
                        "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
                        "name": "ref"
                    },
                    "relatedBy": [
                        "workOrder"
                    ],
                    "relationships": [
                        {
                            "description": "Reference to the work order",
                            "type": "direct",
                            "resourceType": "workOrders",
                            "fieldNamePath": "workOrderRef",
                            "fields": [
                                "ref",
                                "name"
                            ],
                            "name": "workOrder",
                            "intersectable": false,
                            "batchSize": 10
                        }
                    ],
                    "filteredBy": [
                        "withWorkOrderRef"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "fieldNamePath": "workOrderRef",
                            "description": "filter by the supplied work order reference",
                            "label": "workOrderRef",
                            "name": "withWorkOrderRef",
                            "and": true,
                            "or": true,
                            "valueType": "ref"
                        }
                    ]
                },
                "resourcefulContext": {
                    "description": "Reference to the Resource \"context\" that this task was triggered for",
                    "type": "string",
                    "sort": true,
                    "array": true,
                    "example": [
                        "resourceful://metadata/contents/owner:resource1"
                    ],
                    "fieldName": "resourcefulContext",
                    "fieldNamePath": "resourcefulContext",
                    "typeInfo": {
                        "desc": "string",
                        "pattern": ".+",
                        "name": "string"
                    },
                    "filteredBy": [
                        "withResourcefulContext"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "fieldNamePath": "resourcefulContext",
                            "description": "filter by the supplied resourceful context",
                            "label": "resourcefulContext",
                            "prefix": true,
                            "name": "withResourcefulContext",
                            "and": true,
                            "or": true,
                            "valueType": "string"
                        }
                    ]
                },
                "instanceStatus": {
                    "description": "Define the current status of the instance",
                    "type": "string",
                    "allowedValues": [
                        {
                            "value": "PENDING",
                            "description": "The execution is queued waiting for available resource quota.",
                            "alternatives": [],
                            "label": "PENDING"
                        },
                        {
                            "value": "STARTING",
                            "description": "The execution has been scheduled for execution.",
                            "alternatives": [],
                            "label": "STARTING"
                        },
                        {
                            "value": "RUNNING",
                            "description": "The execution has been successfully initialised and is running.",
                            "alternatives": [],
                            "label": "RUNNING"
                        },
                        {
                            "value": "KILLING",
                            "description": "The execution has been tagged to be killed and will begin shutting down.",
                            "alternatives": [],
                            "label": "KILLING"
                        },
                        {
                            "value": "KILLED",
                            "description": "The execution has been successfully killed. This is a terminal state.",
                            "alternatives": [],
                            "label": "KILLED"
                        },
                        {
                            "value": "RESTARTING",
                            "description": "The execution has been tagged to be restarted.",
                            "alternatives": [],
                            "label": "RESTARTING"
                        },
                        {
                            "value": "FINISHED",
                            "description": "The execution finished without errors. This is a terminal state.",
                            "alternatives": [],
                            "label": "FINISHED"
                        },
                        {
                            "value": "FAILED",
                            "description": "The execution finished after reaching a set of failure limits. This is a terminal state.",
                            "alternatives": [],
                            "label": "FAILED"
                        },
                        {
                            "value": "LOST",
                            "description": "The execution stayed in a transient state for too long and has been considered lost. This is a terminal state.",
                            "alternatives": [],
                            "label": "LOST"
                        },
                        {
                            "value": "INVALID",
                            "description": "The execution has some invalid parameter and cannot be performed. This is a terminal state.",
                            "alternatives": [],
                            "label": "INVALID"
                        }
                    ],
                    "sort": true,
                    "example": "FINISHED",
                    "fieldName": "instanceStatus",
                    "fieldNamePath": "instanceStatus",
                    "allowedValueMappings": {
                        "PENDING": "PENDING",
                        "STARTING": "STARTING",
                        "RUNNING": "RUNNING",
                        "KILLING": "KILLING",
                        "KILLED": "KILLED",
                        "RESTARTING": "RESTARTING",
                        "FINISHED": "FINISHED",
                        "FAILED": "FAILED",
                        "LOST": "LOST",
                        "INVALID": "INVALID"
                    },
                    "typeInfo": {
                        "desc": "string",
                        "pattern": ".+",
                        "name": "string"
                    },
                    "filteredBy": [
                        "withInstanceStatus"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "fieldNamePath": "instanceStatus",
                            "description": "filter by the supplied instance status",
                            "label": "instanceStatus",
                            "name": "withInstanceStatus",
                            "and": true,
                            "or": true,
                            "valueType": "string"
                        }
                    ]
                }
            },
            "filters": {
                "q": {
                    "type": "q",
                    "label": "q",
                    "description": "filter by the supplied text",
                    "includes": [
                        "title"
                    ],
                    "name": "q",
                    "valueType": "string",
                    "text": true
                },
                "withName": {
                    "type": "with",
                    "label": "name",
                    "fieldNamePath": "name",
                    "description": "filter by the supplied name",
                    "prefix": true,
                    "name": "withName",
                    "and": true,
                    "or": true,
                    "valueType": "name"
                },
                "withTitle": {
                    "type": "with",
                    "label": "title",
                    "fieldNamePath": "title",
                    "description": "filter by the supplied title",
                    "prefix": true,
                    "name": "withTitle",
                    "and": true,
                    "or": true,
                    "valueType": "string"
                },
                "withRef": {
                    "type": "with",
                    "label": "ref",
                    "fieldNamePath": "ref",
                    "description": "filter by the supplied ref",
                    "name": "withRef",
                    "and": true,
                    "or": true,
                    "valueType": "ref"
                },
                "withAlternativeIdentifiers": {
                    "type": "with",
                    "label": "alternativeIdentifiers",
                    "fieldNamePath": "alternativeIdentifiers",
                    "description": "filter by the supplied alternative identifiers",
                    "prefix": true,
                    "name": "withAlternativeIdentifiers",
                    "and": true,
                    "or": true,
                    "valueType": "stringMap"
                },
                "withTags": {
                    "type": "with",
                    "label": "tags",
                    "fieldNamePath": "tags",
                    "description": "filter by the supplied tags",
                    "name": "withTags",
                    "and": true,
                    "or": true,
                    "valueType": "string"
                },
                "withScore": {
                    "type": "with",
                    "label": "scores",
                    "fieldNamePath": "scores",
                    "description": "filter by the supplied score",
                    "range": true,
                    "name": "withScore",
                    "and": true,
                    "or": true,
                    "valueType": "scores"
                },
                "withCreatedAt": {
                    "type": "with",
                    "label": "createdAt",
                    "fieldNamePath": "createdAt",
                    "description": "filter by the supplied createdAt",
                    "range": true,
                    "name": "withCreatedAt",
                    "and": true,
                    "or": true,
                    "valueType": "timestamp"
                },
                "withCreatedBy": {
                    "type": "with",
                    "label": "createdBy",
                    "fieldNamePath": "createdBy",
                    "description": "filter by the supplied createdBy",
                    "name": "withCreatedBy",
                    "and": true,
                    "or": true,
                    "valueType": "ref"
                },
                "withUpdatedAt": {
                    "type": "with",
                    "label": "updatedAt",
                    "fieldNamePath": "updatedAt",
                    "description": "filter by the supplied updatedAt",
                    "range": true,
                    "name": "withUpdatedAt",
                    "and": true,
                    "or": true,
                    "valueType": "timestamp"
                },
                "withUpdatedBy": {
                    "type": "with",
                    "label": "updatedBy",
                    "fieldNamePath": "updatedBy",
                    "description": "filter by the supplied updatedBy",
                    "name": "withUpdatedBy",
                    "and": true,
                    "or": true,
                    "valueType": "ref"
                },
                "withDeletedAt": {
                    "type": "with",
                    "label": "deletedAt",
                    "fieldNamePath": "deletedAt",
                    "prohibited": [
                        "enduser"
                    ],
                    "description": "filter by the supplied deletedAt",
                    "range": true,
                    "name": "withDeletedAt",
                    "and": true,
                    "or": true,
                    "valueType": "timestamp"
                },
                "withDeletedBy": {
                    "type": "with",
                    "label": "deletedBy",
                    "fieldNamePath": "deletedBy",
                    "prohibited": [
                        "enduser"
                    ],
                    "description": "filter by the supplied deletedBy",
                    "name": "withDeletedBy",
                    "and": true,
                    "or": true,
                    "valueType": "ref"
                },
                "withReapAt": {
                    "type": "with",
                    "label": "reapAt",
                    "fieldNamePath": "reapAt",
                    "prohibited": [
                        "enduser",
                        "service",
                        "admin"
                    ],
                    "description": "filter by the supplied reapAt",
                    "range": true,
                    "name": "withReapAt",
                    "and": true,
                    "or": true,
                    "valueType": "timestamp"
                },
                "withFlowRef": {
                    "type": "with",
                    "fieldNamePath": "flowRef",
                    "description": "filter by the supplied flow ref",
                    "label": "flowRef",
                    "name": "withFlowRef",
                    "and": true,
                    "or": true,
                    "valueType": "ref"
                },
                "withResourcefulContext": {
                    "type": "with",
                    "fieldNamePath": "resourcefulContext",
                    "description": "filter by the supplied resourceful context",
                    "label": "resourcefulContext",
                    "prefix": true,
                    "name": "withResourcefulContext",
                    "and": true,
                    "or": true,
                    "valueType": "string"
                },
                "withInstanceStatus": {
                    "type": "with",
                    "fieldNamePath": "instanceStatus",
                    "description": "filter by the supplied instance status",
                    "label": "instanceStatus",
                    "name": "withInstanceStatus",
                    "and": true,
                    "or": true,
                    "valueType": "string"
                },
                "withWorkOrderRef": {
                    "type": "with",
                    "fieldNamePath": "workOrderRef",
                    "description": "filter by the supplied work order reference",
                    "label": "workOrderRef",
                    "name": "withWorkOrderRef",
                    "and": true,
                    "or": true,
                    "valueType": "ref"
                }
            },
            "relationships": {
                "flow": {
                    "description": "Reference to flow resource",
                    "type": "direct",
                    "resourceType": "flows",
                    "fieldNamePath": "flowRef",
                    "fields": [
                        "ref",
                        "name",
                        "title",
                        "description",
                        "clientToolsVersion"
                    ],
                    "name": "flow",
                    "intersectable": false,
                    "batchSize": 10
                },
                "flowFlags": {
                    "description": "All Flow Tasks related to this flow task",
                    "type": "indirect",
                    "resourceType": "flowFlags",
                    "filterName": "withTaskRef",
                    "fields": [
                        "ref",
                        "name"
                    ],
                    "batchSize": 10,
                    "name": "flowFlags",
                    "intersectable": false
                },
                "flowInstances": {
                    "description": "All Flow Instances related to this flow task",
                    "type": "indirect",
                    "resourceType": "flowInstances",
                    "filterName": "withTaskRef",
                    "fields": [
                        "ref",
                        "name"
                    ],
                    "batchSize": 10,
                    "name": "flowInstances",
                    "intersectable": false
                },
                "workOrder": {
                    "description": "Reference to the work order",
                    "type": "direct",
                    "resourceType": "workOrders",
                    "fieldNamePath": "workOrderRef",
                    "fields": [
                        "ref",
                        "name"
                    ],
                    "name": "workOrder",
                    "intersectable": false,
                    "batchSize": 10
                }
            },
            "restrictions": [
                {
                    "type": "ownership",
                    "message": "must contain an owner for which you have permission",
                    "description": "users can only interact with resources that are owned by a tenant they have access to"
                },
                {
                    "type": "unmodifiable",
                    "message": "not allowed to modify resources created by root:root",
                    "description": "users are not allowed to modify resources that were created by root:root"
                },
                {
                    "type": "primaryKey",
                    "message": "primaryKey must be unique",
                    "description": "the primary key (ref) is derived from owner and name, allowing name to be a tenant specific unique external id"
                }
            ],
            "singularName": "flowTask",
            "pluralName": "flowTasks",
            "serviceName": "workflow",
            "description": "A high level work item to be completed by one or more Instances.",
            "conditionalUpdates": true,
            "hyphenatedPluralName": "flow-tasks",
            "retentionPeriod": "P0D",
            "typeInfo": {}
        },
        "flows": {
            "path": "/data",
            "stability": "experimental",
            "operations": {
                "browse": {
                    "description": "Fetches a list of flows that may be filtered",
                    "actions": [
                        "workflow:flows:read",
                        "workflow:flows:read:browse"
                    ]
                },
                "get": {
                    "description": "Fetches one or more flows using the supplied id(s)",
                    "actions": [
                        "workflow:flows:read",
                        "workflow:flows:read:get"
                    ]
                },
                "storeBatch": {
                    "description": "Stores one or more flows, either creating or wholly replacing",
                    "actions": [
                        "workflow:flows:write",
                        "workflow:flows:write:store",
                        "workflow:flows:write:store:batch"
                    ],
                    "limit": 100
                },
                "storeOne": {
                    "description": "Stores the supplied flow with the supplied id, either creating or wholly replacing",
                    "actions": [
                        "workflow:flows:write",
                        "workflow:flows:write:store",
                        "workflow:flows:write:store:one"
                    ]
                },
                "delete": {
                    "description": "Delete one or more flows using the supplied id(s)",
                    "actions": [
                        "workflow:flows:write",
                        "workflow:flows:write:delete"
                    ]
                }
            },
            "pagination": {
                "pageSize": {
                    "min": 1,
                    "max": 100,
                    "default": 100
                },
                "pages": {
                    "max": 100
                }
            },
            "display": {
                "priority": 5,
                "overview": {
                    "label": "title"
                },
                "info": {
                    "primary": [
                        "ref",
                        "owner",
                        "name"
                    ],
                    "secondary": [
                        "alternativeIdentifiers",
                        "tags",
                        "custom"
                    ],
                    "history": [
                        "createdAt",
                        "createdBy",
                        "updatedAt",
                        "updatedBy",
                        "deletedAt",
                        "deletedBy",
                        "reapAt",
                        "version"
                    ]
                },
                "groups": {
                    "custom": [
                        "custom"
                    ],
                    "identity": [
                        "ref",
                        "owner",
                        "name",
                        "alternativeIdentifiers"
                    ],
                    "history": [
                        "createdAt",
                        "createdBy",
                        "updatedAt",
                        "updatedBy",
                        "deletedAt",
                        "deletedBy",
                        "reapAt",
                        "version"
                    ],
                    "tags": [
                        "tags"
                    ],
                    "overview": [
                        "description"
                    ],
                    "script": [
                        "dsl"
                    ]
                },
                "singularName": "flow",
                "pluralName": "flows"
            },
            "fields": {
                "ref": {
                    "description": "The derived owner:name reference",
                    "type": "ref",
                    "readOnly": true,
                    "sort": true,
                    "example": "test:resource-name",
                    "fieldName": "ref",
                    "fieldNamePath": "ref",
                    "typeInfo": {
                        "desc": "owner:name pair",
                        "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
                        "name": "ref"
                    },
                    "filteredBy": [
                        "withRef"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "ref",
                            "fieldNamePath": "ref",
                            "description": "filter by the supplied ref",
                            "name": "withRef",
                            "and": true,
                            "or": true,
                            "valueType": "ref"
                        }
                    ]
                },
                "alternativeIdentifiers": {
                    "type": "stringMap",
                    "description": "A map of alternative identifiers for this resource",
                    "example": {
                        "tel": "0800100100",
                        "said": "something"
                    },
                    "fieldName": "alternativeIdentifiers",
                    "fieldNamePath": "alternativeIdentifiers",
                    "typeInfo": {
                        "keys": {
                            "pattern": "[a-zA-Z0-9]+"
                        },
                        "values": {
                            "pattern": "(.+)",
                            "desc": "string"
                        },
                        "desc": "key-value pairs",
                        "name": "stringMap"
                    },
                    "filteredBy": [
                        "withAlternativeIdentifiers"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "alternativeIdentifiers",
                            "fieldNamePath": "alternativeIdentifiers",
                            "description": "filter by the supplied alternative identifiers",
                            "prefix": true,
                            "name": "withAlternativeIdentifiers",
                            "and": true,
                            "or": true,
                            "valueType": "stringMap"
                        }
                    ]
                },
                "owner": {
                    "description": "The tenant owner name",
                    "type": "name",
                    "required": true,
                    "sort": true,
                    "example": "test",
                    "countable": true,
                    "fieldName": "owner",
                    "fieldNamePath": "owner",
                    "typeInfo": {
                        "desc": "name",
                        "pattern": "[a-zA-Z0-9_-]+",
                        "name": "name"
                    }
                },
                "name": {
                    "description": "The tenant specific unique name",
                    "type": "name",
                    "sort": true,
                    "example": "resource-name",
                    "fieldName": "name",
                    "fieldNamePath": "name",
                    "typeInfo": {
                        "desc": "name",
                        "pattern": "[a-zA-Z0-9_-]+",
                        "name": "name"
                    },
                    "filteredBy": [
                        "withName"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "name",
                            "fieldNamePath": "name",
                            "description": "filter by the supplied name",
                            "prefix": true,
                            "name": "withName",
                            "and": true,
                            "or": true,
                            "valueType": "name"
                        }
                    ]
                },
                "title": {
                    "description": "A simple title for the Flow",
                    "type": "string",
                    "sort": true,
                    "example": "flow title",
                    "required": true,
                    "primary": true,
                    "fieldName": "title",
                    "fieldNamePath": "title",
                    "typeInfo": {
                        "desc": "string",
                        "pattern": ".+",
                        "name": "string"
                    },
                    "filteredBy": [
                        "withTitle"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "title",
                            "fieldNamePath": "title",
                            "description": "Filter by the supplied title prefix",
                            "prefix": true,
                            "name": "withTitle",
                            "and": true,
                            "or": true,
                            "valueType": "string"
                        }
                    ]
                },
                "tags": {
                    "description": "tags for the resource",
                    "type": "string",
                    "array": true,
                    "example": [
                        "todo",
                        "usage:boxart"
                    ],
                    "fieldName": "tags",
                    "fieldNamePath": "tags",
                    "typeInfo": {
                        "desc": "string",
                        "pattern": ".+",
                        "name": "string"
                    },
                    "filteredBy": [
                        "withTags"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "tags",
                            "fieldNamePath": "tags",
                            "description": "filter by the supplied tags",
                            "name": "withTags",
                            "and": true,
                            "or": true,
                            "valueType": "string"
                        }
                    ]
                },
                "scores": {
                    "description": "scores for the resource",
                    "type": "scores",
                    "example": {
                        "imdb.a3431": 0.9,
                        "fuse": 2
                    },
                    "fieldName": "scores",
                    "fieldNamePath": "scores",
                    "typeInfo": {
                        "keys": {
                            "pattern": "(?:[a-zA-Z0-9]+)(?:\\.[a-zA-Z0-9]+)*"
                        },
                        "values": {
                            "desc": "number",
                            "pattern": "-?\\d+(?:\\.\\d+)?"
                        },
                        "desc": "Map of FieldNamePath:Number pairs",
                        "name": "scores"
                    },
                    "filteredBy": [
                        "withScore"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "scores",
                            "fieldNamePath": "scores",
                            "description": "filter by the supplied score",
                            "range": true,
                            "name": "withScore",
                            "and": true,
                            "or": true,
                            "valueType": "scores"
                        }
                    ]
                },
                "custom": {
                    "description": "The tenant specific custom fields.  This may be used to hold tenant specific data alongside the document, but it should not be used as a substitute for normal fields.",
                    "type": "map",
                    "max": 100,
                    "fieldName": "custom",
                    "fieldNamePath": "custom",
                    "typeInfo": {
                        "keys": {
                            "pattern": "[a-zA-Z0-9]+"
                        },
                        "values": {
                            "pattern": "(.+)",
                            "desc": "scalar value or an array of scalar values"
                        },
                        "desc": "key-value pairs"
                    }
                },
                "createdAt": {
                    "description": "The timestamp when created",
                    "type": "timestamp",
                    "readOnly": true,
                    "example": "2014-12-25T12:00:00.000Z",
                    "sort": true,
                    "excludeFromVersion": true,
                    "fieldName": "createdAt",
                    "fieldNamePath": "createdAt",
                    "filteredBy": [
                        "withCreatedAt"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "createdAt",
                            "fieldNamePath": "createdAt",
                            "description": "filter by the supplied createdAt",
                            "range": true,
                            "name": "withCreatedAt",
                            "and": true,
                            "or": true,
                            "valueType": "timestamp"
                        }
                    ]
                },
                "createdBy": {
                    "description": "The user that created",
                    "type": "ref",
                    "readOnly": true,
                    "example": "test:test-admin",
                    "sort": true,
                    "fieldName": "createdBy",
                    "fieldNamePath": "createdBy",
                    "typeInfo": {
                        "desc": "owner:name pair",
                        "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
                        "name": "ref"
                    },
                    "filteredBy": [
                        "withCreatedBy"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "createdBy",
                            "fieldNamePath": "createdBy",
                            "description": "filter by the supplied createdBy",
                            "name": "withCreatedBy",
                            "and": true,
                            "or": true,
                            "valueType": "ref"
                        }
                    ]
                },
                "updatedAt": {
                    "description": "The timestamp when last updated",
                    "type": "timestamp",
                    "readOnly": true,
                    "example": "2014-12-25T12:00:00.000Z",
                    "sort": true,
                    "excludeFromVersion": true,
                    "fieldName": "updatedAt",
                    "fieldNamePath": "updatedAt",
                    "filteredBy": [
                        "withUpdatedAt"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "updatedAt",
                            "fieldNamePath": "updatedAt",
                            "description": "filter by the supplied updatedAt",
                            "range": true,
                            "name": "withUpdatedAt",
                            "and": true,
                            "or": true,
                            "valueType": "timestamp"
                        }
                    ]
                },
                "updatedBy": {
                    "description": "The user that last updated",
                    "type": "ref",
                    "readOnly": true,
                    "example": "test:test-admin",
                    "sort": true,
                    "fieldName": "updatedBy",
                    "fieldNamePath": "updatedBy",
                    "typeInfo": {
                        "desc": "owner:name pair",
                        "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
                        "name": "ref"
                    },
                    "filteredBy": [
                        "withUpdatedBy"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "updatedBy",
                            "fieldNamePath": "updatedBy",
                            "description": "filter by the supplied updatedBy",
                            "name": "withUpdatedBy",
                            "and": true,
                            "or": true,
                            "valueType": "ref"
                        }
                    ]
                },
                "deletedAt": {
                    "description": "The timestamp when deleted (only applicable to deleted resources)",
                    "type": "timestamp",
                    "readOnly": true,
                    "example": "2014-12-25T12:00:00.000Z",
                    "sort": true,
                    "excludeFromVersion": true,
                    "fieldName": "deletedAt",
                    "fieldNamePath": "deletedAt",
                    "filteredBy": [
                        "withDeletedAt"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "deletedAt",
                            "fieldNamePath": "deletedAt",
                            "prohibited": [
                                "enduser"
                            ],
                            "description": "filter by the supplied deletedAt",
                            "range": true,
                            "name": "withDeletedAt",
                            "and": true,
                            "or": true,
                            "valueType": "timestamp"
                        }
                    ]
                },
                "deletedBy": {
                    "description": "The user that deleted (only applicable to deleted resources)",
                    "type": "ref",
                    "readOnly": true,
                    "example": "test:test-admin",
                    "sort": true,
                    "excludeFromVersion": true,
                    "fieldName": "deletedBy",
                    "fieldNamePath": "deletedBy",
                    "typeInfo": {
                        "desc": "owner:name pair",
                        "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
                        "name": "ref"
                    },
                    "filteredBy": [
                        "withDeletedBy"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "deletedBy",
                            "fieldNamePath": "deletedBy",
                            "prohibited": [
                                "enduser"
                            ],
                            "description": "filter by the supplied deletedBy",
                            "name": "withDeletedBy",
                            "and": true,
                            "or": true,
                            "valueType": "ref"
                        }
                    ]
                },
                "reapAt": {
                    "description": "The timestamp for reaping (only applicable to deleted resources)",
                    "type": "timestamp",
                    "readOnly": true,
                    "example": "2014-12-25T12:00:00.000Z",
                    "sort": true,
                    "excludeFromVersion": true,
                    "fieldName": "reapAt",
                    "fieldNamePath": "reapAt",
                    "filteredBy": [
                        "withReapAt"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "reapAt",
                            "fieldNamePath": "reapAt",
                            "prohibited": [
                                "enduser",
                                "service",
                                "admin"
                            ],
                            "description": "filter by the supplied reapAt",
                            "range": true,
                            "name": "withReapAt",
                            "and": true,
                            "or": true,
                            "valueType": "timestamp"
                        }
                    ]
                },
                "version": {
                    "description": "The version hash (computed)",
                    "type": "version",
                    "readOnly": true,
                    "example": "356b54eb90cd04566159dfb9c95a0426998a2f7b",
                    "excludeFromVersion": true,
                    "fieldName": "version",
                    "fieldNamePath": "version",
                    "typeInfo": {
                        "desc": "sha1 hex encoded hash",
                        "pattern": "[a-f0-9]{40}"
                    }
                },
                "metadata": {
                    "description": "A field that holds metadata about the resource",
                    "excludeFromVersion": true,
                    "fields": {},
                    "fieldName": "metadata",
                    "fieldNamePath": "metadata",
                    "typeInfo": {}
                },
                "description": {
                    "description": "A narrative description of the Flow for use when selecting Flows and to assist with console views",
                    "type": "string",
                    "required": true,
                    "example": "This flow is used to perform ... ",
                    "fieldName": "description",
                    "fieldNamePath": "description",
                    "typeInfo": {
                        "desc": "string",
                        "pattern": ".+",
                        "name": "string"
                    }
                },
                "clientToolsVersion": {
                    "description": "This is the version of the Flow Tools Container Library that the DSL interpreter is compatible with. This allows the Flow Compute Platform to select an appropriate container image during the provisioning lifecycle phase ",
                    "type": "string",
                    "required": true,
                    "example": "0.1.2",
                    "fieldName": "clientToolsVersion",
                    "fieldNamePath": "clientToolsVersion",
                    "typeInfo": {
                        "desc": "string",
                        "pattern": ".+",
                        "name": "string"
                    }
                },
                "instanceArgs": {
                    "description": "The parameter specification for the Flow containing required or optional arguments for Instances to provide",
                    "array": true,
                    "fields": {
                        "name": {
                            "description": "The name of the parameter to be supplied to the Instance",
                            "type": "string",
                            "required": true,
                            "example": "bucket",
                            "fieldName": "name",
                            "fieldNamePath": "instanceArgs.name",
                            "typeInfo": {
                                "desc": "string",
                                "pattern": ".+",
                                "name": "string"
                            },
                            "primary": true
                        },
                        "type": {
                            "description": "The type specification of the parameters. Possible values: String, Int, Date",
                            "type": "string",
                            "allowedValues": [
                                {
                                    "value": "String",
                                    "description": "String",
                                    "alternatives": [],
                                    "label": "String"
                                },
                                {
                                    "value": "Int",
                                    "description": "Integer",
                                    "alternatives": [],
                                    "label": "Int"
                                },
                                {
                                    "value": "Date",
                                    "description": "Date in ISO format",
                                    "alternatives": [],
                                    "label": "Date"
                                }
                            ],
                            "required": true,
                            "fieldName": "type",
                            "fieldNamePath": "instanceArgs.type",
                            "allowedValueMappings": {
                                "String": "String",
                                "Int": "Int",
                                "Date": "Date"
                            },
                            "typeInfo": {
                                "desc": "string",
                                "pattern": ".+",
                                "name": "string"
                            },
                            "primary": true
                        },
                        "required": {
                            "description": "Indicates whether the field is required for all Instances of the Flow",
                            "type": "boolean",
                            "default": false,
                            "fieldName": "required",
                            "fieldNamePath": "instanceArgs.required",
                            "typeInfo": {
                                "desc": "true or false",
                                "pattern": "(?:true|false)",
                                "name": "boolean"
                            },
                            "primary": true
                        }
                    },
                    "fieldName": "instanceArgs",
                    "fieldNamePath": "instanceArgs",
                    "typeInfo": {}
                },
                "operations": {
                    "description": "The unique, user-defined name of the Operation. ",
                    "required": true,
                    "array": true,
                    "fields": {
                        "name": {
                            "description": "The unique, user-defined name of the Operation.",
                            "type": "string",
                            "required": true,
                            "example": "get_the_files",
                            "fieldName": "name",
                            "fieldNamePath": "operations.name",
                            "typeInfo": {
                                "desc": "string",
                                "pattern": ".+",
                                "name": "string"
                            },
                            "primary": true
                        },
                        "type": {
                            "description": "Uniquely identifies the Operation to be executed. The Operation is a key name that can be blacklisted for a particular tenancy.",
                            "type": "string",
                            "required": true,
                            "example": "S3Download",
                            "fieldName": "type",
                            "fieldNamePath": "operations.type",
                            "typeInfo": {
                                "desc": "string",
                                "pattern": ".+",
                                "name": "string"
                            },
                            "primary": true
                        },
                        "inputBundles": {
                            "description": "Collection of bundles provided as input for an operation.",
                            "array": true,
                            "fields": {
                                "name": {
                                    "description": "Input bundle name for the operation.",
                                    "type": "string",
                                    "required": true,
                                    "example": "input_bundle_name",
                                    "fieldName": "name",
                                    "fieldNamePath": "operations.inputBundles.name",
                                    "typeInfo": {
                                        "desc": "string",
                                        "pattern": ".+",
                                        "name": "string"
                                    },
                                    "primary": true
                                },
                                "param": {
                                    "description": "The input bundle used for in the operation.",
                                    "type": "string",
                                    "required": true,
                                    "example": "input_bundle",
                                    "fieldName": "param",
                                    "fieldNamePath": "operations.inputBundles.param",
                                    "typeInfo": {
                                        "desc": "string",
                                        "pattern": ".+",
                                        "name": "string"
                                    },
                                    "primary": true
                                },
                                "type": {
                                    "description": "Bundle type",
                                    "type": "string",
                                    "required": true,
                                    "example": "DataBundle",
                                    "allowedValues": [
                                        {
                                            "value": "Bundle",
                                            "alternatives": [],
                                            "label": "Bundle",
                                            "description": "Bundle"
                                        },
                                        {
                                            "value": "DataBundle",
                                            "alternatives": [],
                                            "label": "DataBundle",
                                            "description": "DataBundle"
                                        }
                                    ],
                                    "fieldName": "type",
                                    "fieldNamePath": "operations.inputBundles.type",
                                    "allowedValueMappings": {
                                        "Bundle": "Bundle",
                                        "DataBundle": "DataBundle"
                                    },
                                    "typeInfo": {
                                        "desc": "string",
                                        "pattern": ".+",
                                        "name": "string"
                                    },
                                    "primary": true
                                },
                                "term": {
                                    "description": "Short name for Bundle to refer to namespace for DataBundle.",
                                    "type": "string",
                                    "example": "@name",
                                    "fieldName": "term",
                                    "fieldNamePath": "operations.inputBundles.term",
                                    "typeInfo": {
                                        "desc": "string",
                                        "pattern": ".+",
                                        "name": "string"
                                    }
                                },
                                "flag": {
                                    "description": "A Flow Flag resource is created if the flag is activated.",
                                    "type": "boolean",
                                    "default": false,
                                    "fieldName": "flag",
                                    "fieldNamePath": "operations.inputBundles.flag",
                                    "typeInfo": {
                                        "desc": "true or false",
                                        "pattern": "(?:true|false)",
                                        "name": "boolean"
                                    }
                                },
                                "message": {
                                    "description": "Message to be populated when the bundle contains information.",
                                    "type": "string",
                                    "fieldName": "message",
                                    "fieldNamePath": "operations.inputBundles.message",
                                    "typeInfo": {
                                        "desc": "string",
                                        "pattern": ".+",
                                        "name": "string"
                                    }
                                }
                            },
                            "fieldName": "inputBundles",
                            "fieldNamePath": "operations.inputBundles",
                            "typeInfo": {}
                        },
                        "outputBundles": {
                            "description": "Collection of bundles generated as output for an operation.",
                            "array": true,
                            "fields": {
                                "name": {
                                    "description": "Output bundle name for the operation",
                                    "type": "string",
                                    "required": true,
                                    "example": "output_bundle_name",
                                    "fieldName": "name",
                                    "fieldNamePath": "operations.outputBundles.name",
                                    "typeInfo": {
                                        "desc": "string",
                                        "pattern": ".+",
                                        "name": "string"
                                    },
                                    "primary": true
                                },
                                "param": {
                                    "description": "Output bundle generated by the operation",
                                    "type": "string",
                                    "required": true,
                                    "example": "output_bundle",
                                    "fieldName": "param",
                                    "fieldNamePath": "operations.outputBundles.param",
                                    "typeInfo": {
                                        "desc": "string",
                                        "pattern": ".+",
                                        "name": "string"
                                    },
                                    "primary": true
                                },
                                "type": {
                                    "description": "Bundle type",
                                    "type": "string",
                                    "required": true,
                                    "example": "DataBundle",
                                    "allowedValues": [
                                        {
                                            "value": "Bundle",
                                            "alternatives": [],
                                            "label": "Bundle",
                                            "description": "Bundle"
                                        },
                                        {
                                            "value": "DataBundle",
                                            "alternatives": [],
                                            "label": "DataBundle",
                                            "description": "DataBundle"
                                        }
                                    ],
                                    "fieldName": "type",
                                    "fieldNamePath": "operations.outputBundles.type",
                                    "allowedValueMappings": {
                                        "Bundle": "Bundle",
                                        "DataBundle": "DataBundle"
                                    },
                                    "typeInfo": {
                                        "desc": "string",
                                        "pattern": ".+",
                                        "name": "string"
                                    },
                                    "primary": true
                                },
                                "term": {
                                    "description": "Short name for Bundle to refer to namespace for DataBundle.",
                                    "type": "string",
                                    "example": "@name",
                                    "fieldName": "term",
                                    "fieldNamePath": "operations.outputBundles.term",
                                    "typeInfo": {
                                        "desc": "string",
                                        "pattern": ".+",
                                        "name": "string"
                                    }
                                }
                            },
                            "fieldName": "outputBundles",
                            "fieldNamePath": "operations.outputBundles",
                            "typeInfo": {}
                        },
                        "errorBundles": {
                            "description": "Collection of bundles generated as output for an operation containing only resources that failed during the operation processing.",
                            "array": true,
                            "fields": {
                                "name": {
                                    "description": "Error bundle name for the operation.",
                                    "type": "string",
                                    "required": true,
                                    "example": "error_bundle_name",
                                    "fieldName": "name",
                                    "fieldNamePath": "operations.errorBundles.name",
                                    "typeInfo": {
                                        "desc": "string",
                                        "pattern": ".+",
                                        "name": "string"
                                    },
                                    "primary": true
                                },
                                "param": {
                                    "description": "Error bundle generated for the operation.",
                                    "type": "string",
                                    "required": true,
                                    "example": "error_bundle",
                                    "fieldName": "param",
                                    "fieldNamePath": "operations.errorBundles.param",
                                    "typeInfo": {
                                        "desc": "string",
                                        "pattern": ".+",
                                        "name": "string"
                                    },
                                    "primary": true
                                },
                                "type": {
                                    "description": "Bundle type",
                                    "type": "string",
                                    "required": true,
                                    "example": "DataBundle",
                                    "allowedValues": [
                                        {
                                            "value": "Bundle",
                                            "alternatives": [],
                                            "label": "Bundle",
                                            "description": "Bundle"
                                        },
                                        {
                                            "value": "DataBundle",
                                            "alternatives": [],
                                            "label": "DataBundle",
                                            "description": "DataBundle"
                                        }
                                    ],
                                    "fieldName": "type",
                                    "fieldNamePath": "operations.errorBundles.type",
                                    "allowedValueMappings": {
                                        "Bundle": "Bundle",
                                        "DataBundle": "DataBundle"
                                    },
                                    "typeInfo": {
                                        "desc": "string",
                                        "pattern": ".+",
                                        "name": "string"
                                    },
                                    "primary": true
                                },
                                "term": {
                                    "description": "Short name for Bundle to refer to namespace for DataBundle.",
                                    "type": "string",
                                    "example": "@name",
                                    "fieldName": "term",
                                    "fieldNamePath": "operations.errorBundles.term",
                                    "typeInfo": {
                                        "desc": "string",
                                        "pattern": ".+",
                                        "name": "string"
                                    }
                                },
                                "flag": {
                                    "description": "A Flow Flag resource is created if the flag is activated.",
                                    "type": "boolean",
                                    "default": false,
                                    "fieldName": "flag",
                                    "fieldNamePath": "operations.errorBundles.flag",
                                    "typeInfo": {
                                        "desc": "true or false",
                                        "pattern": "(?:true|false)",
                                        "name": "boolean"
                                    }
                                },
                                "message": {
                                    "description": "Message to be populated when the error bundle contains information.",
                                    "type": "string",
                                    "fieldName": "message",
                                    "fieldNamePath": "operations.errorBundles.message",
                                    "typeInfo": {
                                        "desc": "string",
                                        "pattern": ".+",
                                        "name": "string"
                                    }
                                }
                            },
                            "fieldName": "errorBundles",
                            "fieldNamePath": "operations.errorBundles",
                            "typeInfo": {}
                        },
                        "parameters": {
                            "description": "Parameters for the Operation to be executed.",
                            "type": "stringMap",
                            "example": {
                                "bucket": "piksel-assets",
                                "prefix": "files/",
                                "target": "target-${date}"
                            },
                            "fieldName": "parameters",
                            "fieldNamePath": "operations.parameters",
                            "typeInfo": {
                                "keys": {
                                    "pattern": "[a-zA-Z0-9]+"
                                },
                                "values": {
                                    "pattern": "(.+)",
                                    "desc": "string"
                                },
                                "desc": "key-value pairs",
                                "name": "stringMap"
                            },
                            "primary": true
                        },
                        "minDuration": {
                            "description": "Operations may fail multiple times during a single Flow Execution's duration.Each of these is called an Operation Run. The minDuration is the minimum number of seconds the Flow Compute Platform will wait before running the same Operation again. This value is specified in seconds.",
                            "type": "integer",
                            "default": 15,
                            "fieldName": "minDuration",
                            "fieldNamePath": "operations.minDuration",
                            "typeInfo": {
                                "desc": "integer",
                                "pattern": "-?[0-9]+"
                            }
                        },
                        "final": {
                            "description": "There are two types of Operation: ordinary operations and finalising Operations. By default, Operations are ordinary. They run as long as the Flow Execution is considered healthy (i.e., no failure limits have been reached.) But once all regular Operations finish or the Flow Execution reaches a certain failure threshold, it moves into a finalisation stage and runs all finalising Operations. These are typically Operations necessary for cleaning up the Flow Execution, such as notifying a 3rd party or moving dropped input files into a processed directory. That can be no dependency relationship between finalising Operations and non-finalising Operations.",
                            "type": "boolean",
                            "default": false,
                            "fieldName": "final",
                            "fieldNamePath": "operations.final",
                            "typeInfo": {
                                "desc": "true or false",
                                "pattern": "(?:true|false)",
                                "name": "boolean"
                            }
                        },
                        "ephemeral": {
                            "description": "By default, Operations are non-ephemeral. If ephemeral is set to True, the Operations status is not used to determine if the containing Flow Execution has completed. Ephemeral Operations are considered best effort but not critical to the success of the Flow Execution.",
                            "type": "boolean",
                            "default": false,
                            "fieldName": "ephemeral",
                            "fieldNamePath": "operations.ephemeral",
                            "typeInfo": {
                                "desc": "true or false",
                                "pattern": "(?:true|false)",
                                "name": "boolean"
                            }
                        },
                        "maxFailures": {
                            "description": "The maximum number of failures (non-zero exit statuses) this Operation can have before being marked permanently failed and not retried. If an operation permanently fails, the Flow Compute Platform looks at the failure limit of the Flow Execution containing the Operation (usually 1) to determine if the overall Flow Execution has failed as well. Setting max_failures to 0 makes the Operation retry indefinitely until it returns a successful (zero) exit status. It retries at most once every min_duration seconds to prevent an effective denial of service attack on the coordinating Flow Compute Platform scheduler.",
                            "type": "integer",
                            "default": 1,
                            "fieldName": "maxFailures",
                            "fieldNamePath": "operations.maxFailures",
                            "typeInfo": {
                                "desc": "integer",
                                "pattern": "-?[0-9]+"
                            }
                        }
                    },
                    "fieldName": "operations",
                    "fieldNamePath": "operations",
                    "typeInfo": {}
                },
                "constraints": {
                    "description": "Order constrains for operations",
                    "required": true,
                    "array": true,
                    "fields": {
                        "order": {
                            "description": "The order array defines Operations that must be ran sequentially. By applying various collections of ordering constraints allows us to specify sequential and parallel arrangements of Operations.",
                            "required": true,
                            "array": true,
                            "type": "string",
                            "fieldName": "order",
                            "fieldNamePath": "constraints.order",
                            "typeInfo": {
                                "desc": "string",
                                "pattern": ".+",
                                "name": "string"
                            },
                            "primary": true
                        }
                    },
                    "fieldName": "constraints",
                    "fieldNamePath": "constraints",
                    "typeInfo": {}
                },
                "dsl": {
                    "description": "DSL that was used to generate the Flow",
                    "fields": {
                        "source": {
                            "description": "The original DSL that was used to generate the Flow. Note that this will not include the contents of imported libraries; only the source original .compute file that was used",
                            "required": true,
                            "type": "string",
                            "fieldName": "source",
                            "fieldNamePath": "dsl.source",
                            "typeInfo": {
                                "desc": "string",
                                "pattern": ".+",
                                "name": "string"
                            },
                            "primary": true
                        },
                        "coordinates": {
                            "description": "The 3-tuple coordinates used when generating the Flow. These are:cluster - the specific cluster defined for the Flow role - the role for the submitted work environment - the environment within the role to submit the work into name - the name for this specific Flow within the compute file",
                            "type": "string",
                            "fieldName": "coordinates",
                            "fieldNamePath": "dsl.coordinates",
                            "typeInfo": {
                                "desc": "string",
                                "pattern": ".+",
                                "name": "string"
                            },
                            "primary": true
                        },
                        "bindings": {
                            "description": "The parameter set that was provided to the compute command via the bind expressions.",
                            "type": "stringMap",
                            "fieldName": "bindings",
                            "fieldNamePath": "dsl.bindings",
                            "typeInfo": {
                                "keys": {
                                    "pattern": "[a-zA-Z0-9]+"
                                },
                                "values": {
                                    "pattern": "(.+)",
                                    "desc": "string"
                                },
                                "desc": "key-value pairs",
                                "name": "stringMap"
                            },
                            "primary": true
                        }
                    },
                    "fieldName": "dsl",
                    "fieldNamePath": "dsl",
                    "typeInfo": {}
                },
                "configuration": {
                    "description": "Configuration values",
                    "fields": {
                        "proxy": {
                            "description": "Proxy configuration",
                            "fields": {
                                "httpUrl": {
                                    "description": "http proxy url",
                                    "type": "string",
                                    "fieldName": "httpUrl",
                                    "fieldNamePath": "configuration.proxy.httpUrl",
                                    "typeInfo": {
                                        "desc": "string",
                                        "pattern": ".+",
                                        "name": "string"
                                    },
                                    "primary": true
                                },
                                "httpsUrl": {
                                    "description": "https proxy url",
                                    "type": "string",
                                    "fieldName": "httpsUrl",
                                    "fieldNamePath": "configuration.proxy.httpsUrl",
                                    "typeInfo": {
                                        "desc": "string",
                                        "pattern": ".+",
                                        "name": "string"
                                    },
                                    "primary": true
                                }
                            },
                            "fieldName": "proxy",
                            "fieldNamePath": "configuration.proxy",
                            "typeInfo": {}
                        },
                        "bundleTerms": {
                            "description": "Provides a collection of mappings between a namespace and its shorthand form, known as the term.",
                            "array": true,
                            "fields": {
                                "namespace": {
                                    "description": "namespace uri",
                                    "type": "string",
                                    "required": true,
                                    "fieldName": "namespace",
                                    "fieldNamePath": "configuration.bundleTerms.namespace",
                                    "typeInfo": {
                                        "desc": "string",
                                        "pattern": ".+",
                                        "name": "string"
                                    },
                                    "primary": true
                                },
                                "term": {
                                    "description": "term name",
                                    "type": "string",
                                    "required": true,
                                    "fieldName": "term",
                                    "fieldNamePath": "configuration.bundleTerms.term",
                                    "typeInfo": {
                                        "desc": "string",
                                        "pattern": ".+",
                                        "name": "string"
                                    },
                                    "primary": true
                                }
                            },
                            "fieldName": "bundleTerms",
                            "fieldNamePath": "configuration.bundleTerms",
                            "typeInfo": {}
                        },
                        "snippets": {
                            "description": "User code snipttes to be executed within a flow operation",
                            "fields": {
                                "name": {
                                    "description": "The snippet name.",
                                    "type": "string",
                                    "required": true,
                                    "example": "my_snippet",
                                    "fieldName": "name",
                                    "fieldNamePath": "configuration.snippets.name",
                                    "typeInfo": {
                                        "desc": "string",
                                        "pattern": ".+",
                                        "name": "string"
                                    },
                                    "primary": true
                                },
                                "type": {
                                    "description": "Type of the snippet that defines the input and output values.",
                                    "type": "string",
                                    "required": true,
                                    "example": "SNIPPET",
                                    "fieldName": "type",
                                    "fieldNamePath": "configuration.snippets.type",
                                    "typeInfo": {
                                        "desc": "string",
                                        "pattern": ".+",
                                        "name": "string"
                                    },
                                    "primary": true
                                },
                                "code": {
                                    "description": "Snippet source code base64 encoded",
                                    "type": "string",
                                    "required": true,
                                    "example": "bXlfc25pcHBldCgpIHsNCiByZXR1cm4gJ0MnDQp9",
                                    "fieldName": "code",
                                    "fieldNamePath": "configuration.snippets.code",
                                    "typeInfo": {
                                        "desc": "string",
                                        "pattern": ".+",
                                        "name": "string"
                                    },
                                    "primary": true
                                },
                                "doc": {
                                    "description": "User provided snippet documentation.",
                                    "type": "string",
                                    "example": "This code always returns C",
                                    "fieldName": "doc",
                                    "fieldNamePath": "configuration.snippets.doc",
                                    "typeInfo": {
                                        "desc": "string",
                                        "pattern": ".+",
                                        "name": "string"
                                    }
                                },
                                "configuration": {
                                    "description": "Defines the behaviour of the Snippet.",
                                    "type": "map",
                                    "example": {
                                        "timeout": 3600
                                    },
                                    "fieldName": "configuration",
                                    "fieldNamePath": "configuration.snippets.configuration",
                                    "typeInfo": {
                                        "keys": {
                                            "pattern": "[a-zA-Z0-9]+"
                                        },
                                        "values": {
                                            "pattern": "(.+)",
                                            "desc": "scalar value or an array of scalar values"
                                        },
                                        "desc": "key-value pairs"
                                    }
                                }
                            },
                            "array": true,
                            "fieldName": "snippets",
                            "fieldNamePath": "configuration.snippets",
                            "typeInfo": {}
                        }
                    },
                    "example": {
                        "proxy": {
                            "httpUrl": "http://my_proxy.com:8080",
                            "httpsUrl": "https://my_https_proxy.com:8080"
                        },
                        "bundleTerms": [
                            {
                                "namespace": "http://xmlns.com/foaf/0.1/name",
                                "term": "@name"
                            },
                            {
                                "namespace": "http://schema.org/json",
                                "term": "@json"
                            }
                        ]
                    },
                    "fieldName": "configuration",
                    "fieldNamePath": "configuration",
                    "typeInfo": {}
                }
            },
            "filters": {
                "q": {
                    "type": "q",
                    "label": "q",
                    "description": "Search for supplied text in title",
                    "includes": [
                        "title"
                    ],
                    "name": "q",
                    "valueType": "string",
                    "text": true
                },
                "withName": {
                    "type": "with",
                    "label": "name",
                    "fieldNamePath": "name",
                    "description": "filter by the supplied name",
                    "prefix": true,
                    "name": "withName",
                    "and": true,
                    "or": true,
                    "valueType": "name"
                },
                "withTitle": {
                    "type": "with",
                    "label": "title",
                    "fieldNamePath": "title",
                    "description": "Filter by the supplied title prefix",
                    "prefix": true,
                    "name": "withTitle",
                    "and": true,
                    "or": true,
                    "valueType": "string"
                },
                "withRef": {
                    "type": "with",
                    "label": "ref",
                    "fieldNamePath": "ref",
                    "description": "filter by the supplied ref",
                    "name": "withRef",
                    "and": true,
                    "or": true,
                    "valueType": "ref"
                },
                "withAlternativeIdentifiers": {
                    "type": "with",
                    "label": "alternativeIdentifiers",
                    "fieldNamePath": "alternativeIdentifiers",
                    "description": "filter by the supplied alternative identifiers",
                    "prefix": true,
                    "name": "withAlternativeIdentifiers",
                    "and": true,
                    "or": true,
                    "valueType": "stringMap"
                },
                "withTags": {
                    "type": "with",
                    "label": "tags",
                    "fieldNamePath": "tags",
                    "description": "filter by the supplied tags",
                    "name": "withTags",
                    "and": true,
                    "or": true,
                    "valueType": "string"
                },
                "withScore": {
                    "type": "with",
                    "label": "scores",
                    "fieldNamePath": "scores",
                    "description": "filter by the supplied score",
                    "range": true,
                    "name": "withScore",
                    "and": true,
                    "or": true,
                    "valueType": "scores"
                },
                "withCreatedAt": {
                    "type": "with",
                    "label": "createdAt",
                    "fieldNamePath": "createdAt",
                    "description": "filter by the supplied createdAt",
                    "range": true,
                    "name": "withCreatedAt",
                    "and": true,
                    "or": true,
                    "valueType": "timestamp"
                },
                "withCreatedBy": {
                    "type": "with",
                    "label": "createdBy",
                    "fieldNamePath": "createdBy",
                    "description": "filter by the supplied createdBy",
                    "name": "withCreatedBy",
                    "and": true,
                    "or": true,
                    "valueType": "ref"
                },
                "withUpdatedAt": {
                    "type": "with",
                    "label": "updatedAt",
                    "fieldNamePath": "updatedAt",
                    "description": "filter by the supplied updatedAt",
                    "range": true,
                    "name": "withUpdatedAt",
                    "and": true,
                    "or": true,
                    "valueType": "timestamp"
                },
                "withUpdatedBy": {
                    "type": "with",
                    "label": "updatedBy",
                    "fieldNamePath": "updatedBy",
                    "description": "filter by the supplied updatedBy",
                    "name": "withUpdatedBy",
                    "and": true,
                    "or": true,
                    "valueType": "ref"
                },
                "withDeletedAt": {
                    "type": "with",
                    "label": "deletedAt",
                    "fieldNamePath": "deletedAt",
                    "prohibited": [
                        "enduser"
                    ],
                    "description": "filter by the supplied deletedAt",
                    "range": true,
                    "name": "withDeletedAt",
                    "and": true,
                    "or": true,
                    "valueType": "timestamp"
                },
                "withDeletedBy": {
                    "type": "with",
                    "label": "deletedBy",
                    "fieldNamePath": "deletedBy",
                    "prohibited": [
                        "enduser"
                    ],
                    "description": "filter by the supplied deletedBy",
                    "name": "withDeletedBy",
                    "and": true,
                    "or": true,
                    "valueType": "ref"
                },
                "withReapAt": {
                    "type": "with",
                    "label": "reapAt",
                    "fieldNamePath": "reapAt",
                    "prohibited": [
                        "enduser",
                        "service",
                        "admin"
                    ],
                    "description": "filter by the supplied reapAt",
                    "range": true,
                    "name": "withReapAt",
                    "and": true,
                    "or": true,
                    "valueType": "timestamp"
                }
            },
            "relationships": {
                "flowInstances": {
                    "description": "All Flow Instances related to this Flow",
                    "type": "indirect",
                    "resourceType": "flowInstances",
                    "filterName": "withFlowRef",
                    "fields": [
                        "ref",
                        "name",
                        "resourcefulContext",
                        "alternativeIdentifiers"
                    ],
                    "batchSize": 10,
                    "name": "flowInstances",
                    "intersectable": false
                },
                "flowTasks": {
                    "description": "All Flow Tasks related to this Flow",
                    "type": "indirect",
                    "resourceType": "flowTasks",
                    "filterName": "withFlowRef",
                    "fields": [
                        "ref",
                        "name"
                    ],
                    "batchSize": 10,
                    "name": "flowTasks",
                    "intersectable": false
                }
            },
            "restrictions": [
                {
                    "type": "ownership",
                    "message": "must contain an owner for which you have permission",
                    "description": "users can only interact with resources that are owned by a tenant they have access to"
                },
                {
                    "type": "unmodifiable",
                    "message": "not allowed to modify resources created by root:root",
                    "description": "users are not allowed to modify resources that were created by root:root"
                },
                {
                    "type": "primaryKey",
                    "message": "primaryKey must be unique",
                    "description": "the primary key (ref) is derived from owner and name, allowing name to be a tenant specific unique external id"
                }
            ],
            "singularName": "flow",
            "pluralName": "flows",
            "serviceName": "workflow",
            "description": "The Flow Resource is a templated representation of work to be done on the Flow Compute Platform. It consists of a collection of Operations and Constraints which together define the execution graph.",
            "conditionalUpdates": true,
            "hyphenatedPluralName": "flows",
            "retentionPeriod": "P0D",
            "typeInfo": {}
        },
        "policies": {
            "path": "/data",
            "stability": "experimental",
            "operations": {
                "browse": {
                    "description": "Fetches a list of policies that may be filtered",
                    "actions": [
                        "workflow:policies:read",
                        "workflow:policies:read:browse"
                    ]
                },
                "get": {
                    "description": "Fetches one or more policies using the supplied id(s)",
                    "actions": [
                        "workflow:policies:read",
                        "workflow:policies:read:get"
                    ]
                },
                "storeBatch": {
                    "description": "Stores one or more policies, either creating or wholly replacing",
                    "actions": [
                        "workflow:policies:write",
                        "workflow:policies:write:store",
                        "workflow:policies:write:store:batch"
                    ],
                    "limit": 100
                },
                "storeOne": {
                    "description": "Stores the supplied policy with the supplied id, either creating or wholly replacing",
                    "actions": [
                        "workflow:policies:write",
                        "workflow:policies:write:store",
                        "workflow:policies:write:store:one"
                    ]
                },
                "delete": {
                    "description": "Delete one or more policies using the supplied id(s)",
                    "actions": [
                        "workflow:policies:write",
                        "workflow:policies:write:delete"
                    ]
                }
            },
            "pagination": {
                "pageSize": {
                    "min": 1,
                    "max": 100,
                    "default": 100
                },
                "pages": {
                    "max": 100
                }
            },
            "display": {
                "priority": 10,
                "overview": {
                    "label": "name"
                },
                "info": {
                    "primary": [
                        "ref",
                        "owner",
                        "name"
                    ],
                    "secondary": [
                        "alternativeIdentifiers",
                        "tags",
                        "custom"
                    ],
                    "history": [
                        "createdAt",
                        "createdBy",
                        "updatedAt",
                        "updatedBy",
                        "deletedAt",
                        "deletedBy",
                        "reapAt",
                        "version"
                    ]
                },
                "groups": {
                    "custom": [
                        "custom"
                    ],
                    "identity": [
                        "ref",
                        "owner",
                        "name",
                        "alternativeIdentifiers"
                    ],
                    "history": [
                        "createdAt",
                        "createdBy",
                        "updatedAt",
                        "updatedBy",
                        "deletedAt",
                        "deletedBy",
                        "reapAt",
                        "version"
                    ],
                    "tags": [
                        "tags"
                    ]
                },
                "singularName": "policy",
                "pluralName": "policies"
            },
            "fields": {
                "ref": {
                    "description": "The derived owner:name reference",
                    "type": "ref",
                    "readOnly": true,
                    "sort": true,
                    "example": "test:resource-name",
                    "fieldName": "ref",
                    "fieldNamePath": "ref",
                    "typeInfo": {
                        "desc": "owner:name pair",
                        "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
                        "name": "ref"
                    },
                    "filteredBy": [
                        "withRef"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "ref",
                            "fieldNamePath": "ref",
                            "description": "filter by the supplied ref",
                            "name": "withRef",
                            "and": true,
                            "or": true,
                            "valueType": "ref"
                        }
                    ],
                    "primary": true
                },
                "alternativeIdentifiers": {
                    "type": "stringMap",
                    "description": "A map of alternative identifiers for this resource",
                    "example": {
                        "tel": "0800100100",
                        "said": "something"
                    },
                    "fieldName": "alternativeIdentifiers",
                    "fieldNamePath": "alternativeIdentifiers",
                    "typeInfo": {
                        "keys": {
                            "pattern": "[a-zA-Z0-9]+"
                        },
                        "values": {
                            "pattern": "(.+)",
                            "desc": "string"
                        },
                        "desc": "key-value pairs",
                        "name": "stringMap"
                    },
                    "filteredBy": [
                        "withAlternativeIdentifiers"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "alternativeIdentifiers",
                            "fieldNamePath": "alternativeIdentifiers",
                            "description": "filter by the supplied alternative identifiers",
                            "prefix": true,
                            "name": "withAlternativeIdentifiers",
                            "and": true,
                            "or": true,
                            "valueType": "stringMap"
                        }
                    ],
                    "primary": true
                },
                "owner": {
                    "description": "The tenant owner name",
                    "type": "name",
                    "required": true,
                    "sort": true,
                    "example": "test",
                    "countable": true,
                    "fieldName": "owner",
                    "fieldNamePath": "owner",
                    "typeInfo": {
                        "desc": "name",
                        "pattern": "[a-zA-Z0-9_-]+",
                        "name": "name"
                    },
                    "primary": true
                },
                "name": {
                    "description": "The tenant specific unique name",
                    "type": "name",
                    "sort": true,
                    "example": "resource-name",
                    "fieldName": "name",
                    "fieldNamePath": "name",
                    "typeInfo": {
                        "desc": "name",
                        "pattern": "[a-zA-Z0-9_-]+",
                        "name": "name"
                    },
                    "filteredBy": [
                        "withName"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "name",
                            "fieldNamePath": "name",
                            "description": "filter by the supplied name",
                            "prefix": true,
                            "name": "withName",
                            "and": true,
                            "or": true,
                            "valueType": "name"
                        }
                    ]
                },
                "title": {
                    "description": "The title for the resource. Will be set to the value of `name` if not supplied",
                    "type": "string",
                    "sort": true,
                    "example": "resource-title",
                    "fieldName": "title",
                    "fieldNamePath": "title",
                    "typeInfo": {
                        "desc": "string",
                        "pattern": ".+",
                        "name": "string"
                    },
                    "filteredBy": [
                        "withTitle"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "title",
                            "fieldNamePath": "title",
                            "description": "filter by the supplied title",
                            "prefix": true,
                            "name": "withTitle",
                            "and": true,
                            "or": true,
                            "valueType": "string"
                        }
                    ]
                },
                "tags": {
                    "description": "tags for the resource",
                    "type": "string",
                    "array": true,
                    "example": [
                        "todo",
                        "usage:boxart"
                    ],
                    "fieldName": "tags",
                    "fieldNamePath": "tags",
                    "typeInfo": {
                        "desc": "string",
                        "pattern": ".+",
                        "name": "string"
                    },
                    "filteredBy": [
                        "withTags"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "tags",
                            "fieldNamePath": "tags",
                            "description": "filter by the supplied tags",
                            "name": "withTags",
                            "and": true,
                            "or": true,
                            "valueType": "string"
                        }
                    ]
                },
                "scores": {
                    "description": "scores for the resource",
                    "type": "scores",
                    "example": {
                        "imdb.a3431": 0.9,
                        "fuse": 2
                    },
                    "fieldName": "scores",
                    "fieldNamePath": "scores",
                    "typeInfo": {
                        "keys": {
                            "pattern": "(?:[a-zA-Z0-9]+)(?:\\.[a-zA-Z0-9]+)*"
                        },
                        "values": {
                            "desc": "number",
                            "pattern": "-?\\d+(?:\\.\\d+)?"
                        },
                        "desc": "Map of FieldNamePath:Number pairs",
                        "name": "scores"
                    },
                    "filteredBy": [
                        "withScore"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "scores",
                            "fieldNamePath": "scores",
                            "description": "filter by the supplied score",
                            "range": true,
                            "name": "withScore",
                            "and": true,
                            "or": true,
                            "valueType": "scores"
                        }
                    ]
                },
                "custom": {
                    "description": "The tenant specific custom fields.  This may be used to hold tenant specific data alongside the document, but it should not be used as a substitute for normal fields.",
                    "type": "map",
                    "max": 100,
                    "fieldName": "custom",
                    "fieldNamePath": "custom",
                    "typeInfo": {
                        "keys": {
                            "pattern": "[a-zA-Z0-9]+"
                        },
                        "values": {
                            "pattern": "(.+)",
                            "desc": "scalar value or an array of scalar values"
                        },
                        "desc": "key-value pairs"
                    }
                },
                "createdAt": {
                    "description": "The timestamp when created",
                    "type": "timestamp",
                    "readOnly": true,
                    "example": "2014-12-25T12:00:00.000Z",
                    "sort": true,
                    "excludeFromVersion": true,
                    "fieldName": "createdAt",
                    "fieldNamePath": "createdAt",
                    "filteredBy": [
                        "withCreatedAt"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "createdAt",
                            "fieldNamePath": "createdAt",
                            "description": "filter by the supplied createdAt",
                            "range": true,
                            "name": "withCreatedAt",
                            "and": true,
                            "or": true,
                            "valueType": "timestamp"
                        }
                    ]
                },
                "createdBy": {
                    "description": "The user that created",
                    "type": "ref",
                    "readOnly": true,
                    "example": "test:test-admin",
                    "sort": true,
                    "fieldName": "createdBy",
                    "fieldNamePath": "createdBy",
                    "typeInfo": {
                        "desc": "owner:name pair",
                        "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
                        "name": "ref"
                    },
                    "filteredBy": [
                        "withCreatedBy"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "createdBy",
                            "fieldNamePath": "createdBy",
                            "description": "filter by the supplied createdBy",
                            "name": "withCreatedBy",
                            "and": true,
                            "or": true,
                            "valueType": "ref"
                        }
                    ]
                },
                "updatedAt": {
                    "description": "The timestamp when last updated",
                    "type": "timestamp",
                    "readOnly": true,
                    "example": "2014-12-25T12:00:00.000Z",
                    "sort": true,
                    "excludeFromVersion": true,
                    "fieldName": "updatedAt",
                    "fieldNamePath": "updatedAt",
                    "filteredBy": [
                        "withUpdatedAt"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "updatedAt",
                            "fieldNamePath": "updatedAt",
                            "description": "filter by the supplied updatedAt",
                            "range": true,
                            "name": "withUpdatedAt",
                            "and": true,
                            "or": true,
                            "valueType": "timestamp"
                        }
                    ]
                },
                "updatedBy": {
                    "description": "The user that last updated",
                    "type": "ref",
                    "readOnly": true,
                    "example": "test:test-admin",
                    "sort": true,
                    "fieldName": "updatedBy",
                    "fieldNamePath": "updatedBy",
                    "typeInfo": {
                        "desc": "owner:name pair",
                        "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
                        "name": "ref"
                    },
                    "filteredBy": [
                        "withUpdatedBy"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "updatedBy",
                            "fieldNamePath": "updatedBy",
                            "description": "filter by the supplied updatedBy",
                            "name": "withUpdatedBy",
                            "and": true,
                            "or": true,
                            "valueType": "ref"
                        }
                    ]
                },
                "deletedAt": {
                    "description": "The timestamp when deleted (only applicable to deleted resources)",
                    "type": "timestamp",
                    "readOnly": true,
                    "example": "2014-12-25T12:00:00.000Z",
                    "sort": true,
                    "excludeFromVersion": true,
                    "fieldName": "deletedAt",
                    "fieldNamePath": "deletedAt",
                    "filteredBy": [
                        "withDeletedAt"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "deletedAt",
                            "fieldNamePath": "deletedAt",
                            "prohibited": [
                                "enduser"
                            ],
                            "description": "filter by the supplied deletedAt",
                            "range": true,
                            "name": "withDeletedAt",
                            "and": true,
                            "or": true,
                            "valueType": "timestamp"
                        }
                    ]
                },
                "deletedBy": {
                    "description": "The user that deleted (only applicable to deleted resources)",
                    "type": "ref",
                    "readOnly": true,
                    "example": "test:test-admin",
                    "sort": true,
                    "excludeFromVersion": true,
                    "fieldName": "deletedBy",
                    "fieldNamePath": "deletedBy",
                    "typeInfo": {
                        "desc": "owner:name pair",
                        "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
                        "name": "ref"
                    },
                    "filteredBy": [
                        "withDeletedBy"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "deletedBy",
                            "fieldNamePath": "deletedBy",
                            "prohibited": [
                                "enduser"
                            ],
                            "description": "filter by the supplied deletedBy",
                            "name": "withDeletedBy",
                            "and": true,
                            "or": true,
                            "valueType": "ref"
                        }
                    ]
                },
                "reapAt": {
                    "description": "The timestamp for reaping (only applicable to deleted resources)",
                    "type": "timestamp",
                    "readOnly": true,
                    "example": "2014-12-25T12:00:00.000Z",
                    "sort": true,
                    "excludeFromVersion": true,
                    "fieldName": "reapAt",
                    "fieldNamePath": "reapAt",
                    "filteredBy": [
                        "withReapAt"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "reapAt",
                            "fieldNamePath": "reapAt",
                            "prohibited": [
                                "enduser",
                                "service",
                                "admin"
                            ],
                            "description": "filter by the supplied reapAt",
                            "range": true,
                            "name": "withReapAt",
                            "and": true,
                            "or": true,
                            "valueType": "timestamp"
                        }
                    ]
                },
                "version": {
                    "description": "The version hash (computed)",
                    "type": "version",
                    "readOnly": true,
                    "example": "356b54eb90cd04566159dfb9c95a0426998a2f7b",
                    "excludeFromVersion": true,
                    "fieldName": "version",
                    "fieldNamePath": "version",
                    "typeInfo": {
                        "desc": "sha1 hex encoded hash",
                        "pattern": "[a-f0-9]{40}"
                    }
                },
                "metadata": {
                    "description": "A field that holds metadata about the resource",
                    "excludeFromVersion": true,
                    "fields": {},
                    "fieldName": "metadata",
                    "fieldNamePath": "metadata",
                    "typeInfo": {}
                },
                "bindings": {
                    "description": "The set of binding parameters supplied as part of this Policy. The binding parameters are key-value pairs which are used during template property placeholder substitution.",
                    "type": "stringMap",
                    "required": true,
                    "example": {
                        "bindingKey1": "bindingValue1"
                    },
                    "fieldName": "bindings",
                    "fieldNamePath": "bindings",
                    "typeInfo": {
                        "keys": {
                            "pattern": "[a-zA-Z0-9]+"
                        },
                        "values": {
                            "pattern": "(.+)",
                            "desc": "string"
                        },
                        "desc": "key-value pairs",
                        "name": "stringMap"
                    }
                }
            },
            "filters": {
                "q": {
                    "type": "q",
                    "label": "q",
                    "description": "filter by the supplied text",
                    "includes": [
                        "title"
                    ],
                    "name": "q",
                    "valueType": "string",
                    "text": true
                },
                "withName": {
                    "type": "with",
                    "label": "name",
                    "fieldNamePath": "name",
                    "description": "filter by the supplied name",
                    "prefix": true,
                    "name": "withName",
                    "and": true,
                    "or": true,
                    "valueType": "name"
                },
                "withTitle": {
                    "type": "with",
                    "label": "title",
                    "fieldNamePath": "title",
                    "description": "filter by the supplied title",
                    "prefix": true,
                    "name": "withTitle",
                    "and": true,
                    "or": true,
                    "valueType": "string"
                },
                "withRef": {
                    "type": "with",
                    "label": "ref",
                    "fieldNamePath": "ref",
                    "description": "filter by the supplied ref",
                    "name": "withRef",
                    "and": true,
                    "or": true,
                    "valueType": "ref"
                },
                "withAlternativeIdentifiers": {
                    "type": "with",
                    "label": "alternativeIdentifiers",
                    "fieldNamePath": "alternativeIdentifiers",
                    "description": "filter by the supplied alternative identifiers",
                    "prefix": true,
                    "name": "withAlternativeIdentifiers",
                    "and": true,
                    "or": true,
                    "valueType": "stringMap"
                },
                "withTags": {
                    "type": "with",
                    "label": "tags",
                    "fieldNamePath": "tags",
                    "description": "filter by the supplied tags",
                    "name": "withTags",
                    "and": true,
                    "or": true,
                    "valueType": "string"
                },
                "withScore": {
                    "type": "with",
                    "label": "scores",
                    "fieldNamePath": "scores",
                    "description": "filter by the supplied score",
                    "range": true,
                    "name": "withScore",
                    "and": true,
                    "or": true,
                    "valueType": "scores"
                },
                "withCreatedAt": {
                    "type": "with",
                    "label": "createdAt",
                    "fieldNamePath": "createdAt",
                    "description": "filter by the supplied createdAt",
                    "range": true,
                    "name": "withCreatedAt",
                    "and": true,
                    "or": true,
                    "valueType": "timestamp"
                },
                "withCreatedBy": {
                    "type": "with",
                    "label": "createdBy",
                    "fieldNamePath": "createdBy",
                    "description": "filter by the supplied createdBy",
                    "name": "withCreatedBy",
                    "and": true,
                    "or": true,
                    "valueType": "ref"
                },
                "withUpdatedAt": {
                    "type": "with",
                    "label": "updatedAt",
                    "fieldNamePath": "updatedAt",
                    "description": "filter by the supplied updatedAt",
                    "range": true,
                    "name": "withUpdatedAt",
                    "and": true,
                    "or": true,
                    "valueType": "timestamp"
                },
                "withUpdatedBy": {
                    "type": "with",
                    "label": "updatedBy",
                    "fieldNamePath": "updatedBy",
                    "description": "filter by the supplied updatedBy",
                    "name": "withUpdatedBy",
                    "and": true,
                    "or": true,
                    "valueType": "ref"
                },
                "withDeletedAt": {
                    "type": "with",
                    "label": "deletedAt",
                    "fieldNamePath": "deletedAt",
                    "prohibited": [
                        "enduser"
                    ],
                    "description": "filter by the supplied deletedAt",
                    "range": true,
                    "name": "withDeletedAt",
                    "and": true,
                    "or": true,
                    "valueType": "timestamp"
                },
                "withDeletedBy": {
                    "type": "with",
                    "label": "deletedBy",
                    "fieldNamePath": "deletedBy",
                    "prohibited": [
                        "enduser"
                    ],
                    "description": "filter by the supplied deletedBy",
                    "name": "withDeletedBy",
                    "and": true,
                    "or": true,
                    "valueType": "ref"
                },
                "withReapAt": {
                    "type": "with",
                    "label": "reapAt",
                    "fieldNamePath": "reapAt",
                    "prohibited": [
                        "enduser",
                        "service",
                        "admin"
                    ],
                    "description": "filter by the supplied reapAt",
                    "range": true,
                    "name": "withReapAt",
                    "and": true,
                    "or": true,
                    "valueType": "timestamp"
                }
            },
            "relationships": {},
            "restrictions": [
                {
                    "type": "ownership",
                    "message": "must contain an owner for which you have permission",
                    "description": "users can only interact with resources that are owned by a tenant they have access to"
                },
                {
                    "type": "unmodifiable",
                    "message": "not allowed to modify resources created by root:root",
                    "description": "users are not allowed to modify resources that were created by root:root"
                },
                {
                    "type": "primaryKey",
                    "message": "primaryKey must be unique",
                    "description": "the primary key (ref) is derived from owner and name, allowing name to be a tenant specific unique external id"
                }
            ],
            "singularName": "policy",
            "pluralName": "policies",
            "serviceName": "workflow",
            "description": "Allows a separately configured policy to be applied to the instance execution.",
            "conditionalUpdates": true,
            "hyphenatedPluralName": "policies",
            "retentionPeriod": "P0D",
            "typeInfo": {}
        },
        "profiles": {
            "path": "/data",
            "stability": "experimental",
            "operations": {
                "browse": {
                    "description": "Fetches a list of profiles that may be filtered",
                    "actions": [
                        "workflow:profiles:read",
                        "workflow:profiles:read:browse"
                    ]
                },
                "get": {
                    "description": "Fetches one or more profiles using the supplied id(s)",
                    "actions": [
                        "workflow:profiles:read",
                        "workflow:profiles:read:get"
                    ]
                },
                "storeBatch": {
                    "description": "Stores one or more profiles, either creating or wholly replacing",
                    "actions": [
                        "workflow:profiles:write",
                        "workflow:profiles:write:store",
                        "workflow:profiles:write:store:batch"
                    ],
                    "limit": 100
                },
                "storeOne": {
                    "description": "Stores the supplied profile with the supplied id, either creating or wholly replacing",
                    "actions": [
                        "workflow:profiles:write",
                        "workflow:profiles:write:store",
                        "workflow:profiles:write:store:one"
                    ]
                },
                "delete": {
                    "description": "Delete one or more profiles using the supplied id(s)",
                    "actions": [
                        "workflow:profiles:write",
                        "workflow:profiles:write:delete"
                    ]
                }
            },
            "pagination": {
                "pageSize": {
                    "min": 1,
                    "max": 100,
                    "default": 100
                },
                "pages": {
                    "max": 100
                }
            },
            "display": {
                "priority": 10,
                "overview": {
                    "label": "name"
                },
                "info": {
                    "primary": [
                        "ref",
                        "owner",
                        "name"
                    ],
                    "secondary": [
                        "alternativeIdentifiers",
                        "tags",
                        "custom"
                    ],
                    "history": [
                        "createdAt",
                        "createdBy",
                        "updatedAt",
                        "updatedBy",
                        "deletedAt",
                        "deletedBy",
                        "reapAt",
                        "version"
                    ]
                },
                "groups": {
                    "custom": [
                        "custom"
                    ],
                    "identity": [
                        "ref",
                        "owner",
                        "name",
                        "alternativeIdentifiers"
                    ],
                    "history": [
                        "createdAt",
                        "createdBy",
                        "updatedAt",
                        "updatedBy",
                        "deletedAt",
                        "deletedBy",
                        "reapAt",
                        "version"
                    ],
                    "tags": [
                        "tags"
                    ]
                },
                "singularName": "profile",
                "pluralName": "profiles"
            },
            "fields": {
                "ref": {
                    "description": "The derived owner:name reference",
                    "type": "ref",
                    "readOnly": true,
                    "sort": true,
                    "example": "test:resource-name",
                    "fieldName": "ref",
                    "fieldNamePath": "ref",
                    "typeInfo": {
                        "desc": "owner:name pair",
                        "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
                        "name": "ref"
                    },
                    "filteredBy": [
                        "withRef"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "ref",
                            "fieldNamePath": "ref",
                            "description": "filter by the supplied ref",
                            "name": "withRef",
                            "and": true,
                            "or": true,
                            "valueType": "ref"
                        }
                    ],
                    "primary": true
                },
                "alternativeIdentifiers": {
                    "type": "stringMap",
                    "description": "A map of alternative identifiers for this resource",
                    "example": {
                        "tel": "0800100100",
                        "said": "something"
                    },
                    "fieldName": "alternativeIdentifiers",
                    "fieldNamePath": "alternativeIdentifiers",
                    "typeInfo": {
                        "keys": {
                            "pattern": "[a-zA-Z0-9]+"
                        },
                        "values": {
                            "pattern": "(.+)",
                            "desc": "string"
                        },
                        "desc": "key-value pairs",
                        "name": "stringMap"
                    },
                    "filteredBy": [
                        "withAlternativeIdentifiers"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "alternativeIdentifiers",
                            "fieldNamePath": "alternativeIdentifiers",
                            "description": "filter by the supplied alternative identifiers",
                            "prefix": true,
                            "name": "withAlternativeIdentifiers",
                            "and": true,
                            "or": true,
                            "valueType": "stringMap"
                        }
                    ],
                    "primary": true
                },
                "owner": {
                    "description": "The tenant owner name",
                    "type": "name",
                    "required": true,
                    "sort": true,
                    "example": "test",
                    "countable": true,
                    "fieldName": "owner",
                    "fieldNamePath": "owner",
                    "typeInfo": {
                        "desc": "name",
                        "pattern": "[a-zA-Z0-9_-]+",
                        "name": "name"
                    },
                    "primary": true
                },
                "name": {
                    "description": "The tenant specific unique name",
                    "type": "name",
                    "sort": true,
                    "example": "resource-name",
                    "fieldName": "name",
                    "fieldNamePath": "name",
                    "typeInfo": {
                        "desc": "name",
                        "pattern": "[a-zA-Z0-9_-]+",
                        "name": "name"
                    },
                    "filteredBy": [
                        "withName"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "name",
                            "fieldNamePath": "name",
                            "description": "filter by the supplied name",
                            "prefix": true,
                            "name": "withName",
                            "and": true,
                            "or": true,
                            "valueType": "name"
                        }
                    ]
                },
                "title": {
                    "description": "The title for the resource. Will be set to the value of `name` if not supplied",
                    "type": "string",
                    "sort": true,
                    "example": "resource-title",
                    "fieldName": "title",
                    "fieldNamePath": "title",
                    "typeInfo": {
                        "desc": "string",
                        "pattern": ".+",
                        "name": "string"
                    },
                    "filteredBy": [
                        "withTitle"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "title",
                            "fieldNamePath": "title",
                            "description": "filter by the supplied title",
                            "prefix": true,
                            "name": "withTitle",
                            "and": true,
                            "or": true,
                            "valueType": "string"
                        }
                    ]
                },
                "tags": {
                    "description": "tags for the resource",
                    "type": "string",
                    "array": true,
                    "example": [
                        "todo",
                        "usage:boxart"
                    ],
                    "fieldName": "tags",
                    "fieldNamePath": "tags",
                    "typeInfo": {
                        "desc": "string",
                        "pattern": ".+",
                        "name": "string"
                    },
                    "filteredBy": [
                        "withTags"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "tags",
                            "fieldNamePath": "tags",
                            "description": "filter by the supplied tags",
                            "name": "withTags",
                            "and": true,
                            "or": true,
                            "valueType": "string"
                        }
                    ]
                },
                "scores": {
                    "description": "scores for the resource",
                    "type": "scores",
                    "example": {
                        "imdb.a3431": 0.9,
                        "fuse": 2
                    },
                    "fieldName": "scores",
                    "fieldNamePath": "scores",
                    "typeInfo": {
                        "keys": {
                            "pattern": "(?:[a-zA-Z0-9]+)(?:\\.[a-zA-Z0-9]+)*"
                        },
                        "values": {
                            "desc": "number",
                            "pattern": "-?\\d+(?:\\.\\d+)?"
                        },
                        "desc": "Map of FieldNamePath:Number pairs",
                        "name": "scores"
                    },
                    "filteredBy": [
                        "withScore"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "scores",
                            "fieldNamePath": "scores",
                            "description": "filter by the supplied score",
                            "range": true,
                            "name": "withScore",
                            "and": true,
                            "or": true,
                            "valueType": "scores"
                        }
                    ]
                },
                "custom": {
                    "description": "The tenant specific custom fields.  This may be used to hold tenant specific data alongside the document, but it should not be used as a substitute for normal fields.",
                    "type": "map",
                    "max": 100,
                    "fieldName": "custom",
                    "fieldNamePath": "custom",
                    "typeInfo": {
                        "keys": {
                            "pattern": "[a-zA-Z0-9]+"
                        },
                        "values": {
                            "pattern": "(.+)",
                            "desc": "scalar value or an array of scalar values"
                        },
                        "desc": "key-value pairs"
                    }
                },
                "createdAt": {
                    "description": "The timestamp when created",
                    "type": "timestamp",
                    "readOnly": true,
                    "example": "2014-12-25T12:00:00.000Z",
                    "sort": true,
                    "excludeFromVersion": true,
                    "fieldName": "createdAt",
                    "fieldNamePath": "createdAt",
                    "filteredBy": [
                        "withCreatedAt"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "createdAt",
                            "fieldNamePath": "createdAt",
                            "description": "filter by the supplied createdAt",
                            "range": true,
                            "name": "withCreatedAt",
                            "and": true,
                            "or": true,
                            "valueType": "timestamp"
                        }
                    ]
                },
                "createdBy": {
                    "description": "The user that created",
                    "type": "ref",
                    "readOnly": true,
                    "example": "test:test-admin",
                    "sort": true,
                    "fieldName": "createdBy",
                    "fieldNamePath": "createdBy",
                    "typeInfo": {
                        "desc": "owner:name pair",
                        "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
                        "name": "ref"
                    },
                    "filteredBy": [
                        "withCreatedBy"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "createdBy",
                            "fieldNamePath": "createdBy",
                            "description": "filter by the supplied createdBy",
                            "name": "withCreatedBy",
                            "and": true,
                            "or": true,
                            "valueType": "ref"
                        }
                    ]
                },
                "updatedAt": {
                    "description": "The timestamp when last updated",
                    "type": "timestamp",
                    "readOnly": true,
                    "example": "2014-12-25T12:00:00.000Z",
                    "sort": true,
                    "excludeFromVersion": true,
                    "fieldName": "updatedAt",
                    "fieldNamePath": "updatedAt",
                    "filteredBy": [
                        "withUpdatedAt"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "updatedAt",
                            "fieldNamePath": "updatedAt",
                            "description": "filter by the supplied updatedAt",
                            "range": true,
                            "name": "withUpdatedAt",
                            "and": true,
                            "or": true,
                            "valueType": "timestamp"
                        }
                    ]
                },
                "updatedBy": {
                    "description": "The user that last updated",
                    "type": "ref",
                    "readOnly": true,
                    "example": "test:test-admin",
                    "sort": true,
                    "fieldName": "updatedBy",
                    "fieldNamePath": "updatedBy",
                    "typeInfo": {
                        "desc": "owner:name pair",
                        "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
                        "name": "ref"
                    },
                    "filteredBy": [
                        "withUpdatedBy"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "updatedBy",
                            "fieldNamePath": "updatedBy",
                            "description": "filter by the supplied updatedBy",
                            "name": "withUpdatedBy",
                            "and": true,
                            "or": true,
                            "valueType": "ref"
                        }
                    ]
                },
                "deletedAt": {
                    "description": "The timestamp when deleted (only applicable to deleted resources)",
                    "type": "timestamp",
                    "readOnly": true,
                    "example": "2014-12-25T12:00:00.000Z",
                    "sort": true,
                    "excludeFromVersion": true,
                    "fieldName": "deletedAt",
                    "fieldNamePath": "deletedAt",
                    "filteredBy": [
                        "withDeletedAt"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "deletedAt",
                            "fieldNamePath": "deletedAt",
                            "prohibited": [
                                "enduser"
                            ],
                            "description": "filter by the supplied deletedAt",
                            "range": true,
                            "name": "withDeletedAt",
                            "and": true,
                            "or": true,
                            "valueType": "timestamp"
                        }
                    ]
                },
                "deletedBy": {
                    "description": "The user that deleted (only applicable to deleted resources)",
                    "type": "ref",
                    "readOnly": true,
                    "example": "test:test-admin",
                    "sort": true,
                    "excludeFromVersion": true,
                    "fieldName": "deletedBy",
                    "fieldNamePath": "deletedBy",
                    "typeInfo": {
                        "desc": "owner:name pair",
                        "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
                        "name": "ref"
                    },
                    "filteredBy": [
                        "withDeletedBy"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "deletedBy",
                            "fieldNamePath": "deletedBy",
                            "prohibited": [
                                "enduser"
                            ],
                            "description": "filter by the supplied deletedBy",
                            "name": "withDeletedBy",
                            "and": true,
                            "or": true,
                            "valueType": "ref"
                        }
                    ]
                },
                "reapAt": {
                    "description": "The timestamp for reaping (only applicable to deleted resources)",
                    "type": "timestamp",
                    "readOnly": true,
                    "example": "2014-12-25T12:00:00.000Z",
                    "sort": true,
                    "excludeFromVersion": true,
                    "fieldName": "reapAt",
                    "fieldNamePath": "reapAt",
                    "filteredBy": [
                        "withReapAt"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "reapAt",
                            "fieldNamePath": "reapAt",
                            "prohibited": [
                                "enduser",
                                "service",
                                "admin"
                            ],
                            "description": "filter by the supplied reapAt",
                            "range": true,
                            "name": "withReapAt",
                            "and": true,
                            "or": true,
                            "valueType": "timestamp"
                        }
                    ]
                },
                "version": {
                    "description": "The version hash (computed)",
                    "type": "version",
                    "readOnly": true,
                    "example": "356b54eb90cd04566159dfb9c95a0426998a2f7b",
                    "excludeFromVersion": true,
                    "fieldName": "version",
                    "fieldNamePath": "version",
                    "typeInfo": {
                        "desc": "sha1 hex encoded hash",
                        "pattern": "[a-f0-9]{40}"
                    }
                },
                "metadata": {
                    "description": "A field that holds metadata about the resource",
                    "excludeFromVersion": true,
                    "fields": {},
                    "fieldName": "metadata",
                    "fieldNamePath": "metadata",
                    "typeInfo": {}
                },
                "secrets": {
                    "description": "A map of secret keys and values.",
                    "type": "map",
                    "fieldName": "secrets",
                    "fieldNamePath": "secrets",
                    "typeInfo": {
                        "keys": {
                            "pattern": "[a-zA-Z0-9]+"
                        },
                        "values": {
                            "pattern": "(.+)",
                            "desc": "scalar value or an array of scalar values"
                        },
                        "desc": "key-value pairs"
                    }
                }
            },
            "filters": {
                "q": {
                    "type": "q",
                    "label": "q",
                    "description": "filter by the supplied text",
                    "includes": [
                        "title"
                    ],
                    "name": "q",
                    "valueType": "string",
                    "text": true
                },
                "withName": {
                    "type": "with",
                    "label": "name",
                    "fieldNamePath": "name",
                    "description": "filter by the supplied name",
                    "prefix": true,
                    "name": "withName",
                    "and": true,
                    "or": true,
                    "valueType": "name"
                },
                "withTitle": {
                    "type": "with",
                    "label": "title",
                    "fieldNamePath": "title",
                    "description": "filter by the supplied title",
                    "prefix": true,
                    "name": "withTitle",
                    "and": true,
                    "or": true,
                    "valueType": "string"
                },
                "withRef": {
                    "type": "with",
                    "label": "ref",
                    "fieldNamePath": "ref",
                    "description": "filter by the supplied ref",
                    "name": "withRef",
                    "and": true,
                    "or": true,
                    "valueType": "ref"
                },
                "withAlternativeIdentifiers": {
                    "type": "with",
                    "label": "alternativeIdentifiers",
                    "fieldNamePath": "alternativeIdentifiers",
                    "description": "filter by the supplied alternative identifiers",
                    "prefix": true,
                    "name": "withAlternativeIdentifiers",
                    "and": true,
                    "or": true,
                    "valueType": "stringMap"
                },
                "withTags": {
                    "type": "with",
                    "label": "tags",
                    "fieldNamePath": "tags",
                    "description": "filter by the supplied tags",
                    "name": "withTags",
                    "and": true,
                    "or": true,
                    "valueType": "string"
                },
                "withScore": {
                    "type": "with",
                    "label": "scores",
                    "fieldNamePath": "scores",
                    "description": "filter by the supplied score",
                    "range": true,
                    "name": "withScore",
                    "and": true,
                    "or": true,
                    "valueType": "scores"
                },
                "withCreatedAt": {
                    "type": "with",
                    "label": "createdAt",
                    "fieldNamePath": "createdAt",
                    "description": "filter by the supplied createdAt",
                    "range": true,
                    "name": "withCreatedAt",
                    "and": true,
                    "or": true,
                    "valueType": "timestamp"
                },
                "withCreatedBy": {
                    "type": "with",
                    "label": "createdBy",
                    "fieldNamePath": "createdBy",
                    "description": "filter by the supplied createdBy",
                    "name": "withCreatedBy",
                    "and": true,
                    "or": true,
                    "valueType": "ref"
                },
                "withUpdatedAt": {
                    "type": "with",
                    "label": "updatedAt",
                    "fieldNamePath": "updatedAt",
                    "description": "filter by the supplied updatedAt",
                    "range": true,
                    "name": "withUpdatedAt",
                    "and": true,
                    "or": true,
                    "valueType": "timestamp"
                },
                "withUpdatedBy": {
                    "type": "with",
                    "label": "updatedBy",
                    "fieldNamePath": "updatedBy",
                    "description": "filter by the supplied updatedBy",
                    "name": "withUpdatedBy",
                    "and": true,
                    "or": true,
                    "valueType": "ref"
                },
                "withDeletedAt": {
                    "type": "with",
                    "label": "deletedAt",
                    "fieldNamePath": "deletedAt",
                    "prohibited": [
                        "enduser"
                    ],
                    "description": "filter by the supplied deletedAt",
                    "range": true,
                    "name": "withDeletedAt",
                    "and": true,
                    "or": true,
                    "valueType": "timestamp"
                },
                "withDeletedBy": {
                    "type": "with",
                    "label": "deletedBy",
                    "fieldNamePath": "deletedBy",
                    "prohibited": [
                        "enduser"
                    ],
                    "description": "filter by the supplied deletedBy",
                    "name": "withDeletedBy",
                    "and": true,
                    "or": true,
                    "valueType": "ref"
                },
                "withReapAt": {
                    "type": "with",
                    "label": "reapAt",
                    "fieldNamePath": "reapAt",
                    "prohibited": [
                        "enduser",
                        "service",
                        "admin"
                    ],
                    "description": "filter by the supplied reapAt",
                    "range": true,
                    "name": "withReapAt",
                    "and": true,
                    "or": true,
                    "valueType": "timestamp"
                }
            },
            "relationships": {},
            "restrictions": [
                {
                    "type": "ownership",
                    "message": "must contain an owner for which you have permission",
                    "description": "users can only interact with resources that are owned by a tenant they have access to"
                },
                {
                    "type": "unmodifiable",
                    "message": "not allowed to modify resources created by root:root",
                    "description": "users are not allowed to modify resources that were created by root:root"
                },
                {
                    "type": "primaryKey",
                    "message": "primaryKey must be unique",
                    "description": "the primary key (ref) is derived from owner and name, allowing name to be a tenant specific unique external id"
                }
            ],
            "singularName": "profile",
            "pluralName": "profiles",
            "serviceName": "workflow",
            "description": "Represent a flow tools secrets profile.",
            "conditionalUpdates": true,
            "hyphenatedPluralName": "profiles",
            "retentionPeriod": "P0D",
            "typeInfo": {}
        },
        "schedulings": {
            "path": "/data",
            "stability": "experimental",
            "operations": {
                "browse": {
                    "description": "Fetches a list of schedulings that may be filtered",
                    "actions": [
                        "workflow:schedulings:read",
                        "workflow:schedulings:read:browse"
                    ]
                },
                "get": {
                    "description": "Fetches one or more schedulings using the supplied id(s)",
                    "actions": [
                        "workflow:schedulings:read",
                        "workflow:schedulings:read:get"
                    ]
                },
                "storeBatch": {
                    "description": "Stores one or more schedulings, either creating or wholly replacing",
                    "actions": [
                        "workflow:schedulings:write",
                        "workflow:schedulings:write:store",
                        "workflow:schedulings:write:store:batch"
                    ],
                    "limit": 100
                },
                "storeOne": {
                    "description": "Stores the supplied scheduling with the supplied id, either creating or wholly replacing",
                    "actions": [
                        "workflow:schedulings:write",
                        "workflow:schedulings:write:store",
                        "workflow:schedulings:write:store:one"
                    ]
                },
                "delete": {
                    "description": "Delete one or more schedulings using the supplied id(s)",
                    "actions": [
                        "workflow:schedulings:write",
                        "workflow:schedulings:write:delete"
                    ]
                }
            },
            "pagination": {
                "pageSize": {
                    "min": 1,
                    "max": 100,
                    "default": 100
                },
                "pages": {
                    "max": 100
                }
            },
            "display": {
                "priority": 10,
                "overview": {
                    "label": "name"
                },
                "info": {
                    "primary": [
                        "ref",
                        "owner",
                        "name"
                    ],
                    "secondary": [
                        "alternativeIdentifiers",
                        "tags",
                        "custom"
                    ],
                    "history": [
                        "createdAt",
                        "createdBy",
                        "updatedAt",
                        "updatedBy",
                        "deletedAt",
                        "deletedBy",
                        "reapAt",
                        "version"
                    ]
                },
                "groups": {
                    "custom": [
                        "custom"
                    ],
                    "identity": [
                        "ref",
                        "owner",
                        "name",
                        "alternativeIdentifiers"
                    ],
                    "history": [
                        "createdAt",
                        "createdBy",
                        "updatedAt",
                        "updatedBy",
                        "deletedAt",
                        "deletedBy",
                        "reapAt",
                        "version"
                    ],
                    "tags": [
                        "tags"
                    ]
                },
                "singularName": "scheduling",
                "pluralName": "schedulings"
            },
            "fields": {
                "ref": {
                    "description": "The derived owner:name reference",
                    "type": "ref",
                    "readOnly": true,
                    "sort": true,
                    "example": "test:resource-name",
                    "fieldName": "ref",
                    "fieldNamePath": "ref",
                    "typeInfo": {
                        "desc": "owner:name pair",
                        "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
                        "name": "ref"
                    },
                    "filteredBy": [
                        "withRef"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "ref",
                            "fieldNamePath": "ref",
                            "description": "filter by the supplied ref",
                            "name": "withRef",
                            "and": true,
                            "or": true,
                            "valueType": "ref"
                        }
                    ],
                    "primary": true
                },
                "alternativeIdentifiers": {
                    "type": "stringMap",
                    "description": "A map of alternative identifiers for this resource",
                    "example": {
                        "tel": "0800100100",
                        "said": "something"
                    },
                    "fieldName": "alternativeIdentifiers",
                    "fieldNamePath": "alternativeIdentifiers",
                    "typeInfo": {
                        "keys": {
                            "pattern": "[a-zA-Z0-9]+"
                        },
                        "values": {
                            "pattern": "(.+)",
                            "desc": "string"
                        },
                        "desc": "key-value pairs",
                        "name": "stringMap"
                    },
                    "filteredBy": [
                        "withAlternativeIdentifiers"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "alternativeIdentifiers",
                            "fieldNamePath": "alternativeIdentifiers",
                            "description": "filter by the supplied alternative identifiers",
                            "prefix": true,
                            "name": "withAlternativeIdentifiers",
                            "and": true,
                            "or": true,
                            "valueType": "stringMap"
                        }
                    ],
                    "primary": true
                },
                "owner": {
                    "description": "The tenant owner name",
                    "type": "name",
                    "required": true,
                    "sort": true,
                    "example": "test",
                    "countable": true,
                    "fieldName": "owner",
                    "fieldNamePath": "owner",
                    "typeInfo": {
                        "desc": "name",
                        "pattern": "[a-zA-Z0-9_-]+",
                        "name": "name"
                    },
                    "primary": true
                },
                "name": {
                    "description": "The tenant specific unique name",
                    "type": "name",
                    "sort": true,
                    "example": "resource-name",
                    "fieldName": "name",
                    "fieldNamePath": "name",
                    "typeInfo": {
                        "desc": "name",
                        "pattern": "[a-zA-Z0-9_-]+",
                        "name": "name"
                    },
                    "filteredBy": [
                        "withName"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "name",
                            "fieldNamePath": "name",
                            "description": "filter by the supplied name",
                            "prefix": true,
                            "name": "withName",
                            "and": true,
                            "or": true,
                            "valueType": "name"
                        }
                    ]
                },
                "title": {
                    "description": "The title for the resource. Will be set to the value of `name` if not supplied",
                    "type": "string",
                    "sort": true,
                    "example": "resource-title",
                    "fieldName": "title",
                    "fieldNamePath": "title",
                    "typeInfo": {
                        "desc": "string",
                        "pattern": ".+",
                        "name": "string"
                    },
                    "filteredBy": [
                        "withTitle"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "title",
                            "fieldNamePath": "title",
                            "description": "filter by the supplied title",
                            "prefix": true,
                            "name": "withTitle",
                            "and": true,
                            "or": true,
                            "valueType": "string"
                        }
                    ]
                },
                "tags": {
                    "description": "tags for the resource",
                    "type": "string",
                    "array": true,
                    "example": [
                        "todo",
                        "usage:boxart"
                    ],
                    "fieldName": "tags",
                    "fieldNamePath": "tags",
                    "typeInfo": {
                        "desc": "string",
                        "pattern": ".+",
                        "name": "string"
                    },
                    "filteredBy": [
                        "withTags"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "tags",
                            "fieldNamePath": "tags",
                            "description": "filter by the supplied tags",
                            "name": "withTags",
                            "and": true,
                            "or": true,
                            "valueType": "string"
                        }
                    ]
                },
                "scores": {
                    "description": "scores for the resource",
                    "type": "scores",
                    "example": {
                        "imdb.a3431": 0.9,
                        "fuse": 2
                    },
                    "fieldName": "scores",
                    "fieldNamePath": "scores",
                    "typeInfo": {
                        "keys": {
                            "pattern": "(?:[a-zA-Z0-9]+)(?:\\.[a-zA-Z0-9]+)*"
                        },
                        "values": {
                            "desc": "number",
                            "pattern": "-?\\d+(?:\\.\\d+)?"
                        },
                        "desc": "Map of FieldNamePath:Number pairs",
                        "name": "scores"
                    },
                    "filteredBy": [
                        "withScore"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "scores",
                            "fieldNamePath": "scores",
                            "description": "filter by the supplied score",
                            "range": true,
                            "name": "withScore",
                            "and": true,
                            "or": true,
                            "valueType": "scores"
                        }
                    ]
                },
                "custom": {
                    "description": "The tenant specific custom fields.  This may be used to hold tenant specific data alongside the document, but it should not be used as a substitute for normal fields.",
                    "type": "map",
                    "max": 100,
                    "fieldName": "custom",
                    "fieldNamePath": "custom",
                    "typeInfo": {
                        "keys": {
                            "pattern": "[a-zA-Z0-9]+"
                        },
                        "values": {
                            "pattern": "(.+)",
                            "desc": "scalar value or an array of scalar values"
                        },
                        "desc": "key-value pairs"
                    }
                },
                "createdAt": {
                    "description": "The timestamp when created",
                    "type": "timestamp",
                    "readOnly": true,
                    "example": "2014-12-25T12:00:00.000Z",
                    "sort": true,
                    "excludeFromVersion": true,
                    "fieldName": "createdAt",
                    "fieldNamePath": "createdAt",
                    "filteredBy": [
                        "withCreatedAt"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "createdAt",
                            "fieldNamePath": "createdAt",
                            "description": "filter by the supplied createdAt",
                            "range": true,
                            "name": "withCreatedAt",
                            "and": true,
                            "or": true,
                            "valueType": "timestamp"
                        }
                    ]
                },
                "createdBy": {
                    "description": "The user that created",
                    "type": "ref",
                    "readOnly": true,
                    "example": "test:test-admin",
                    "sort": true,
                    "fieldName": "createdBy",
                    "fieldNamePath": "createdBy",
                    "typeInfo": {
                        "desc": "owner:name pair",
                        "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
                        "name": "ref"
                    },
                    "filteredBy": [
                        "withCreatedBy"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "createdBy",
                            "fieldNamePath": "createdBy",
                            "description": "filter by the supplied createdBy",
                            "name": "withCreatedBy",
                            "and": true,
                            "or": true,
                            "valueType": "ref"
                        }
                    ]
                },
                "updatedAt": {
                    "description": "The timestamp when last updated",
                    "type": "timestamp",
                    "readOnly": true,
                    "example": "2014-12-25T12:00:00.000Z",
                    "sort": true,
                    "excludeFromVersion": true,
                    "fieldName": "updatedAt",
                    "fieldNamePath": "updatedAt",
                    "filteredBy": [
                        "withUpdatedAt"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "updatedAt",
                            "fieldNamePath": "updatedAt",
                            "description": "filter by the supplied updatedAt",
                            "range": true,
                            "name": "withUpdatedAt",
                            "and": true,
                            "or": true,
                            "valueType": "timestamp"
                        }
                    ]
                },
                "updatedBy": {
                    "description": "The user that last updated",
                    "type": "ref",
                    "readOnly": true,
                    "example": "test:test-admin",
                    "sort": true,
                    "fieldName": "updatedBy",
                    "fieldNamePath": "updatedBy",
                    "typeInfo": {
                        "desc": "owner:name pair",
                        "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
                        "name": "ref"
                    },
                    "filteredBy": [
                        "withUpdatedBy"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "updatedBy",
                            "fieldNamePath": "updatedBy",
                            "description": "filter by the supplied updatedBy",
                            "name": "withUpdatedBy",
                            "and": true,
                            "or": true,
                            "valueType": "ref"
                        }
                    ]
                },
                "deletedAt": {
                    "description": "The timestamp when deleted (only applicable to deleted resources)",
                    "type": "timestamp",
                    "readOnly": true,
                    "example": "2014-12-25T12:00:00.000Z",
                    "sort": true,
                    "excludeFromVersion": true,
                    "fieldName": "deletedAt",
                    "fieldNamePath": "deletedAt",
                    "filteredBy": [
                        "withDeletedAt"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "deletedAt",
                            "fieldNamePath": "deletedAt",
                            "prohibited": [
                                "enduser"
                            ],
                            "description": "filter by the supplied deletedAt",
                            "range": true,
                            "name": "withDeletedAt",
                            "and": true,
                            "or": true,
                            "valueType": "timestamp"
                        }
                    ]
                },
                "deletedBy": {
                    "description": "The user that deleted (only applicable to deleted resources)",
                    "type": "ref",
                    "readOnly": true,
                    "example": "test:test-admin",
                    "sort": true,
                    "excludeFromVersion": true,
                    "fieldName": "deletedBy",
                    "fieldNamePath": "deletedBy",
                    "typeInfo": {
                        "desc": "owner:name pair",
                        "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
                        "name": "ref"
                    },
                    "filteredBy": [
                        "withDeletedBy"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "deletedBy",
                            "fieldNamePath": "deletedBy",
                            "prohibited": [
                                "enduser"
                            ],
                            "description": "filter by the supplied deletedBy",
                            "name": "withDeletedBy",
                            "and": true,
                            "or": true,
                            "valueType": "ref"
                        }
                    ]
                },
                "reapAt": {
                    "description": "The timestamp for reaping (only applicable to deleted resources)",
                    "type": "timestamp",
                    "readOnly": true,
                    "example": "2014-12-25T12:00:00.000Z",
                    "sort": true,
                    "excludeFromVersion": true,
                    "fieldName": "reapAt",
                    "fieldNamePath": "reapAt",
                    "filteredBy": [
                        "withReapAt"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "reapAt",
                            "fieldNamePath": "reapAt",
                            "prohibited": [
                                "enduser",
                                "service",
                                "admin"
                            ],
                            "description": "filter by the supplied reapAt",
                            "range": true,
                            "name": "withReapAt",
                            "and": true,
                            "or": true,
                            "valueType": "timestamp"
                        }
                    ]
                },
                "version": {
                    "description": "The version hash (computed)",
                    "type": "version",
                    "readOnly": true,
                    "example": "356b54eb90cd04566159dfb9c95a0426998a2f7b",
                    "excludeFromVersion": true,
                    "fieldName": "version",
                    "fieldNamePath": "version",
                    "typeInfo": {
                        "desc": "sha1 hex encoded hash",
                        "pattern": "[a-f0-9]{40}"
                    }
                },
                "metadata": {
                    "description": "A field that holds metadata about the resource",
                    "excludeFromVersion": true,
                    "fields": {},
                    "fieldName": "metadata",
                    "fieldNamePath": "metadata",
                    "typeInfo": {}
                },
                "deployment": {
                    "description": "Deployment configuration which is used internally to determine how the work is scheduled within the system.",
                    "type": "stringMap",
                    "required": true,
                    "example": {
                        "clusterName": "devcluster2"
                    },
                    "fieldName": "deployment",
                    "fieldNamePath": "deployment",
                    "typeInfo": {
                        "keys": {
                            "pattern": "[a-zA-Z0-9]+"
                        },
                        "values": {
                            "pattern": "(.+)",
                            "desc": "string"
                        },
                        "desc": "key-value pairs",
                        "name": "stringMap"
                    }
                }
            },
            "filters": {
                "q": {
                    "type": "q",
                    "label": "q",
                    "description": "filter by the supplied text",
                    "includes": [
                        "title"
                    ],
                    "name": "q",
                    "valueType": "string",
                    "text": true
                },
                "withName": {
                    "type": "with",
                    "label": "name",
                    "fieldNamePath": "name",
                    "description": "filter by the supplied name",
                    "prefix": true,
                    "name": "withName",
                    "and": true,
                    "or": true,
                    "valueType": "name"
                },
                "withTitle": {
                    "type": "with",
                    "label": "title",
                    "fieldNamePath": "title",
                    "description": "filter by the supplied title",
                    "prefix": true,
                    "name": "withTitle",
                    "and": true,
                    "or": true,
                    "valueType": "string"
                },
                "withRef": {
                    "type": "with",
                    "label": "ref",
                    "fieldNamePath": "ref",
                    "description": "filter by the supplied ref",
                    "name": "withRef",
                    "and": true,
                    "or": true,
                    "valueType": "ref"
                },
                "withAlternativeIdentifiers": {
                    "type": "with",
                    "label": "alternativeIdentifiers",
                    "fieldNamePath": "alternativeIdentifiers",
                    "description": "filter by the supplied alternative identifiers",
                    "prefix": true,
                    "name": "withAlternativeIdentifiers",
                    "and": true,
                    "or": true,
                    "valueType": "stringMap"
                },
                "withTags": {
                    "type": "with",
                    "label": "tags",
                    "fieldNamePath": "tags",
                    "description": "filter by the supplied tags",
                    "name": "withTags",
                    "and": true,
                    "or": true,
                    "valueType": "string"
                },
                "withScore": {
                    "type": "with",
                    "label": "scores",
                    "fieldNamePath": "scores",
                    "description": "filter by the supplied score",
                    "range": true,
                    "name": "withScore",
                    "and": true,
                    "or": true,
                    "valueType": "scores"
                },
                "withCreatedAt": {
                    "type": "with",
                    "label": "createdAt",
                    "fieldNamePath": "createdAt",
                    "description": "filter by the supplied createdAt",
                    "range": true,
                    "name": "withCreatedAt",
                    "and": true,
                    "or": true,
                    "valueType": "timestamp"
                },
                "withCreatedBy": {
                    "type": "with",
                    "label": "createdBy",
                    "fieldNamePath": "createdBy",
                    "description": "filter by the supplied createdBy",
                    "name": "withCreatedBy",
                    "and": true,
                    "or": true,
                    "valueType": "ref"
                },
                "withUpdatedAt": {
                    "type": "with",
                    "label": "updatedAt",
                    "fieldNamePath": "updatedAt",
                    "description": "filter by the supplied updatedAt",
                    "range": true,
                    "name": "withUpdatedAt",
                    "and": true,
                    "or": true,
                    "valueType": "timestamp"
                },
                "withUpdatedBy": {
                    "type": "with",
                    "label": "updatedBy",
                    "fieldNamePath": "updatedBy",
                    "description": "filter by the supplied updatedBy",
                    "name": "withUpdatedBy",
                    "and": true,
                    "or": true,
                    "valueType": "ref"
                },
                "withDeletedAt": {
                    "type": "with",
                    "label": "deletedAt",
                    "fieldNamePath": "deletedAt",
                    "prohibited": [
                        "enduser"
                    ],
                    "description": "filter by the supplied deletedAt",
                    "range": true,
                    "name": "withDeletedAt",
                    "and": true,
                    "or": true,
                    "valueType": "timestamp"
                },
                "withDeletedBy": {
                    "type": "with",
                    "label": "deletedBy",
                    "fieldNamePath": "deletedBy",
                    "prohibited": [
                        "enduser"
                    ],
                    "description": "filter by the supplied deletedBy",
                    "name": "withDeletedBy",
                    "and": true,
                    "or": true,
                    "valueType": "ref"
                },
                "withReapAt": {
                    "type": "with",
                    "label": "reapAt",
                    "fieldNamePath": "reapAt",
                    "prohibited": [
                        "enduser",
                        "service",
                        "admin"
                    ],
                    "description": "filter by the supplied reapAt",
                    "range": true,
                    "name": "withReapAt",
                    "and": true,
                    "or": true,
                    "valueType": "timestamp"
                }
            },
            "relationships": {},
            "restrictions": [
                {
                    "type": "ownership",
                    "message": "must contain an owner for which you have permission",
                    "description": "users can only interact with resources that are owned by a tenant they have access to"
                },
                {
                    "type": "unmodifiable",
                    "message": "not allowed to modify resources created by root:root",
                    "description": "users are not allowed to modify resources that were created by root:root"
                },
                {
                    "type": "primaryKey",
                    "message": "primaryKey must be unique",
                    "description": "the primary key (ref) is derived from owner and name, allowing name to be a tenant specific unique external id"
                }
            ],
            "singularName": "scheduling",
            "pluralName": "schedulings",
            "serviceName": "workflow",
            "description": "Allows a separately configured scheduling configuration to be applied to the instance execution.",
            "conditionalUpdates": true,
            "hyphenatedPluralName": "schedulings",
            "retentionPeriod": "P0D",
            "typeInfo": {}
        },
        "stepProfiles": {
            "path": "/data",
            "stability": "experimental",
            "operations": {
                "browse": {
                    "description": "Fetches a list of step profiles that may be filtered",
                    "actions": [
                        "workflow:step-profiles:read",
                        "workflow:step-profiles:read:browse"
                    ]
                },
                "get": {
                    "description": "Fetches one or more step profiles using the supplied id(s)",
                    "actions": [
                        "workflow:step-profiles:read",
                        "workflow:step-profiles:read:get"
                    ]
                },
                "storeBatch": {
                    "description": "Stores one or more step profiles, either creating or wholly replacing",
                    "actions": [
                        "workflow:step-profiles:write",
                        "workflow:step-profiles:write:store",
                        "workflow:step-profiles:write:store:batch"
                    ],
                    "limit": 100
                },
                "storeOne": {
                    "description": "Stores the supplied step profile with the supplied id, either creating or wholly replacing",
                    "actions": [
                        "workflow:step-profiles:write",
                        "workflow:step-profiles:write:store",
                        "workflow:step-profiles:write:store:one"
                    ]
                },
                "delete": {
                    "description": "Delete one or more step profiles using the supplied id(s)",
                    "actions": [
                        "workflow:step-profiles:write",
                        "workflow:step-profiles:write:delete"
                    ]
                }
            },
            "pagination": {
                "pageSize": {
                    "min": 1,
                    "max": 100,
                    "default": 100
                },
                "pages": {
                    "max": 100
                }
            },
            "display": {
                "priority": 20,
                "overview": {
                    "label": "name"
                },
                "info": {
                    "primary": [
                        "ref",
                        "owner",
                        "name"
                    ],
                    "secondary": [
                        "alternativeIdentifiers",
                        "tags",
                        "custom"
                    ],
                    "history": [
                        "createdAt",
                        "createdBy",
                        "updatedAt",
                        "updatedBy",
                        "deletedAt",
                        "deletedBy",
                        "reapAt",
                        "version"
                    ]
                },
                "groups": {
                    "custom": [
                        "custom"
                    ],
                    "identity": [
                        "ref",
                        "owner",
                        "name",
                        "alternativeIdentifiers"
                    ],
                    "history": [
                        "createdAt",
                        "createdBy",
                        "updatedAt",
                        "updatedBy",
                        "deletedAt",
                        "deletedBy",
                        "reapAt",
                        "version"
                    ],
                    "tags": [
                        "tags"
                    ]
                },
                "singularName": "step profile",
                "pluralName": "step profiles"
            },
            "fields": {
                "ref": {
                    "description": "The derived owner:name reference",
                    "type": "ref",
                    "readOnly": true,
                    "sort": true,
                    "example": "test:resource-name",
                    "fieldName": "ref",
                    "fieldNamePath": "ref",
                    "typeInfo": {
                        "desc": "owner:name pair",
                        "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
                        "name": "ref"
                    },
                    "filteredBy": [
                        "withRef"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "ref",
                            "fieldNamePath": "ref",
                            "description": "filter by the supplied ref",
                            "name": "withRef",
                            "and": true,
                            "or": true,
                            "valueType": "ref"
                        }
                    ]
                },
                "alternativeIdentifiers": {
                    "type": "stringMap",
                    "description": "A map of alternative identifiers for this resource",
                    "example": {
                        "tel": "0800100100",
                        "said": "something"
                    },
                    "fieldName": "alternativeIdentifiers",
                    "fieldNamePath": "alternativeIdentifiers",
                    "typeInfo": {
                        "keys": {
                            "pattern": "[a-zA-Z0-9]+"
                        },
                        "values": {
                            "pattern": "(.+)",
                            "desc": "string"
                        },
                        "desc": "key-value pairs",
                        "name": "stringMap"
                    },
                    "filteredBy": [
                        "withAlternativeIdentifiers"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "alternativeIdentifiers",
                            "fieldNamePath": "alternativeIdentifiers",
                            "description": "filter by the supplied alternative identifiers",
                            "prefix": true,
                            "name": "withAlternativeIdentifiers",
                            "and": true,
                            "or": true,
                            "valueType": "stringMap"
                        }
                    ]
                },
                "owner": {
                    "description": "The tenant owner name",
                    "type": "name",
                    "required": true,
                    "sort": true,
                    "example": "test",
                    "countable": true,
                    "fieldName": "owner",
                    "fieldNamePath": "owner",
                    "typeInfo": {
                        "desc": "name",
                        "pattern": "[a-zA-Z0-9_-]+",
                        "name": "name"
                    }
                },
                "name": {
                    "description": "The tenant specific unique name",
                    "type": "name",
                    "sort": true,
                    "example": "resource-name",
                    "fieldName": "name",
                    "fieldNamePath": "name",
                    "typeInfo": {
                        "desc": "name",
                        "pattern": "[a-zA-Z0-9_-]+",
                        "name": "name"
                    },
                    "filteredBy": [
                        "withName"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "name",
                            "fieldNamePath": "name",
                            "description": "filter by the supplied name",
                            "prefix": true,
                            "name": "withName",
                            "and": true,
                            "or": true,
                            "valueType": "name"
                        }
                    ]
                },
                "title": {
                    "description": "The short title of the step profile - used for display purposes",
                    "type": "string",
                    "sort": true,
                    "example": "Standart HLS encoding settings",
                    "primary": true,
                    "fieldName": "title",
                    "fieldNamePath": "title",
                    "typeInfo": {
                        "desc": "string",
                        "pattern": ".+",
                        "name": "string"
                    },
                    "filteredBy": [
                        "withTitle"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "title",
                            "fieldNamePath": "title",
                            "description": "filter by the supplied title prefix",
                            "prefix": true,
                            "name": "withTitle",
                            "and": true,
                            "or": true,
                            "valueType": "string"
                        }
                    ]
                },
                "tags": {
                    "description": "tags for the resource",
                    "type": "string",
                    "array": true,
                    "example": [
                        "todo",
                        "usage:boxart"
                    ],
                    "fieldName": "tags",
                    "fieldNamePath": "tags",
                    "typeInfo": {
                        "desc": "string",
                        "pattern": ".+",
                        "name": "string"
                    },
                    "filteredBy": [
                        "withTags"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "tags",
                            "fieldNamePath": "tags",
                            "description": "filter by the supplied tags",
                            "name": "withTags",
                            "and": true,
                            "or": true,
                            "valueType": "string"
                        }
                    ]
                },
                "scores": {
                    "description": "scores for the resource",
                    "type": "scores",
                    "example": {
                        "imdb.a3431": 0.9,
                        "fuse": 2
                    },
                    "fieldName": "scores",
                    "fieldNamePath": "scores",
                    "typeInfo": {
                        "keys": {
                            "pattern": "(?:[a-zA-Z0-9]+)(?:\\.[a-zA-Z0-9]+)*"
                        },
                        "values": {
                            "desc": "number",
                            "pattern": "-?\\d+(?:\\.\\d+)?"
                        },
                        "desc": "Map of FieldNamePath:Number pairs",
                        "name": "scores"
                    },
                    "filteredBy": [
                        "withScore"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "scores",
                            "fieldNamePath": "scores",
                            "description": "filter by the supplied score",
                            "range": true,
                            "name": "withScore",
                            "and": true,
                            "or": true,
                            "valueType": "scores"
                        }
                    ]
                },
                "custom": {
                    "description": "The tenant specific custom fields.  This may be used to hold tenant specific data alongside the document, but it should not be used as a substitute for normal fields.",
                    "type": "map",
                    "max": 100,
                    "fieldName": "custom",
                    "fieldNamePath": "custom",
                    "typeInfo": {
                        "keys": {
                            "pattern": "[a-zA-Z0-9]+"
                        },
                        "values": {
                            "pattern": "(.+)",
                            "desc": "scalar value or an array of scalar values"
                        },
                        "desc": "key-value pairs"
                    }
                },
                "createdAt": {
                    "description": "The timestamp when created",
                    "type": "timestamp",
                    "readOnly": true,
                    "example": "2014-12-25T12:00:00.000Z",
                    "sort": true,
                    "excludeFromVersion": true,
                    "fieldName": "createdAt",
                    "fieldNamePath": "createdAt",
                    "filteredBy": [
                        "withCreatedAt"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "createdAt",
                            "fieldNamePath": "createdAt",
                            "description": "filter by the supplied createdAt",
                            "range": true,
                            "name": "withCreatedAt",
                            "and": true,
                            "or": true,
                            "valueType": "timestamp"
                        }
                    ]
                },
                "createdBy": {
                    "description": "The user that created",
                    "type": "ref",
                    "readOnly": true,
                    "example": "test:test-admin",
                    "sort": true,
                    "fieldName": "createdBy",
                    "fieldNamePath": "createdBy",
                    "typeInfo": {
                        "desc": "owner:name pair",
                        "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
                        "name": "ref"
                    },
                    "filteredBy": [
                        "withCreatedBy"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "createdBy",
                            "fieldNamePath": "createdBy",
                            "description": "filter by the supplied createdBy",
                            "name": "withCreatedBy",
                            "and": true,
                            "or": true,
                            "valueType": "ref"
                        }
                    ]
                },
                "updatedAt": {
                    "description": "The timestamp when last updated",
                    "type": "timestamp",
                    "readOnly": true,
                    "example": "2014-12-25T12:00:00.000Z",
                    "sort": true,
                    "excludeFromVersion": true,
                    "fieldName": "updatedAt",
                    "fieldNamePath": "updatedAt",
                    "filteredBy": [
                        "withUpdatedAt"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "updatedAt",
                            "fieldNamePath": "updatedAt",
                            "description": "filter by the supplied updatedAt",
                            "range": true,
                            "name": "withUpdatedAt",
                            "and": true,
                            "or": true,
                            "valueType": "timestamp"
                        }
                    ]
                },
                "updatedBy": {
                    "description": "The user that last updated",
                    "type": "ref",
                    "readOnly": true,
                    "example": "test:test-admin",
                    "sort": true,
                    "fieldName": "updatedBy",
                    "fieldNamePath": "updatedBy",
                    "typeInfo": {
                        "desc": "owner:name pair",
                        "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
                        "name": "ref"
                    },
                    "filteredBy": [
                        "withUpdatedBy"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "updatedBy",
                            "fieldNamePath": "updatedBy",
                            "description": "filter by the supplied updatedBy",
                            "name": "withUpdatedBy",
                            "and": true,
                            "or": true,
                            "valueType": "ref"
                        }
                    ]
                },
                "deletedAt": {
                    "description": "The timestamp when deleted (only applicable to deleted resources)",
                    "type": "timestamp",
                    "readOnly": true,
                    "example": "2014-12-25T12:00:00.000Z",
                    "sort": true,
                    "excludeFromVersion": true,
                    "fieldName": "deletedAt",
                    "fieldNamePath": "deletedAt",
                    "filteredBy": [
                        "withDeletedAt"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "deletedAt",
                            "fieldNamePath": "deletedAt",
                            "prohibited": [
                                "enduser"
                            ],
                            "description": "filter by the supplied deletedAt",
                            "range": true,
                            "name": "withDeletedAt",
                            "and": true,
                            "or": true,
                            "valueType": "timestamp"
                        }
                    ]
                },
                "deletedBy": {
                    "description": "The user that deleted (only applicable to deleted resources)",
                    "type": "ref",
                    "readOnly": true,
                    "example": "test:test-admin",
                    "sort": true,
                    "excludeFromVersion": true,
                    "fieldName": "deletedBy",
                    "fieldNamePath": "deletedBy",
                    "typeInfo": {
                        "desc": "owner:name pair",
                        "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
                        "name": "ref"
                    },
                    "filteredBy": [
                        "withDeletedBy"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "deletedBy",
                            "fieldNamePath": "deletedBy",
                            "prohibited": [
                                "enduser"
                            ],
                            "description": "filter by the supplied deletedBy",
                            "name": "withDeletedBy",
                            "and": true,
                            "or": true,
                            "valueType": "ref"
                        }
                    ]
                },
                "reapAt": {
                    "description": "The timestamp for reaping (only applicable to deleted resources)",
                    "type": "timestamp",
                    "readOnly": true,
                    "example": "2014-12-25T12:00:00.000Z",
                    "sort": true,
                    "excludeFromVersion": true,
                    "fieldName": "reapAt",
                    "fieldNamePath": "reapAt",
                    "filteredBy": [
                        "withReapAt"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "reapAt",
                            "fieldNamePath": "reapAt",
                            "prohibited": [
                                "enduser",
                                "service",
                                "admin"
                            ],
                            "description": "filter by the supplied reapAt",
                            "range": true,
                            "name": "withReapAt",
                            "and": true,
                            "or": true,
                            "valueType": "timestamp"
                        }
                    ]
                },
                "version": {
                    "description": "The version hash (computed)",
                    "type": "version",
                    "readOnly": true,
                    "example": "356b54eb90cd04566159dfb9c95a0426998a2f7b",
                    "excludeFromVersion": true,
                    "fieldName": "version",
                    "fieldNamePath": "version",
                    "typeInfo": {
                        "desc": "sha1 hex encoded hash",
                        "pattern": "[a-f0-9]{40}"
                    }
                },
                "metadata": {
                    "description": "A field that holds metadata about the resource",
                    "excludeFromVersion": true,
                    "fields": {},
                    "fieldName": "metadata",
                    "fieldNamePath": "metadata",
                    "typeInfo": {}
                },
                "renditions": {
                    "description": "List of parameters in the settings",
                    "array": {
                        "min": 1,
                        "max": 100
                    },
                    "required": true,
                    "fields": {
                        "videoFormat": {
                            "description": "The desired video format",
                            "type": "string",
                            "example": "mp4",
                            "fieldName": "videoFormat",
                            "fieldNamePath": "renditions.videoFormat",
                            "typeInfo": {
                                "desc": "string",
                                "pattern": ".+",
                                "name": "string"
                            },
                            "primary": true
                        },
                        "videoCodec": {
                            "description": "The enforce video codec, otherwise use filename etc",
                            "type": "string",
                            "example": "h264",
                            "fieldName": "videoCodec",
                            "fieldNamePath": "renditions.videoCodec",
                            "typeInfo": {
                                "desc": "string",
                                "pattern": ".+",
                                "name": "string"
                            },
                            "primary": true
                        },
                        "videoFrameRate": {
                            "description": "The desired frame rate",
                            "type": "nonNegativeNumber",
                            "example": 25,
                            "fieldName": "videoFrameRate",
                            "fieldNamePath": "renditions.videoFrameRate",
                            "typeInfo": {
                                "desc": "non-negative number",
                                "pattern": "\\d+(?:\\.\\d+)?"
                            },
                            "primary": true
                        },
                        "videoProfile": {
                            "description": "The desired profile to apply with the codec",
                            "type": "string",
                            "example": "baseline",
                            "fieldName": "videoProfile",
                            "fieldNamePath": "renditions.videoProfile",
                            "typeInfo": {
                                "desc": "string",
                                "pattern": ".+",
                                "name": "string"
                            }
                        },
                        "videoLevel": {
                            "description": "The desired level to apply with the codec",
                            "type": "string",
                            "example": "3.0",
                            "fieldName": "videoLevel",
                            "fieldNamePath": "renditions.videoLevel",
                            "typeInfo": {
                                "desc": "string",
                                "pattern": ".+",
                                "name": "string"
                            }
                        },
                        "videoConstantBitRate": {
                            "description": "Whether to force constant video bit rate",
                            "type": "boolean",
                            "example": true,
                            "fieldName": "videoConstantBitRate",
                            "fieldNamePath": "renditions.videoConstantBitRate",
                            "typeInfo": {
                                "desc": "true or false",
                                "pattern": "(?:true|false)",
                                "name": "boolean"
                            }
                        },
                        "videoWidth": {
                            "description": "The desired width for the rendition",
                            "type": "integer",
                            "example": 1280,
                            "fieldName": "videoWidth",
                            "fieldNamePath": "renditions.videoWidth",
                            "typeInfo": {
                                "desc": "integer",
                                "pattern": "-?[0-9]+"
                            }
                        },
                        "videoHeight": {
                            "description": "The desired height for the rendition",
                            "type": "integer",
                            "example": 720,
                            "fieldName": "videoHeight",
                            "fieldNamePath": "renditions.videoHeight",
                            "typeInfo": {
                                "desc": "integer",
                                "pattern": "-?[0-9]+"
                            }
                        },
                        "videoBitRate": {
                            "description": "The desired video bit rate",
                            "type": "integer",
                            "example": 2500000,
                            "fieldName": "videoBitRate",
                            "fieldNamePath": "renditions.videoBitRate",
                            "typeInfo": {
                                "desc": "integer",
                                "pattern": "-?[0-9]+"
                            }
                        },
                        "audioCodec": {
                            "description": "The desired audio codec",
                            "type": "string",
                            "example": "aac",
                            "fieldName": "audioCodec",
                            "fieldNamePath": "renditions.audioCodec",
                            "typeInfo": {
                                "desc": "string",
                                "pattern": ".+",
                                "name": "string"
                            }
                        },
                        "audioChannels": {
                            "description": "Number of audio channels",
                            "type": "integer",
                            "example": 2,
                            "fieldName": "audioChannels",
                            "fieldNamePath": "renditions.audioChannels",
                            "typeInfo": {
                                "desc": "integer",
                                "pattern": "-?[0-9]+"
                            }
                        },
                        "audioBitRate": {
                            "description": "The desired audio bit rate for the rendition",
                            "type": "integer",
                            "example": 96000,
                            "fieldName": "audioBitRate",
                            "fieldNamePath": "renditions.audioBitRate",
                            "typeInfo": {
                                "desc": "integer",
                                "pattern": "-?[0-9]+"
                            }
                        },
                        "audioSampleRate": {
                            "description": "The desired sample rate",
                            "type": "integer",
                            "example": 48000,
                            "fieldName": "audioSampleRate",
                            "fieldNamePath": "renditions.audioSampleRate",
                            "typeInfo": {
                                "desc": "integer",
                                "pattern": "-?[0-9]+"
                            }
                        },
                        "segmentListSize": {
                            "description": "Update the list file so that it contains at most the last size segments. If 0 the list file will contain all the segments. The value is the number of segments generated, this is the number of ts files. If it is equals to 1 just the last ts file will be generated, if it is 2 the last 2 ts files will be generated, therefore the last few minutes will be played back. If 0 the list file will contain all the segments, thus the whole video will be generated. If the value is not supplied 5 ts files will be generated.",
                            "type": "positiveInteger",
                            "example": 0,
                            "fieldName": "segmentListSize",
                            "fieldNamePath": "renditions.segmentListSize",
                            "typeInfo": {
                                "desc": "positive integer",
                                "pattern": "(?:[1-9](?:\\d*))"
                            }
                        },
                        "segmentTime": {
                            "description": "Set segment duration to time, the value must be a duration specification. Default value is 2. See also the segment_times option. That splitting may not be accurate, unless you force the reference stream key-frames at the given time",
                            "type": "positiveInteger",
                            "example": 2,
                            "fieldName": "segmentTime",
                            "fieldNamePath": "renditions.segmentTime",
                            "typeInfo": {
                                "desc": "positive integer",
                                "pattern": "(?:[1-9](?:\\d*))"
                            }
                        },
                        "segmentMovflagsFragKeyframe": {
                            "description": "Whether start a new fragment at each video keyframe",
                            "type": "boolean",
                            "example": true,
                            "fieldName": "segmentMovflagsFragKeyframe",
                            "fieldNamePath": "renditions.segmentMovflagsFragKeyframe",
                            "typeInfo": {
                                "desc": "true or false",
                                "pattern": "(?:true|false)",
                                "name": "boolean"
                            }
                        }
                    },
                    "fieldName": "renditions",
                    "fieldNamePath": "renditions",
                    "typeInfo": {}
                }
            },
            "filters": {
                "q": {
                    "type": "q",
                    "label": "q",
                    "description": "Search for supplied text in title",
                    "includes": [
                        "title"
                    ],
                    "name": "q",
                    "valueType": "string",
                    "text": true
                },
                "withName": {
                    "type": "with",
                    "label": "name",
                    "fieldNamePath": "name",
                    "description": "filter by the supplied name",
                    "prefix": true,
                    "name": "withName",
                    "and": true,
                    "or": true,
                    "valueType": "name"
                },
                "withTitle": {
                    "type": "with",
                    "label": "title",
                    "fieldNamePath": "title",
                    "description": "filter by the supplied title prefix",
                    "prefix": true,
                    "name": "withTitle",
                    "and": true,
                    "or": true,
                    "valueType": "string"
                },
                "withRef": {
                    "type": "with",
                    "label": "ref",
                    "fieldNamePath": "ref",
                    "description": "filter by the supplied ref",
                    "name": "withRef",
                    "and": true,
                    "or": true,
                    "valueType": "ref"
                },
                "withAlternativeIdentifiers": {
                    "type": "with",
                    "label": "alternativeIdentifiers",
                    "fieldNamePath": "alternativeIdentifiers",
                    "description": "filter by the supplied alternative identifiers",
                    "prefix": true,
                    "name": "withAlternativeIdentifiers",
                    "and": true,
                    "or": true,
                    "valueType": "stringMap"
                },
                "withTags": {
                    "type": "with",
                    "label": "tags",
                    "fieldNamePath": "tags",
                    "description": "filter by the supplied tags",
                    "name": "withTags",
                    "and": true,
                    "or": true,
                    "valueType": "string"
                },
                "withScore": {
                    "type": "with",
                    "label": "scores",
                    "fieldNamePath": "scores",
                    "description": "filter by the supplied score",
                    "range": true,
                    "name": "withScore",
                    "and": true,
                    "or": true,
                    "valueType": "scores"
                },
                "withCreatedAt": {
                    "type": "with",
                    "label": "createdAt",
                    "fieldNamePath": "createdAt",
                    "description": "filter by the supplied createdAt",
                    "range": true,
                    "name": "withCreatedAt",
                    "and": true,
                    "or": true,
                    "valueType": "timestamp"
                },
                "withCreatedBy": {
                    "type": "with",
                    "label": "createdBy",
                    "fieldNamePath": "createdBy",
                    "description": "filter by the supplied createdBy",
                    "name": "withCreatedBy",
                    "and": true,
                    "or": true,
                    "valueType": "ref"
                },
                "withUpdatedAt": {
                    "type": "with",
                    "label": "updatedAt",
                    "fieldNamePath": "updatedAt",
                    "description": "filter by the supplied updatedAt",
                    "range": true,
                    "name": "withUpdatedAt",
                    "and": true,
                    "or": true,
                    "valueType": "timestamp"
                },
                "withUpdatedBy": {
                    "type": "with",
                    "label": "updatedBy",
                    "fieldNamePath": "updatedBy",
                    "description": "filter by the supplied updatedBy",
                    "name": "withUpdatedBy",
                    "and": true,
                    "or": true,
                    "valueType": "ref"
                },
                "withDeletedAt": {
                    "type": "with",
                    "label": "deletedAt",
                    "fieldNamePath": "deletedAt",
                    "prohibited": [
                        "enduser"
                    ],
                    "description": "filter by the supplied deletedAt",
                    "range": true,
                    "name": "withDeletedAt",
                    "and": true,
                    "or": true,
                    "valueType": "timestamp"
                },
                "withDeletedBy": {
                    "type": "with",
                    "label": "deletedBy",
                    "fieldNamePath": "deletedBy",
                    "prohibited": [
                        "enduser"
                    ],
                    "description": "filter by the supplied deletedBy",
                    "name": "withDeletedBy",
                    "and": true,
                    "or": true,
                    "valueType": "ref"
                },
                "withReapAt": {
                    "type": "with",
                    "label": "reapAt",
                    "fieldNamePath": "reapAt",
                    "prohibited": [
                        "enduser",
                        "service",
                        "admin"
                    ],
                    "description": "filter by the supplied reapAt",
                    "range": true,
                    "name": "withReapAt",
                    "and": true,
                    "or": true,
                    "valueType": "timestamp"
                }
            },
            "relationships": {},
            "restrictions": [
                {
                    "type": "ownership",
                    "message": "must contain an owner for which you have permission",
                    "description": "users can only interact with resources that are owned by a tenant they have access to"
                },
                {
                    "type": "unmodifiable",
                    "message": "not allowed to modify resources created by root:root",
                    "description": "users are not allowed to modify resources that were created by root:root"
                },
                {
                    "type": "primaryKey",
                    "message": "primaryKey must be unique",
                    "description": "the primary key (ref) is derived from owner and name, allowing name to be a tenant specific unique external id"
                }
            ],
            "singularName": "stepProfile",
            "pluralName": "stepProfiles",
            "serviceName": "workflow",
            "description": "Represent a set of the settings that can be applied to a step",
            "conditionalUpdates": true,
            "hyphenatedPluralName": "step-profiles",
            "retentionPeriod": "P0D",
            "typeInfo": {}
        },
        "workOrders": {
            "path": "/data",
            "stability": "stable",
            "operations": {
                "browse": {
                    "description": "Fetches a list of work orders that may be filtered",
                    "actions": [
                        "workflow:work-orders:read",
                        "workflow:work-orders:read:browse"
                    ]
                },
                "get": {
                    "description": "Fetches one or more work orders using the supplied id(s)",
                    "actions": [
                        "workflow:work-orders:read",
                        "workflow:work-orders:read:get"
                    ]
                },
                "storeBatch": {
                    "description": "Stores one or more work orders, either creating or wholly replacing",
                    "actions": [
                        "workflow:work-orders:write",
                        "workflow:work-orders:write:store",
                        "workflow:work-orders:write:store:batch"
                    ],
                    "limit": 100
                },
                "storeOne": {
                    "description": "Stores the supplied work order with the supplied id, either creating or wholly replacing",
                    "actions": [
                        "workflow:work-orders:write",
                        "workflow:work-orders:write:store",
                        "workflow:work-orders:write:store:one"
                    ]
                },
                "delete": {
                    "description": "Delete one or more work orders using the supplied id(s)",
                    "actions": [
                        "workflow:work-orders:write",
                        "workflow:work-orders:write:delete"
                    ]
                }
            },
            "pagination": {
                "pageSize": {
                    "min": 1,
                    "max": 100,
                    "default": 100
                },
                "pages": {
                    "max": 100
                }
            },
            "display": {
                "priority": 2,
                "overview": {
                    "label": "title"
                },
                "info": {
                    "primary": [
                        "ref",
                        "owner",
                        "name"
                    ],
                    "secondary": [
                        "alternativeIdentifiers",
                        "tags",
                        "custom"
                    ],
                    "history": [
                        "createdAt",
                        "createdBy",
                        "updatedAt",
                        "updatedBy",
                        "deletedAt",
                        "deletedBy",
                        "reapAt",
                        "version"
                    ]
                },
                "groups": {
                    "custom": [
                        "custom"
                    ],
                    "identity": [
                        "ref",
                        "owner",
                        "name",
                        "alternativeIdentifiers"
                    ],
                    "history": [
                        "createdAt",
                        "createdBy",
                        "updatedAt",
                        "updatedBy",
                        "deletedAt",
                        "deletedBy",
                        "reapAt",
                        "version"
                    ],
                    "tags": [
                        "tags"
                    ],
                    "overview": [
                        "tasksStatus"
                    ]
                },
                "singularName": "work order",
                "pluralName": "work orders"
            },
            "fields": {
                "ref": {
                    "description": "The derived owner:name reference",
                    "type": "ref",
                    "readOnly": true,
                    "sort": true,
                    "example": "test:resource-name",
                    "fieldName": "ref",
                    "fieldNamePath": "ref",
                    "typeInfo": {
                        "desc": "owner:name pair",
                        "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
                        "name": "ref"
                    },
                    "filteredBy": [
                        "withRef"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "ref",
                            "fieldNamePath": "ref",
                            "description": "filter by the supplied ref",
                            "name": "withRef",
                            "and": true,
                            "or": true,
                            "valueType": "ref"
                        }
                    ]
                },
                "alternativeIdentifiers": {
                    "type": "stringMap",
                    "description": "A map of alternative identifiers for this resource",
                    "example": {
                        "tel": "0800100100",
                        "said": "something"
                    },
                    "fieldName": "alternativeIdentifiers",
                    "fieldNamePath": "alternativeIdentifiers",
                    "typeInfo": {
                        "keys": {
                            "pattern": "[a-zA-Z0-9]+"
                        },
                        "values": {
                            "pattern": "(.+)",
                            "desc": "string"
                        },
                        "desc": "key-value pairs",
                        "name": "stringMap"
                    },
                    "filteredBy": [
                        "withAlternativeIdentifiers"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "alternativeIdentifiers",
                            "fieldNamePath": "alternativeIdentifiers",
                            "description": "filter by the supplied alternative identifiers",
                            "prefix": true,
                            "name": "withAlternativeIdentifiers",
                            "and": true,
                            "or": true,
                            "valueType": "stringMap"
                        }
                    ]
                },
                "owner": {
                    "description": "The tenant owner name",
                    "type": "name",
                    "required": true,
                    "sort": true,
                    "example": "test",
                    "countable": true,
                    "fieldName": "owner",
                    "fieldNamePath": "owner",
                    "typeInfo": {
                        "desc": "name",
                        "pattern": "[a-zA-Z0-9_-]+",
                        "name": "name"
                    }
                },
                "name": {
                    "description": "The tenant specific unique name",
                    "type": "name",
                    "sort": true,
                    "example": "resource-name",
                    "fieldName": "name",
                    "fieldNamePath": "name",
                    "typeInfo": {
                        "desc": "name",
                        "pattern": "[a-zA-Z0-9_-]+",
                        "name": "name"
                    },
                    "filteredBy": [
                        "withName"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "name",
                            "fieldNamePath": "name",
                            "description": "filter by the supplied name",
                            "prefix": true,
                            "name": "withName",
                            "and": true,
                            "or": true,
                            "valueType": "name"
                        }
                    ]
                },
                "title": {
                    "description": "A simple title for the work order",
                    "type": "string",
                    "sort": true,
                    "example": "work order title",
                    "primary": true,
                    "fieldName": "title",
                    "fieldNamePath": "title",
                    "typeInfo": {
                        "desc": "string",
                        "pattern": ".+",
                        "name": "string"
                    },
                    "filteredBy": [
                        "withTitle"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "title",
                            "fieldNamePath": "title",
                            "description": "Filter by the supplied title prefix",
                            "prefix": true,
                            "name": "withTitle",
                            "and": true,
                            "or": true,
                            "valueType": "string"
                        }
                    ]
                },
                "tags": {
                    "description": "tags for the resource",
                    "type": "string",
                    "array": true,
                    "example": [
                        "todo",
                        "usage:boxart"
                    ],
                    "fieldName": "tags",
                    "fieldNamePath": "tags",
                    "typeInfo": {
                        "desc": "string",
                        "pattern": ".+",
                        "name": "string"
                    },
                    "filteredBy": [
                        "withTags"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "tags",
                            "fieldNamePath": "tags",
                            "description": "filter by the supplied tags",
                            "name": "withTags",
                            "and": true,
                            "or": true,
                            "valueType": "string"
                        }
                    ]
                },
                "scores": {
                    "description": "scores for the resource",
                    "type": "scores",
                    "example": {
                        "imdb.a3431": 0.9,
                        "fuse": 2
                    },
                    "fieldName": "scores",
                    "fieldNamePath": "scores",
                    "typeInfo": {
                        "keys": {
                            "pattern": "(?:[a-zA-Z0-9]+)(?:\\.[a-zA-Z0-9]+)*"
                        },
                        "values": {
                            "desc": "number",
                            "pattern": "-?\\d+(?:\\.\\d+)?"
                        },
                        "desc": "Map of FieldNamePath:Number pairs",
                        "name": "scores"
                    },
                    "filteredBy": [
                        "withScore"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "scores",
                            "fieldNamePath": "scores",
                            "description": "filter by the supplied score",
                            "range": true,
                            "name": "withScore",
                            "and": true,
                            "or": true,
                            "valueType": "scores"
                        }
                    ]
                },
                "custom": {
                    "description": "The tenant specific custom fields.  This may be used to hold tenant specific data alongside the document, but it should not be used as a substitute for normal fields.",
                    "type": "map",
                    "max": 100,
                    "fieldName": "custom",
                    "fieldNamePath": "custom",
                    "typeInfo": {
                        "keys": {
                            "pattern": "[a-zA-Z0-9]+"
                        },
                        "values": {
                            "pattern": "(.+)",
                            "desc": "scalar value or an array of scalar values"
                        },
                        "desc": "key-value pairs"
                    }
                },
                "createdAt": {
                    "description": "The timestamp when created",
                    "type": "timestamp",
                    "readOnly": true,
                    "example": "2014-12-25T12:00:00.000Z",
                    "sort": true,
                    "excludeFromVersion": true,
                    "fieldName": "createdAt",
                    "fieldNamePath": "createdAt",
                    "filteredBy": [
                        "withCreatedAt"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "createdAt",
                            "fieldNamePath": "createdAt",
                            "description": "filter by the supplied createdAt",
                            "range": true,
                            "name": "withCreatedAt",
                            "and": true,
                            "or": true,
                            "valueType": "timestamp"
                        }
                    ]
                },
                "createdBy": {
                    "description": "The user that created",
                    "type": "ref",
                    "readOnly": true,
                    "example": "test:test-admin",
                    "sort": true,
                    "fieldName": "createdBy",
                    "fieldNamePath": "createdBy",
                    "typeInfo": {
                        "desc": "owner:name pair",
                        "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
                        "name": "ref"
                    },
                    "filteredBy": [
                        "withCreatedBy"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "createdBy",
                            "fieldNamePath": "createdBy",
                            "description": "filter by the supplied createdBy",
                            "name": "withCreatedBy",
                            "and": true,
                            "or": true,
                            "valueType": "ref"
                        }
                    ]
                },
                "updatedAt": {
                    "description": "The timestamp when last updated",
                    "type": "timestamp",
                    "readOnly": true,
                    "example": "2014-12-25T12:00:00.000Z",
                    "sort": true,
                    "excludeFromVersion": true,
                    "fieldName": "updatedAt",
                    "fieldNamePath": "updatedAt",
                    "filteredBy": [
                        "withUpdatedAt"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "updatedAt",
                            "fieldNamePath": "updatedAt",
                            "description": "filter by the supplied updatedAt",
                            "range": true,
                            "name": "withUpdatedAt",
                            "and": true,
                            "or": true,
                            "valueType": "timestamp"
                        }
                    ]
                },
                "updatedBy": {
                    "description": "The user that last updated",
                    "type": "ref",
                    "readOnly": true,
                    "example": "test:test-admin",
                    "sort": true,
                    "fieldName": "updatedBy",
                    "fieldNamePath": "updatedBy",
                    "typeInfo": {
                        "desc": "owner:name pair",
                        "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
                        "name": "ref"
                    },
                    "filteredBy": [
                        "withUpdatedBy"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "updatedBy",
                            "fieldNamePath": "updatedBy",
                            "description": "filter by the supplied updatedBy",
                            "name": "withUpdatedBy",
                            "and": true,
                            "or": true,
                            "valueType": "ref"
                        }
                    ]
                },
                "deletedAt": {
                    "description": "The timestamp when deleted (only applicable to deleted resources)",
                    "type": "timestamp",
                    "readOnly": true,
                    "example": "2014-12-25T12:00:00.000Z",
                    "sort": true,
                    "excludeFromVersion": true,
                    "fieldName": "deletedAt",
                    "fieldNamePath": "deletedAt",
                    "filteredBy": [
                        "withDeletedAt"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "deletedAt",
                            "fieldNamePath": "deletedAt",
                            "prohibited": [
                                "enduser"
                            ],
                            "description": "filter by the supplied deletedAt",
                            "range": true,
                            "name": "withDeletedAt",
                            "and": true,
                            "or": true,
                            "valueType": "timestamp"
                        }
                    ]
                },
                "deletedBy": {
                    "description": "The user that deleted (only applicable to deleted resources)",
                    "type": "ref",
                    "readOnly": true,
                    "example": "test:test-admin",
                    "sort": true,
                    "excludeFromVersion": true,
                    "fieldName": "deletedBy",
                    "fieldNamePath": "deletedBy",
                    "typeInfo": {
                        "desc": "owner:name pair",
                        "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
                        "name": "ref"
                    },
                    "filteredBy": [
                        "withDeletedBy"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "deletedBy",
                            "fieldNamePath": "deletedBy",
                            "prohibited": [
                                "enduser"
                            ],
                            "description": "filter by the supplied deletedBy",
                            "name": "withDeletedBy",
                            "and": true,
                            "or": true,
                            "valueType": "ref"
                        }
                    ]
                },
                "reapAt": {
                    "description": "The timestamp for reaping (only applicable to deleted resources)",
                    "type": "timestamp",
                    "readOnly": true,
                    "example": "2014-12-25T12:00:00.000Z",
                    "sort": true,
                    "excludeFromVersion": true,
                    "fieldName": "reapAt",
                    "fieldNamePath": "reapAt",
                    "filteredBy": [
                        "withReapAt"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "reapAt",
                            "fieldNamePath": "reapAt",
                            "prohibited": [
                                "enduser",
                                "service",
                                "admin"
                            ],
                            "description": "filter by the supplied reapAt",
                            "range": true,
                            "name": "withReapAt",
                            "and": true,
                            "or": true,
                            "valueType": "timestamp"
                        }
                    ]
                },
                "version": {
                    "description": "The version hash (computed)",
                    "type": "version",
                    "readOnly": true,
                    "example": "356b54eb90cd04566159dfb9c95a0426998a2f7b",
                    "excludeFromVersion": true,
                    "fieldName": "version",
                    "fieldNamePath": "version",
                    "typeInfo": {
                        "desc": "sha1 hex encoded hash",
                        "pattern": "[a-f0-9]{40}"
                    }
                },
                "metadata": {
                    "description": "A field that holds metadata about the resource",
                    "excludeFromVersion": true,
                    "fields": {},
                    "fieldName": "metadata",
                    "fieldNamePath": "metadata",
                    "typeInfo": {}
                },
                "tasksStatus": {
                    "description": "Define the current status of the task",
                    "type": "string",
                    "allowedValues": [
                        {
                            "value": "KILLED",
                            "description": "The tasks have been successfully killed. This is a terminal state.",
                            "alternatives": [],
                            "label": "KILLED"
                        },
                        {
                            "value": "FINISHED",
                            "description": "The task finished without errors. This is a terminal state.",
                            "alternatives": [],
                            "label": "FINISHED"
                        },
                        {
                            "value": "FAILED",
                            "description": "The tasks finished after reaching a set of failure limits. This is a terminal state.",
                            "alternatives": [],
                            "label": "FAILED"
                        },
                        {
                            "value": "LOST",
                            "description": "The tasks stayed in a transient state for too long and has been considered lost. This is a terminal state.",
                            "alternatives": [],
                            "label": "LOST"
                        },
                        {
                            "value": "INVALID",
                            "description": "The tasks have some invalid parameter and cannot be performed. This is a terminal state.",
                            "alternatives": [],
                            "label": "INVALID"
                        }
                    ],
                    "sort": true,
                    "primary": true,
                    "example": "FINISHED",
                    "fieldName": "tasksStatus",
                    "fieldNamePath": "tasksStatus",
                    "allowedValueMappings": {
                        "KILLED": "KILLED",
                        "FINISHED": "FINISHED",
                        "FAILED": "FAILED",
                        "LOST": "LOST",
                        "INVALID": "INVALID"
                    },
                    "typeInfo": {
                        "desc": "string",
                        "pattern": ".+",
                        "name": "string"
                    },
                    "filteredBy": [
                        "withTasksStatus"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "fieldNamePath": "tasksStatus",
                            "description": "filter by the supplied tasks status",
                            "label": "tasksStatus",
                            "name": "withTasksStatus",
                            "and": true,
                            "or": true,
                            "valueType": "string"
                        }
                    ]
                }
            },
            "filters": {
                "q": {
                    "type": "q",
                    "label": "q",
                    "description": "Search for supplied text in title",
                    "includes": [
                        "title"
                    ],
                    "name": "q",
                    "valueType": "string",
                    "text": true
                },
                "withName": {
                    "type": "with",
                    "label": "name",
                    "fieldNamePath": "name",
                    "description": "filter by the supplied name",
                    "prefix": true,
                    "name": "withName",
                    "and": true,
                    "or": true,
                    "valueType": "name"
                },
                "withTitle": {
                    "type": "with",
                    "label": "title",
                    "fieldNamePath": "title",
                    "description": "Filter by the supplied title prefix",
                    "prefix": true,
                    "name": "withTitle",
                    "and": true,
                    "or": true,
                    "valueType": "string"
                },
                "withRef": {
                    "type": "with",
                    "label": "ref",
                    "fieldNamePath": "ref",
                    "description": "filter by the supplied ref",
                    "name": "withRef",
                    "and": true,
                    "or": true,
                    "valueType": "ref"
                },
                "withAlternativeIdentifiers": {
                    "type": "with",
                    "label": "alternativeIdentifiers",
                    "fieldNamePath": "alternativeIdentifiers",
                    "description": "filter by the supplied alternative identifiers",
                    "prefix": true,
                    "name": "withAlternativeIdentifiers",
                    "and": true,
                    "or": true,
                    "valueType": "stringMap"
                },
                "withTags": {
                    "type": "with",
                    "label": "tags",
                    "fieldNamePath": "tags",
                    "description": "filter by the supplied tags",
                    "name": "withTags",
                    "and": true,
                    "or": true,
                    "valueType": "string"
                },
                "withScore": {
                    "type": "with",
                    "label": "scores",
                    "fieldNamePath": "scores",
                    "description": "filter by the supplied score",
                    "range": true,
                    "name": "withScore",
                    "and": true,
                    "or": true,
                    "valueType": "scores"
                },
                "withCreatedAt": {
                    "type": "with",
                    "label": "createdAt",
                    "fieldNamePath": "createdAt",
                    "description": "filter by the supplied createdAt",
                    "range": true,
                    "name": "withCreatedAt",
                    "and": true,
                    "or": true,
                    "valueType": "timestamp"
                },
                "withCreatedBy": {
                    "type": "with",
                    "label": "createdBy",
                    "fieldNamePath": "createdBy",
                    "description": "filter by the supplied createdBy",
                    "name": "withCreatedBy",
                    "and": true,
                    "or": true,
                    "valueType": "ref"
                },
                "withUpdatedAt": {
                    "type": "with",
                    "label": "updatedAt",
                    "fieldNamePath": "updatedAt",
                    "description": "filter by the supplied updatedAt",
                    "range": true,
                    "name": "withUpdatedAt",
                    "and": true,
                    "or": true,
                    "valueType": "timestamp"
                },
                "withUpdatedBy": {
                    "type": "with",
                    "label": "updatedBy",
                    "fieldNamePath": "updatedBy",
                    "description": "filter by the supplied updatedBy",
                    "name": "withUpdatedBy",
                    "and": true,
                    "or": true,
                    "valueType": "ref"
                },
                "withDeletedAt": {
                    "type": "with",
                    "label": "deletedAt",
                    "fieldNamePath": "deletedAt",
                    "prohibited": [
                        "enduser"
                    ],
                    "description": "filter by the supplied deletedAt",
                    "range": true,
                    "name": "withDeletedAt",
                    "and": true,
                    "or": true,
                    "valueType": "timestamp"
                },
                "withDeletedBy": {
                    "type": "with",
                    "label": "deletedBy",
                    "fieldNamePath": "deletedBy",
                    "prohibited": [
                        "enduser"
                    ],
                    "description": "filter by the supplied deletedBy",
                    "name": "withDeletedBy",
                    "and": true,
                    "or": true,
                    "valueType": "ref"
                },
                "withReapAt": {
                    "type": "with",
                    "label": "reapAt",
                    "fieldNamePath": "reapAt",
                    "prohibited": [
                        "enduser",
                        "service",
                        "admin"
                    ],
                    "description": "filter by the supplied reapAt",
                    "range": true,
                    "name": "withReapAt",
                    "and": true,
                    "or": true,
                    "valueType": "timestamp"
                },
                "withTasksStatus": {
                    "type": "with",
                    "fieldNamePath": "tasksStatus",
                    "description": "filter by the supplied tasks status",
                    "label": "tasksStatus",
                    "name": "withTasksStatus",
                    "and": true,
                    "or": true,
                    "valueType": "string"
                }
            },
            "relationships": {
                "flowTasks": {
                    "description": "All Flow Tasks related to this WorkOrder",
                    "type": "indirect",
                    "resourceType": "flowTasks",
                    "filterName": "withWorkOrderRef",
                    "fields": [
                        "ref",
                        "name"
                    ],
                    "batchSize": 10,
                    "name": "flowTasks",
                    "intersectable": false
                }
            },
            "restrictions": [
                {
                    "type": "ownership",
                    "message": "must contain an owner for which you have permission",
                    "description": "users can only interact with resources that are owned by a tenant they have access to"
                },
                {
                    "type": "unmodifiable",
                    "message": "not allowed to modify resources created by root:root",
                    "description": "users are not allowed to modify resources that were created by root:root"
                },
                {
                    "type": "primaryKey",
                    "message": "primaryKey must be unique",
                    "description": "the primary key (ref) is derived from owner and name, allowing name to be a tenant specific unique external id"
                }
            ],
            "singularName": "workOrder",
            "pluralName": "workOrders",
            "serviceName": "workflow",
            "description": "Represent a work order that is delivered through tasks",
            "conditionalUpdates": true,
            "hyphenatedPluralName": "work-orders",
            "retentionPeriod": "P0D",
            "typeInfo": {}
        },
        "workflows": {
            "path": "/data",
            "stability": "experimental",
            "operations": {
                "browse": {
                    "description": "Fetches a list of workflows that may be filtered",
                    "actions": [
                        "workflow:workflows:read",
                        "workflow:workflows:read:browse"
                    ]
                },
                "get": {
                    "description": "Fetches one or more workflows using the supplied id(s)",
                    "actions": [
                        "workflow:workflows:read",
                        "workflow:workflows:read:get"
                    ]
                },
                "storeBatch": {
                    "description": "Stores one or more workflows, either creating or wholly replacing",
                    "actions": [
                        "workflow:workflows:write",
                        "workflow:workflows:write:store",
                        "workflow:workflows:write:store:batch"
                    ],
                    "limit": 100
                },
                "storeOne": {
                    "description": "Stores the supplied workflow with the supplied id, either creating or wholly replacing",
                    "actions": [
                        "workflow:workflows:write",
                        "workflow:workflows:write:store",
                        "workflow:workflows:write:store:one"
                    ]
                },
                "delete": {
                    "description": "Delete one or more workflows using the supplied id(s)",
                    "actions": [
                        "workflow:workflows:write",
                        "workflow:workflows:write:delete"
                    ]
                }
            },
            "pagination": {
                "pageSize": {
                    "min": 1,
                    "max": 100,
                    "default": 100
                },
                "pages": {
                    "max": 100
                }
            },
            "display": {
                "priority": 5,
                "overview": {
                    "label": "title"
                },
                "info": {
                    "primary": [
                        "ref",
                        "owner",
                        "name"
                    ],
                    "secondary": [
                        "alternativeIdentifiers",
                        "tags",
                        "custom"
                    ],
                    "history": [
                        "createdAt",
                        "createdBy",
                        "updatedAt",
                        "updatedBy",
                        "deletedAt",
                        "deletedBy",
                        "reapAt",
                        "version"
                    ]
                },
                "groups": {
                    "custom": [
                        "custom"
                    ],
                    "identity": [
                        "ref",
                        "owner",
                        "name",
                        "alternativeIdentifiers"
                    ],
                    "history": [
                        "createdAt",
                        "createdBy",
                        "updatedAt",
                        "updatedBy",
                        "deletedAt",
                        "deletedBy",
                        "reapAt",
                        "version"
                    ],
                    "tags": [
                        "tags"
                    ]
                },
                "singularName": "workflow",
                "pluralName": "workflows"
            },
            "fields": {
                "ref": {
                    "description": "The derived owner:name reference",
                    "type": "ref",
                    "readOnly": true,
                    "sort": true,
                    "example": "test:resource-name",
                    "fieldName": "ref",
                    "fieldNamePath": "ref",
                    "typeInfo": {
                        "desc": "owner:name pair",
                        "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
                        "name": "ref"
                    },
                    "filteredBy": [
                        "withRef"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "ref",
                            "fieldNamePath": "ref",
                            "description": "filter by the supplied ref",
                            "name": "withRef",
                            "and": true,
                            "or": true,
                            "valueType": "ref"
                        }
                    ]
                },
                "alternativeIdentifiers": {
                    "type": "stringMap",
                    "description": "A map of alternative identifiers for this resource",
                    "example": {
                        "tel": "0800100100",
                        "said": "something"
                    },
                    "fieldName": "alternativeIdentifiers",
                    "fieldNamePath": "alternativeIdentifiers",
                    "typeInfo": {
                        "keys": {
                            "pattern": "[a-zA-Z0-9]+"
                        },
                        "values": {
                            "pattern": "(.+)",
                            "desc": "string"
                        },
                        "desc": "key-value pairs",
                        "name": "stringMap"
                    },
                    "filteredBy": [
                        "withAlternativeIdentifiers"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "alternativeIdentifiers",
                            "fieldNamePath": "alternativeIdentifiers",
                            "description": "filter by the supplied alternative identifiers",
                            "prefix": true,
                            "name": "withAlternativeIdentifiers",
                            "and": true,
                            "or": true,
                            "valueType": "stringMap"
                        }
                    ]
                },
                "owner": {
                    "description": "The tenant owner name",
                    "type": "name",
                    "required": true,
                    "sort": true,
                    "example": "test",
                    "countable": true,
                    "fieldName": "owner",
                    "fieldNamePath": "owner",
                    "typeInfo": {
                        "desc": "name",
                        "pattern": "[a-zA-Z0-9_-]+",
                        "name": "name"
                    }
                },
                "name": {
                    "description": "The tenant specific unique name",
                    "type": "name",
                    "sort": true,
                    "example": "resource-name",
                    "fieldName": "name",
                    "fieldNamePath": "name",
                    "typeInfo": {
                        "desc": "name",
                        "pattern": "[a-zA-Z0-9_-]+",
                        "name": "name"
                    },
                    "filteredBy": [
                        "withName"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "name",
                            "fieldNamePath": "name",
                            "description": "filter by the supplied name",
                            "prefix": true,
                            "name": "withName",
                            "and": true,
                            "or": true,
                            "valueType": "name"
                        }
                    ]
                },
                "title": {
                    "description": "A descriptive title of the workflow that will be used for display purposes.",
                    "type": "string",
                    "sort": true,
                    "example": "workflow title",
                    "primary": true,
                    "fieldName": "title",
                    "fieldNamePath": "title",
                    "typeInfo": {
                        "desc": "string",
                        "pattern": ".+",
                        "name": "string"
                    },
                    "filteredBy": [
                        "withTitle"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "title",
                            "fieldNamePath": "title",
                            "description": "filter by the supplied title prefix",
                            "prefix": true,
                            "name": "withTitle",
                            "and": true,
                            "or": true,
                            "valueType": "string"
                        }
                    ]
                },
                "tags": {
                    "description": "tags for the resource",
                    "type": "string",
                    "array": true,
                    "example": [
                        "todo",
                        "usage:boxart"
                    ],
                    "fieldName": "tags",
                    "fieldNamePath": "tags",
                    "typeInfo": {
                        "desc": "string",
                        "pattern": ".+",
                        "name": "string"
                    },
                    "filteredBy": [
                        "withTags"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "tags",
                            "fieldNamePath": "tags",
                            "description": "filter by the supplied tags",
                            "name": "withTags",
                            "and": true,
                            "or": true,
                            "valueType": "string"
                        }
                    ]
                },
                "scores": {
                    "description": "scores for the resource",
                    "type": "scores",
                    "example": {
                        "imdb.a3431": 0.9,
                        "fuse": 2
                    },
                    "fieldName": "scores",
                    "fieldNamePath": "scores",
                    "typeInfo": {
                        "keys": {
                            "pattern": "(?:[a-zA-Z0-9]+)(?:\\.[a-zA-Z0-9]+)*"
                        },
                        "values": {
                            "desc": "number",
                            "pattern": "-?\\d+(?:\\.\\d+)?"
                        },
                        "desc": "Map of FieldNamePath:Number pairs",
                        "name": "scores"
                    },
                    "filteredBy": [
                        "withScore"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "scores",
                            "fieldNamePath": "scores",
                            "description": "filter by the supplied score",
                            "range": true,
                            "name": "withScore",
                            "and": true,
                            "or": true,
                            "valueType": "scores"
                        }
                    ]
                },
                "custom": {
                    "description": "The tenant specific custom fields.  This may be used to hold tenant specific data alongside the document, but it should not be used as a substitute for normal fields.",
                    "type": "map",
                    "max": 100,
                    "fieldName": "custom",
                    "fieldNamePath": "custom",
                    "typeInfo": {
                        "keys": {
                            "pattern": "[a-zA-Z0-9]+"
                        },
                        "values": {
                            "pattern": "(.+)",
                            "desc": "scalar value or an array of scalar values"
                        },
                        "desc": "key-value pairs"
                    }
                },
                "createdAt": {
                    "description": "The timestamp when created",
                    "type": "timestamp",
                    "readOnly": true,
                    "example": "2014-12-25T12:00:00.000Z",
                    "sort": true,
                    "excludeFromVersion": true,
                    "fieldName": "createdAt",
                    "fieldNamePath": "createdAt",
                    "filteredBy": [
                        "withCreatedAt"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "createdAt",
                            "fieldNamePath": "createdAt",
                            "description": "filter by the supplied createdAt",
                            "range": true,
                            "name": "withCreatedAt",
                            "and": true,
                            "or": true,
                            "valueType": "timestamp"
                        }
                    ]
                },
                "createdBy": {
                    "description": "The user that created",
                    "type": "ref",
                    "readOnly": true,
                    "example": "test:test-admin",
                    "sort": true,
                    "fieldName": "createdBy",
                    "fieldNamePath": "createdBy",
                    "typeInfo": {
                        "desc": "owner:name pair",
                        "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
                        "name": "ref"
                    },
                    "filteredBy": [
                        "withCreatedBy"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "createdBy",
                            "fieldNamePath": "createdBy",
                            "description": "filter by the supplied createdBy",
                            "name": "withCreatedBy",
                            "and": true,
                            "or": true,
                            "valueType": "ref"
                        }
                    ]
                },
                "updatedAt": {
                    "description": "The timestamp when last updated",
                    "type": "timestamp",
                    "readOnly": true,
                    "example": "2014-12-25T12:00:00.000Z",
                    "sort": true,
                    "excludeFromVersion": true,
                    "fieldName": "updatedAt",
                    "fieldNamePath": "updatedAt",
                    "filteredBy": [
                        "withUpdatedAt"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "updatedAt",
                            "fieldNamePath": "updatedAt",
                            "description": "filter by the supplied updatedAt",
                            "range": true,
                            "name": "withUpdatedAt",
                            "and": true,
                            "or": true,
                            "valueType": "timestamp"
                        }
                    ]
                },
                "updatedBy": {
                    "description": "The user that last updated",
                    "type": "ref",
                    "readOnly": true,
                    "example": "test:test-admin",
                    "sort": true,
                    "fieldName": "updatedBy",
                    "fieldNamePath": "updatedBy",
                    "typeInfo": {
                        "desc": "owner:name pair",
                        "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
                        "name": "ref"
                    },
                    "filteredBy": [
                        "withUpdatedBy"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "updatedBy",
                            "fieldNamePath": "updatedBy",
                            "description": "filter by the supplied updatedBy",
                            "name": "withUpdatedBy",
                            "and": true,
                            "or": true,
                            "valueType": "ref"
                        }
                    ]
                },
                "deletedAt": {
                    "description": "The timestamp when deleted (only applicable to deleted resources)",
                    "type": "timestamp",
                    "readOnly": true,
                    "example": "2014-12-25T12:00:00.000Z",
                    "sort": true,
                    "excludeFromVersion": true,
                    "fieldName": "deletedAt",
                    "fieldNamePath": "deletedAt",
                    "filteredBy": [
                        "withDeletedAt"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "deletedAt",
                            "fieldNamePath": "deletedAt",
                            "prohibited": [
                                "enduser"
                            ],
                            "description": "filter by the supplied deletedAt",
                            "range": true,
                            "name": "withDeletedAt",
                            "and": true,
                            "or": true,
                            "valueType": "timestamp"
                        }
                    ]
                },
                "deletedBy": {
                    "description": "The user that deleted (only applicable to deleted resources)",
                    "type": "ref",
                    "readOnly": true,
                    "example": "test:test-admin",
                    "sort": true,
                    "excludeFromVersion": true,
                    "fieldName": "deletedBy",
                    "fieldNamePath": "deletedBy",
                    "typeInfo": {
                        "desc": "owner:name pair",
                        "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
                        "name": "ref"
                    },
                    "filteredBy": [
                        "withDeletedBy"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "deletedBy",
                            "fieldNamePath": "deletedBy",
                            "prohibited": [
                                "enduser"
                            ],
                            "description": "filter by the supplied deletedBy",
                            "name": "withDeletedBy",
                            "and": true,
                            "or": true,
                            "valueType": "ref"
                        }
                    ]
                },
                "reapAt": {
                    "description": "The timestamp for reaping (only applicable to deleted resources)",
                    "type": "timestamp",
                    "readOnly": true,
                    "example": "2014-12-25T12:00:00.000Z",
                    "sort": true,
                    "excludeFromVersion": true,
                    "fieldName": "reapAt",
                    "fieldNamePath": "reapAt",
                    "filteredBy": [
                        "withReapAt"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "reapAt",
                            "fieldNamePath": "reapAt",
                            "prohibited": [
                                "enduser",
                                "service",
                                "admin"
                            ],
                            "description": "filter by the supplied reapAt",
                            "range": true,
                            "name": "withReapAt",
                            "and": true,
                            "or": true,
                            "valueType": "timestamp"
                        }
                    ]
                },
                "version": {
                    "description": "The version hash (computed)",
                    "type": "version",
                    "readOnly": true,
                    "example": "356b54eb90cd04566159dfb9c95a0426998a2f7b",
                    "excludeFromVersion": true,
                    "fieldName": "version",
                    "fieldNamePath": "version",
                    "typeInfo": {
                        "desc": "sha1 hex encoded hash",
                        "pattern": "[a-f0-9]{40}"
                    }
                },
                "metadata": {
                    "description": "A field that holds metadata about the resource",
                    "excludeFromVersion": true,
                    "fields": {},
                    "fieldName": "metadata",
                    "fieldNamePath": "metadata",
                    "typeInfo": {}
                },
                "inputs": {
                    "description": "The collection of input assets to be used as inputs into the workflow. These inputs will be used as part of the asset analysis step which preceeds workflow execution.",
                    "array": true,
                    "fields": {
                        "name": {
                            "description": "Name that help to identiy the asset. Needed to link the input assets to a step definition",
                            "type": "name",
                            "example": "core-video-asset",
                            "fieldName": "name",
                            "fieldNamePath": "inputs.name",
                            "typeInfo": {
                                "desc": "name",
                                "pattern": "[a-zA-Z0-9_-]+",
                                "name": "name"
                            },
                            "primary": true
                        },
                        "url": {
                            "description": "The url string",
                            "type": "string",
                            "required": true,
                            "example": "ftp://domain.com/path/file.avi",
                            "fieldName": "url",
                            "fieldNamePath": "inputs.url",
                            "typeInfo": {
                                "desc": "string",
                                "pattern": ".+",
                                "name": "string"
                            },
                            "primary": true
                        },
                        "proxyUrl": {
                            "description": "Url for the proxy server",
                            "type": "string",
                            "fieldName": "proxyUrl",
                            "fieldNamePath": "inputs.proxyUrl",
                            "typeInfo": {
                                "desc": "string",
                                "pattern": ".+",
                                "name": "string"
                            },
                            "primary": true
                        },
                        "username": {
                            "description": "Username to connect with the proxy if required",
                            "type": "string",
                            "fieldName": "username",
                            "fieldNamePath": "inputs.username",
                            "typeInfo": {
                                "desc": "string",
                                "pattern": ".+",
                                "name": "string"
                            }
                        },
                        "password": {
                            "description": "Password to connect with the proxy if required",
                            "type": "password",
                            "fieldName": "password",
                            "fieldNamePath": "inputs.password",
                            "typeInfo": {
                                "desc": "password",
                                "pattern": ".+"
                            }
                        },
                        "type": {
                            "description": "The type of content that the asset has",
                            "type": "string",
                            "default": "file",
                            "allowedValues": [
                                {
                                    "value": "file",
                                    "alternatives": [],
                                    "label": "file",
                                    "description": "file"
                                },
                                {
                                    "value": "folder",
                                    "alternatives": [],
                                    "label": "folder",
                                    "description": "folder"
                                },
                                {
                                    "value": "package.hls",
                                    "alternatives": [],
                                    "label": "package.hls",
                                    "description": "package.hls"
                                },
                                {
                                    "value": "package.ss",
                                    "alternatives": [],
                                    "label": "package.ss",
                                    "description": "package.ss"
                                },
                                {
                                    "value": "package.dash",
                                    "alternatives": [],
                                    "label": "package.dash",
                                    "description": "package.dash"
                                }
                            ],
                            "fieldName": "type",
                            "fieldNamePath": "inputs.type",
                            "allowedValueMappings": {
                                "file": "file",
                                "folder": "folder",
                                "package.hls": "package.hls",
                                "package.ss": "package.ss",
                                "package.dash": "package.dash"
                            },
                            "typeInfo": {
                                "desc": "string",
                                "pattern": ".+",
                                "name": "string"
                            }
                        }
                    },
                    "fieldName": "inputs",
                    "fieldNamePath": "inputs",
                    "typeInfo": {}
                },
                "outputs": {
                    "description": "The collection of output assets and their resulting locations. Output asset declarations define the expected outputs of the process and will therefore be registered as 1st-class assets in the metadata service.",
                    "array": true,
                    "fields": {
                        "name": {
                            "description": "Name that help to identiy the asset. Needed to link the input assets to a step definition",
                            "type": "name",
                            "example": "core-video-asset",
                            "fieldName": "name",
                            "fieldNamePath": "outputs.name",
                            "typeInfo": {
                                "desc": "name",
                                "pattern": "[a-zA-Z0-9_-]+",
                                "name": "name"
                            },
                            "primary": true
                        },
                        "url": {
                            "description": "The url string",
                            "type": "string",
                            "required": true,
                            "example": "ftp://domain.com/path/file.avi",
                            "fieldName": "url",
                            "fieldNamePath": "outputs.url",
                            "typeInfo": {
                                "desc": "string",
                                "pattern": ".+",
                                "name": "string"
                            },
                            "primary": true
                        },
                        "proxyUrl": {
                            "description": "Url for the proxy server",
                            "type": "string",
                            "fieldName": "proxyUrl",
                            "fieldNamePath": "outputs.proxyUrl",
                            "typeInfo": {
                                "desc": "string",
                                "pattern": ".+",
                                "name": "string"
                            },
                            "primary": true
                        },
                        "username": {
                            "description": "Username to connect with the proxy if required",
                            "type": "string",
                            "fieldName": "username",
                            "fieldNamePath": "outputs.username",
                            "typeInfo": {
                                "desc": "string",
                                "pattern": ".+",
                                "name": "string"
                            }
                        },
                        "password": {
                            "description": "Password to connect with the proxy if required",
                            "type": "password",
                            "fieldName": "password",
                            "fieldNamePath": "outputs.password",
                            "typeInfo": {
                                "desc": "password",
                                "pattern": ".+"
                            }
                        },
                        "type": {
                            "description": "The type of content that the asset has",
                            "type": "string",
                            "default": "file",
                            "allowedValues": [
                                {
                                    "value": "file",
                                    "alternatives": [],
                                    "label": "file",
                                    "description": "file"
                                },
                                {
                                    "value": "folder",
                                    "alternatives": [],
                                    "label": "folder",
                                    "description": "folder"
                                },
                                {
                                    "value": "package.hls",
                                    "alternatives": [],
                                    "label": "package.hls",
                                    "description": "package.hls"
                                },
                                {
                                    "value": "package.ss",
                                    "alternatives": [],
                                    "label": "package.ss",
                                    "description": "package.ss"
                                },
                                {
                                    "value": "package.dash",
                                    "alternatives": [],
                                    "label": "package.dash",
                                    "description": "package.dash"
                                }
                            ],
                            "fieldName": "type",
                            "fieldNamePath": "outputs.type",
                            "allowedValueMappings": {
                                "file": "file",
                                "folder": "folder",
                                "package.hls": "package.hls",
                                "package.ss": "package.ss",
                                "package.dash": "package.dash"
                            },
                            "typeInfo": {
                                "desc": "string",
                                "pattern": ".+",
                                "name": "string"
                            }
                        }
                    },
                    "fieldName": "outputs",
                    "fieldNamePath": "outputs",
                    "typeInfo": {}
                },
                "stages": {
                    "description": "A flow is a high-level description of the work to be done by a workflow execution.It consists of a number of Stages executing in serial, parallel or a combination of both to define the workflow.\nA workflow is a declaration of the work to be done, and the sequence in which to do it. This description will be later compiled into a workplan which is what is ultimately executed. Therefore not guaranteed that the resulting workflow execution will follow the sequence described in the flow. For example, some initial stages may be added into the workplan which perform asset analysis.",
                    "array": true,
                    "fields": {
                        "name": {
                            "description": "Name to identify the Stage. The name must be unique within the workflow, otherwise a runtime error will occur.",
                            "type": "name",
                            "required": true,
                            "example": "some-stage-name",
                            "fieldName": "name",
                            "fieldNamePath": "stages.name",
                            "typeInfo": {
                                "desc": "name",
                                "pattern": "[a-zA-Z0-9_-]+",
                                "name": "name"
                            },
                            "primary": true
                        },
                        "type": {
                            "description": "Defines the type of the stage. The type indicates how the Stage should be interpreted and executed. Different stages can be executed in very different ways, and have different allowed properties.",
                            "type": "name",
                            "required": true,
                            "example": "ingest",
                            "fieldName": "type",
                            "fieldNamePath": "stages.type",
                            "typeInfo": {
                                "desc": "name",
                                "pattern": "[a-zA-Z0-9_-]+",
                                "name": "name"
                            },
                            "primary": true
                        },
                        "application": {
                            "description": "Defines a general purpose application definition",
                            "fields": {
                                "location": {
                                    "description": "Specifies the location of the application. This could be a URL, URN or some other format this is known by the executing component.",
                                    "type": "string",
                                    "fieldName": "location",
                                    "fieldNamePath": "stages.application.location",
                                    "typeInfo": {
                                        "desc": "string",
                                        "pattern": ".+",
                                        "name": "string"
                                    },
                                    "primary": true
                                },
                                "executionType": {
                                    "description": "A directive specifying how the application should be executed on the platform. This is of the format EXECUTION_ENV/APPLICATION_TYPE",
                                    "type": "string",
                                    "example": "jvm/flink",
                                    "fieldName": "executionType",
                                    "fieldNamePath": "stages.application.executionType",
                                    "typeInfo": {
                                        "desc": "string",
                                        "pattern": ".+",
                                        "name": "string"
                                    },
                                    "primary": true
                                },
                                "parameters": {
                                    "description": "A collection of parameters to be passed to the application as parameters before running.",
                                    "type": "map",
                                    "fieldName": "parameters",
                                    "fieldNamePath": "stages.application.parameters",
                                    "typeInfo": {
                                        "keys": {
                                            "pattern": "[a-zA-Z0-9]+"
                                        },
                                        "values": {
                                            "pattern": "(.+)",
                                            "desc": "scalar value or an array of scalar values"
                                        },
                                        "desc": "key-value pairs"
                                    }
                                },
                                "properties": {
                                    "description": "A collection of objects with a pair of field: name and value. They are part of a json. Each object is the path to a json node and its value.",
                                    "array": true,
                                    "fields": {
                                        "name": {
                                            "description": "path to a json node",
                                            "type": "jsonPath",
                                            "example": "root.branch.element[0].node",
                                            "fieldName": "name",
                                            "fieldNamePath": "stages.application.properties.name",
                                            "typeInfo": {
                                                "desc": "one or more jsonPath elements using dot notation",
                                                "pattern": "([a-zA-Z0-9_-]+(?:\\[\\d+\\])?)+(?:\\.[a-zA-Z0-9_-]+(?:\\[\\d+\\])?)*"
                                            },
                                            "primary": true
                                        },
                                        "value": {
                                            "description": "value of the json node",
                                            "type": "string",
                                            "example": "any text, number or boolean as string",
                                            "fieldName": "value",
                                            "fieldNamePath": "stages.application.properties.value",
                                            "typeInfo": {
                                                "desc": "string",
                                                "pattern": ".+",
                                                "name": "string"
                                            },
                                            "primary": true
                                        }
                                    },
                                    "fieldName": "properties",
                                    "fieldNamePath": "stages.application.properties",
                                    "typeInfo": {}
                                },
                                "scripts": {
                                    "description": "Code to be executed, compressed and base-64 encoded.",
                                    "type": "stringMap",
                                    "example": {
                                        "scriptable ingest script": "c2NyaXB0YWJsZSBpbmdlc3Qgc2NyaXB0"
                                    },
                                    "fieldName": "scripts",
                                    "fieldNamePath": "stages.application.scripts",
                                    "typeInfo": {
                                        "keys": {
                                            "pattern": "[a-zA-Z0-9]+"
                                        },
                                        "values": {
                                            "pattern": "(.+)",
                                            "desc": "string"
                                        },
                                        "desc": "key-value pairs",
                                        "name": "stringMap"
                                    },
                                    "primary": true
                                }
                            },
                            "fieldName": "application",
                            "fieldNamePath": "stages.application",
                            "typeInfo": {}
                        },
                        "transitions": {
                            "description": "List of transitions for this Stage which define subsequent processing Stages and their conditions for execution. No transitions are allowed for terminal Stages.",
                            "array": true,
                            "fields": {
                                "on": {
                                    "description": "Expression to evaluate in order to perform the transition",
                                    "type": "string",
                                    "required": true,
                                    "example": "${assets.size() > 0}",
                                    "fieldName": "on",
                                    "fieldNamePath": "stages.transitions.on",
                                    "typeInfo": {
                                        "desc": "string",
                                        "pattern": ".+",
                                        "name": "string"
                                    },
                                    "primary": true
                                },
                                "to": {
                                    "description": "Names of Stages to go if `on` is `true`",
                                    "type": "name",
                                    "array": true,
                                    "required": true,
                                    "fieldName": "to",
                                    "fieldNamePath": "stages.transitions.to",
                                    "typeInfo": {
                                        "desc": "name",
                                        "pattern": "[a-zA-Z0-9_-]+",
                                        "name": "name"
                                    },
                                    "primary": true
                                }
                            },
                            "fieldName": "transitions",
                            "fieldNamePath": "stages.transitions",
                            "typeInfo": {}
                        }
                    },
                    "fieldName": "stages",
                    "fieldNamePath": "stages",
                    "typeInfo": {}
                },
                "properties": {
                    "description": "A map of properties.",
                    "type": "map",
                    "fieldName": "properties",
                    "fieldNamePath": "properties",
                    "typeInfo": {
                        "keys": {
                            "pattern": "[a-zA-Z0-9]+"
                        },
                        "values": {
                            "pattern": "(.+)",
                            "desc": "scalar value or an array of scalar values"
                        },
                        "desc": "key-value pairs"
                    }
                },
                "active": {
                    "description": "Flag to indicate if the workflow is active, defaults to true",
                    "type": "boolean",
                    "default": true,
                    "example": true,
                    "fieldName": "active",
                    "fieldNamePath": "active",
                    "typeInfo": {
                        "desc": "true or false",
                        "pattern": "(?:true|false)",
                        "name": "boolean"
                    },
                    "filteredBy": [
                        "withActive"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "active",
                            "description": "filter by the active field",
                            "fieldNamePath": "active",
                            "name": "withActive",
                            "and": true,
                            "or": true,
                            "valueType": "boolean"
                        }
                    ]
                }
            },
            "filters": {
                "q": {
                    "type": "q",
                    "label": "q",
                    "description": "Search for supplied text in title",
                    "includes": [
                        "title"
                    ],
                    "name": "q",
                    "valueType": "string",
                    "text": true
                },
                "withName": {
                    "type": "with",
                    "label": "name",
                    "fieldNamePath": "name",
                    "description": "filter by the supplied name",
                    "prefix": true,
                    "name": "withName",
                    "and": true,
                    "or": true,
                    "valueType": "name"
                },
                "withTitle": {
                    "type": "with",
                    "label": "title",
                    "fieldNamePath": "title",
                    "description": "filter by the supplied title prefix",
                    "prefix": true,
                    "name": "withTitle",
                    "and": true,
                    "or": true,
                    "valueType": "string"
                },
                "withRef": {
                    "type": "with",
                    "label": "ref",
                    "fieldNamePath": "ref",
                    "description": "filter by the supplied ref",
                    "name": "withRef",
                    "and": true,
                    "or": true,
                    "valueType": "ref"
                },
                "withAlternativeIdentifiers": {
                    "type": "with",
                    "label": "alternativeIdentifiers",
                    "fieldNamePath": "alternativeIdentifiers",
                    "description": "filter by the supplied alternative identifiers",
                    "prefix": true,
                    "name": "withAlternativeIdentifiers",
                    "and": true,
                    "or": true,
                    "valueType": "stringMap"
                },
                "withTags": {
                    "type": "with",
                    "label": "tags",
                    "fieldNamePath": "tags",
                    "description": "filter by the supplied tags",
                    "name": "withTags",
                    "and": true,
                    "or": true,
                    "valueType": "string"
                },
                "withScore": {
                    "type": "with",
                    "label": "scores",
                    "fieldNamePath": "scores",
                    "description": "filter by the supplied score",
                    "range": true,
                    "name": "withScore",
                    "and": true,
                    "or": true,
                    "valueType": "scores"
                },
                "withCreatedAt": {
                    "type": "with",
                    "label": "createdAt",
                    "fieldNamePath": "createdAt",
                    "description": "filter by the supplied createdAt",
                    "range": true,
                    "name": "withCreatedAt",
                    "and": true,
                    "or": true,
                    "valueType": "timestamp"
                },
                "withCreatedBy": {
                    "type": "with",
                    "label": "createdBy",
                    "fieldNamePath": "createdBy",
                    "description": "filter by the supplied createdBy",
                    "name": "withCreatedBy",
                    "and": true,
                    "or": true,
                    "valueType": "ref"
                },
                "withUpdatedAt": {
                    "type": "with",
                    "label": "updatedAt",
                    "fieldNamePath": "updatedAt",
                    "description": "filter by the supplied updatedAt",
                    "range": true,
                    "name": "withUpdatedAt",
                    "and": true,
                    "or": true,
                    "valueType": "timestamp"
                },
                "withUpdatedBy": {
                    "type": "with",
                    "label": "updatedBy",
                    "fieldNamePath": "updatedBy",
                    "description": "filter by the supplied updatedBy",
                    "name": "withUpdatedBy",
                    "and": true,
                    "or": true,
                    "valueType": "ref"
                },
                "withDeletedAt": {
                    "type": "with",
                    "label": "deletedAt",
                    "fieldNamePath": "deletedAt",
                    "prohibited": [
                        "enduser"
                    ],
                    "description": "filter by the supplied deletedAt",
                    "range": true,
                    "name": "withDeletedAt",
                    "and": true,
                    "or": true,
                    "valueType": "timestamp"
                },
                "withDeletedBy": {
                    "type": "with",
                    "label": "deletedBy",
                    "fieldNamePath": "deletedBy",
                    "prohibited": [
                        "enduser"
                    ],
                    "description": "filter by the supplied deletedBy",
                    "name": "withDeletedBy",
                    "and": true,
                    "or": true,
                    "valueType": "ref"
                },
                "withReapAt": {
                    "type": "with",
                    "label": "reapAt",
                    "fieldNamePath": "reapAt",
                    "prohibited": [
                        "enduser",
                        "service",
                        "admin"
                    ],
                    "description": "filter by the supplied reapAt",
                    "range": true,
                    "name": "withReapAt",
                    "and": true,
                    "or": true,
                    "valueType": "timestamp"
                },
                "withActive": {
                    "type": "with",
                    "label": "active",
                    "description": "filter by the active field",
                    "fieldNamePath": "active",
                    "name": "withActive",
                    "and": true,
                    "or": true,
                    "valueType": "boolean"
                },
                "active": {
                    "type": "predefined",
                    "description": "Predefined filter for active workflows. Supplied true value will apply `withActive=true` filter and return resources with the active field set to true. False value won't apply any filter.",
                    "label": "active",
                    "values": {
                        "true": {
                            "withActive": "true"
                        }
                    },
                    "name": "active",
                    "valueType": "boolean"
                }
            },
            "relationships": {
                "executions": {
                    "description": "all executions related to this workflow",
                    "type": "indirect",
                    "resourceType": "executions",
                    "filterName": "withWorkflowRef",
                    "fields": [
                        "ref"
                    ],
                    "batchSize": 10,
                    "name": "executions",
                    "intersectable": false
                },
                "events": {
                    "description": "all events related to this workflow",
                    "type": "indirect",
                    "resourceType": "events",
                    "filterName": "withWorkflowRef",
                    "fields": [
                        "ref"
                    ],
                    "batchSize": 10,
                    "name": "events",
                    "intersectable": false
                }
            },
            "restrictions": [
                {
                    "type": "ownership",
                    "message": "must contain an owner for which you have permission",
                    "description": "users can only interact with resources that are owned by a tenant they have access to"
                },
                {
                    "type": "unmodifiable",
                    "message": "not allowed to modify resources created by root:root",
                    "description": "users are not allowed to modify resources that were created by root:root"
                },
                {
                    "type": "primaryKey",
                    "message": "primaryKey must be unique",
                    "description": "the primary key (ref) is derived from owner and name, allowing name to be a tenant specific unique external id"
                }
            ],
            "singularName": "workflow",
            "pluralName": "workflows",
            "serviceName": "workflow",
            "description": "Represents a Workflow definition that may be executed. A Workflow consists of a directed flow of Stages which can be executed sequentially or in parallel to accomplish some processing goal.",
            "conditionalUpdates": true,
            "hyphenatedPluralName": "workflows",
            "retentionPeriod": "P0D",
            "typeInfo": {}
        },
        "tenancyConfigurations": {
            "path": "/data",
            "stability": "experimental",
            "operations": {
                "browse": {
                    "description": "Fetches a list of tenancy configurations that may be filtered",
                    "actions": [
                        "workflow:tenancy-configurations:read",
                        "workflow:tenancy-configurations:read:browse"
                    ]
                },
                "get": {
                    "description": "Fetches one or more tenancy configurations using the supplied id(s)",
                    "actions": [
                        "workflow:tenancy-configurations:read",
                        "workflow:tenancy-configurations:read:get"
                    ]
                },
                "storeBatch": {
                    "description": "Stores one or more tenancy configurations, either creating or wholly replacing",
                    "actions": [
                        "workflow:tenancy-configurations:write",
                        "workflow:tenancy-configurations:write:store",
                        "workflow:tenancy-configurations:write:store:batch"
                    ],
                    "limit": 100
                },
                "storeOne": {
                    "description": "Stores the supplied tenancy configuration with the supplied id, either creating or wholly replacing",
                    "actions": [
                        "workflow:tenancy-configurations:write",
                        "workflow:tenancy-configurations:write:store",
                        "workflow:tenancy-configurations:write:store:one"
                    ]
                },
                "delete": {
                    "description": "Delete one or more tenancy configurations using the supplied id(s)",
                    "actions": [
                        "workflow:tenancy-configurations:write",
                        "workflow:tenancy-configurations:write:delete"
                    ]
                }
            },
            "pagination": {
                "pageSize": {
                    "min": 1,
                    "max": 100,
                    "default": 100
                },
                "pages": {
                    "max": 100
                }
            },
            "display": {
                "priority": 10,
                "overview": {
                    "label": "name"
                },
                "info": {
                    "primary": [
                        "ref",
                        "owner",
                        "name"
                    ],
                    "secondary": [
                        "alternativeIdentifiers",
                        "tags",
                        "custom"
                    ],
                    "history": [
                        "createdAt",
                        "createdBy",
                        "updatedAt",
                        "updatedBy",
                        "deletedAt",
                        "deletedBy",
                        "reapAt",
                        "version"
                    ]
                },
                "groups": {
                    "custom": [
                        "custom"
                    ],
                    "identity": [
                        "ref",
                        "owner",
                        "name",
                        "alternativeIdentifiers"
                    ],
                    "history": [
                        "createdAt",
                        "createdBy",
                        "updatedAt",
                        "updatedBy",
                        "deletedAt",
                        "deletedBy",
                        "reapAt",
                        "version"
                    ],
                    "tags": [
                        "tags"
                    ]
                },
                "singularName": "tenancy configuration",
                "pluralName": "tenancy configurations"
            },
            "fields": {
                "ref": {
                    "description": "The derived owner:name reference",
                    "type": "ref",
                    "readOnly": true,
                    "sort": true,
                    "example": "test:resource-name",
                    "fieldName": "ref",
                    "fieldNamePath": "ref",
                    "typeInfo": {
                        "desc": "owner:name pair",
                        "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
                        "name": "ref"
                    },
                    "filteredBy": [
                        "withRef"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "ref",
                            "fieldNamePath": "ref",
                            "description": "filter by the supplied ref",
                            "name": "withRef",
                            "and": true,
                            "or": true,
                            "valueType": "ref"
                        }
                    ],
                    "primary": true
                },
                "alternativeIdentifiers": {
                    "type": "stringMap",
                    "description": "A map of alternative identifiers for this resource",
                    "example": {
                        "tel": "0800100100",
                        "said": "something"
                    },
                    "fieldName": "alternativeIdentifiers",
                    "fieldNamePath": "alternativeIdentifiers",
                    "typeInfo": {
                        "keys": {
                            "pattern": "[a-zA-Z0-9]+"
                        },
                        "values": {
                            "pattern": "(.+)",
                            "desc": "string"
                        },
                        "desc": "key-value pairs",
                        "name": "stringMap"
                    },
                    "filteredBy": [
                        "withAlternativeIdentifiers"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "alternativeIdentifiers",
                            "fieldNamePath": "alternativeIdentifiers",
                            "description": "filter by the supplied alternative identifiers",
                            "prefix": true,
                            "name": "withAlternativeIdentifiers",
                            "and": true,
                            "or": true,
                            "valueType": "stringMap"
                        }
                    ],
                    "primary": true
                },
                "owner": {
                    "description": "The tenant owner name",
                    "type": "name",
                    "required": true,
                    "sort": true,
                    "example": "test",
                    "countable": true,
                    "fieldName": "owner",
                    "fieldNamePath": "owner",
                    "typeInfo": {
                        "desc": "name",
                        "pattern": "[a-zA-Z0-9_-]+",
                        "name": "name"
                    },
                    "primary": true
                },
                "name": {
                    "description": "The tenant specific unique name",
                    "type": "name",
                    "sort": true,
                    "example": "resource-name",
                    "fieldName": "name",
                    "fieldNamePath": "name",
                    "typeInfo": {
                        "desc": "name",
                        "pattern": "[a-zA-Z0-9_-]+",
                        "name": "name"
                    },
                    "filteredBy": [
                        "withName"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "name",
                            "fieldNamePath": "name",
                            "description": "filter by the supplied name",
                            "prefix": true,
                            "name": "withName",
                            "and": true,
                            "or": true,
                            "valueType": "name"
                        }
                    ]
                },
                "title": {
                    "description": "The title for the resource. Will be set to the value of `name` if not supplied",
                    "type": "string",
                    "sort": true,
                    "example": "resource-title",
                    "fieldName": "title",
                    "fieldNamePath": "title",
                    "typeInfo": {
                        "desc": "string",
                        "pattern": ".+",
                        "name": "string"
                    },
                    "filteredBy": [
                        "withTitle"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "title",
                            "fieldNamePath": "title",
                            "description": "filter by the supplied title",
                            "prefix": true,
                            "name": "withTitle",
                            "and": true,
                            "or": true,
                            "valueType": "string"
                        }
                    ]
                },
                "tags": {
                    "description": "tags for the resource",
                    "type": "string",
                    "array": true,
                    "example": [
                        "todo",
                        "usage:boxart"
                    ],
                    "fieldName": "tags",
                    "fieldNamePath": "tags",
                    "typeInfo": {
                        "desc": "string",
                        "pattern": ".+",
                        "name": "string"
                    },
                    "filteredBy": [
                        "withTags"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "tags",
                            "fieldNamePath": "tags",
                            "description": "filter by the supplied tags",
                            "name": "withTags",
                            "and": true,
                            "or": true,
                            "valueType": "string"
                        }
                    ]
                },
                "scores": {
                    "description": "scores for the resource",
                    "type": "scores",
                    "example": {
                        "imdb.a3431": 0.9,
                        "fuse": 2
                    },
                    "fieldName": "scores",
                    "fieldNamePath": "scores",
                    "typeInfo": {
                        "keys": {
                            "pattern": "(?:[a-zA-Z0-9]+)(?:\\.[a-zA-Z0-9]+)*"
                        },
                        "values": {
                            "desc": "number",
                            "pattern": "-?\\d+(?:\\.\\d+)?"
                        },
                        "desc": "Map of FieldNamePath:Number pairs",
                        "name": "scores"
                    },
                    "filteredBy": [
                        "withScore"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "scores",
                            "fieldNamePath": "scores",
                            "description": "filter by the supplied score",
                            "range": true,
                            "name": "withScore",
                            "and": true,
                            "or": true,
                            "valueType": "scores"
                        }
                    ]
                },
                "custom": {
                    "description": "The tenant specific custom fields.  This may be used to hold tenant specific data alongside the document, but it should not be used as a substitute for normal fields.",
                    "type": "map",
                    "max": 100,
                    "fieldName": "custom",
                    "fieldNamePath": "custom",
                    "typeInfo": {
                        "keys": {
                            "pattern": "[a-zA-Z0-9]+"
                        },
                        "values": {
                            "pattern": "(.+)",
                            "desc": "scalar value or an array of scalar values"
                        },
                        "desc": "key-value pairs"
                    }
                },
                "createdAt": {
                    "description": "The timestamp when created",
                    "type": "timestamp",
                    "readOnly": true,
                    "example": "2014-12-25T12:00:00.000Z",
                    "sort": true,
                    "excludeFromVersion": true,
                    "fieldName": "createdAt",
                    "fieldNamePath": "createdAt",
                    "filteredBy": [
                        "withCreatedAt"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "createdAt",
                            "fieldNamePath": "createdAt",
                            "description": "filter by the supplied createdAt",
                            "range": true,
                            "name": "withCreatedAt",
                            "and": true,
                            "or": true,
                            "valueType": "timestamp"
                        }
                    ]
                },
                "createdBy": {
                    "description": "The user that created",
                    "type": "ref",
                    "readOnly": true,
                    "example": "test:test-admin",
                    "sort": true,
                    "fieldName": "createdBy",
                    "fieldNamePath": "createdBy",
                    "typeInfo": {
                        "desc": "owner:name pair",
                        "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
                        "name": "ref"
                    },
                    "filteredBy": [
                        "withCreatedBy"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "createdBy",
                            "fieldNamePath": "createdBy",
                            "description": "filter by the supplied createdBy",
                            "name": "withCreatedBy",
                            "and": true,
                            "or": true,
                            "valueType": "ref"
                        }
                    ]
                },
                "updatedAt": {
                    "description": "The timestamp when last updated",
                    "type": "timestamp",
                    "readOnly": true,
                    "example": "2014-12-25T12:00:00.000Z",
                    "sort": true,
                    "excludeFromVersion": true,
                    "fieldName": "updatedAt",
                    "fieldNamePath": "updatedAt",
                    "filteredBy": [
                        "withUpdatedAt"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "updatedAt",
                            "fieldNamePath": "updatedAt",
                            "description": "filter by the supplied updatedAt",
                            "range": true,
                            "name": "withUpdatedAt",
                            "and": true,
                            "or": true,
                            "valueType": "timestamp"
                        }
                    ]
                },
                "updatedBy": {
                    "description": "The user that last updated",
                    "type": "ref",
                    "readOnly": true,
                    "example": "test:test-admin",
                    "sort": true,
                    "fieldName": "updatedBy",
                    "fieldNamePath": "updatedBy",
                    "typeInfo": {
                        "desc": "owner:name pair",
                        "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
                        "name": "ref"
                    },
                    "filteredBy": [
                        "withUpdatedBy"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "updatedBy",
                            "fieldNamePath": "updatedBy",
                            "description": "filter by the supplied updatedBy",
                            "name": "withUpdatedBy",
                            "and": true,
                            "or": true,
                            "valueType": "ref"
                        }
                    ]
                },
                "deletedAt": {
                    "description": "The timestamp when deleted (only applicable to deleted resources)",
                    "type": "timestamp",
                    "readOnly": true,
                    "example": "2014-12-25T12:00:00.000Z",
                    "sort": true,
                    "excludeFromVersion": true,
                    "fieldName": "deletedAt",
                    "fieldNamePath": "deletedAt",
                    "filteredBy": [
                        "withDeletedAt"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "deletedAt",
                            "fieldNamePath": "deletedAt",
                            "prohibited": [
                                "enduser"
                            ],
                            "description": "filter by the supplied deletedAt",
                            "range": true,
                            "name": "withDeletedAt",
                            "and": true,
                            "or": true,
                            "valueType": "timestamp"
                        }
                    ]
                },
                "deletedBy": {
                    "description": "The user that deleted (only applicable to deleted resources)",
                    "type": "ref",
                    "readOnly": true,
                    "example": "test:test-admin",
                    "sort": true,
                    "excludeFromVersion": true,
                    "fieldName": "deletedBy",
                    "fieldNamePath": "deletedBy",
                    "typeInfo": {
                        "desc": "owner:name pair",
                        "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
                        "name": "ref"
                    },
                    "filteredBy": [
                        "withDeletedBy"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "deletedBy",
                            "fieldNamePath": "deletedBy",
                            "prohibited": [
                                "enduser"
                            ],
                            "description": "filter by the supplied deletedBy",
                            "name": "withDeletedBy",
                            "and": true,
                            "or": true,
                            "valueType": "ref"
                        }
                    ]
                },
                "reapAt": {
                    "description": "The timestamp for reaping (only applicable to deleted resources)",
                    "type": "timestamp",
                    "readOnly": true,
                    "example": "2014-12-25T12:00:00.000Z",
                    "sort": true,
                    "excludeFromVersion": true,
                    "fieldName": "reapAt",
                    "fieldNamePath": "reapAt",
                    "filteredBy": [
                        "withReapAt"
                    ],
                    "filters": [
                        {
                            "type": "with",
                            "label": "reapAt",
                            "fieldNamePath": "reapAt",
                            "prohibited": [
                                "enduser",
                                "service",
                                "admin"
                            ],
                            "description": "filter by the supplied reapAt",
                            "range": true,
                            "name": "withReapAt",
                            "and": true,
                            "or": true,
                            "valueType": "timestamp"
                        }
                    ]
                },
                "version": {
                    "description": "The version hash (computed)",
                    "type": "version",
                    "readOnly": true,
                    "example": "356b54eb90cd04566159dfb9c95a0426998a2f7b",
                    "excludeFromVersion": true,
                    "fieldName": "version",
                    "fieldNamePath": "version",
                    "typeInfo": {
                        "desc": "sha1 hex encoded hash",
                        "pattern": "[a-f0-9]{40}"
                    }
                },
                "metadata": {
                    "description": "A field that holds metadata about the resource",
                    "excludeFromVersion": true,
                    "fields": {},
                    "fieldName": "metadata",
                    "fieldNamePath": "metadata",
                    "typeInfo": {}
                },
                "locales": {
                    "description": "Represents locales defined for the tenancy",
                    "fields": {
                        "codes": {
                            "description": "the locales language codes",
                            "type": "language",
                            "array": true,
                            "example": [
                                "en",
                                "en-GB",
                                "it",
                                "it-CH"
                            ],
                            "fieldName": "codes",
                            "fieldNamePath": "locales.codes",
                            "typeInfo": {
                                "desc": "languages",
                                "pattern": "[a-z]{2,3}(-[A-Z]{2})?"
                            },
                            "primary": true
                        }
                    },
                    "fieldName": "locales",
                    "fieldNamePath": "locales",
                    "typeInfo": {}
                },
                "defaultZone": {
                    "description": "The zone applied to zonable resources in this tenancy when one is not supplied by the user",
                    "type": "string",
                    "example": "us",
                    "fieldName": "defaultZone",
                    "fieldNamePath": "defaultZone",
                    "typeInfo": {
                        "desc": "string",
                        "pattern": ".+",
                        "name": "string"
                    }
                },
                "retentionPeriods": {
                    "description": "Represents deleted data retention periods",
                    "array": true,
                    "fields": {
                        "resource": {
                            "description": "the resource the retention period applies to",
                            "type": "string",
                            "allowedValues": [
                                {
                                    "value": "default",
                                    "alternatives": [],
                                    "label": "default",
                                    "description": "default"
                                },
                                {
                                    "value": "events",
                                    "alternatives": [],
                                    "label": "events",
                                    "description": "events"
                                },
                                {
                                    "value": "executions",
                                    "alternatives": [],
                                    "label": "executions",
                                    "description": "executions"
                                },
                                {
                                    "value": "flowCommands",
                                    "alternatives": [],
                                    "label": "flowCommands",
                                    "description": "flowCommands"
                                },
                                {
                                    "value": "flowExecutionReports",
                                    "alternatives": [],
                                    "label": "flowExecutionReports",
                                    "description": "flowExecutionReports"
                                },
                                {
                                    "value": "flowExecutionTransitions",
                                    "alternatives": [],
                                    "label": "flowExecutionTransitions",
                                    "description": "flowExecutionTransitions"
                                },
                                {
                                    "value": "flowExecutions",
                                    "alternatives": [],
                                    "label": "flowExecutions",
                                    "description": "flowExecutions"
                                },
                                {
                                    "value": "flowFlags",
                                    "alternatives": [],
                                    "label": "flowFlags",
                                    "description": "flowFlags"
                                },
                                {
                                    "value": "flowInstances",
                                    "alternatives": [],
                                    "label": "flowInstances",
                                    "description": "flowInstances"
                                },
                                {
                                    "value": "flowPredictions",
                                    "alternatives": [],
                                    "label": "flowPredictions",
                                    "description": "flowPredictions"
                                },
                                {
                                    "value": "flowPresets",
                                    "alternatives": [],
                                    "label": "flowPresets",
                                    "description": "flowPresets"
                                },
                                {
                                    "value": "flowTasks",
                                    "alternatives": [],
                                    "label": "flowTasks",
                                    "description": "flowTasks"
                                },
                                {
                                    "value": "flows",
                                    "alternatives": [],
                                    "label": "flows",
                                    "description": "flows"
                                },
                                {
                                    "value": "policies",
                                    "alternatives": [],
                                    "label": "policies",
                                    "description": "policies"
                                },
                                {
                                    "value": "profiles",
                                    "alternatives": [],
                                    "label": "profiles",
                                    "description": "profiles"
                                },
                                {
                                    "value": "schedulings",
                                    "alternatives": [],
                                    "label": "schedulings",
                                    "description": "schedulings"
                                },
                                {
                                    "value": "stepProfiles",
                                    "alternatives": [],
                                    "label": "stepProfiles",
                                    "description": "stepProfiles"
                                },
                                {
                                    "value": "workOrders",
                                    "alternatives": [],
                                    "label": "workOrders",
                                    "description": "workOrders"
                                },
                                {
                                    "value": "workflows",
                                    "alternatives": [],
                                    "label": "workflows",
                                    "description": "workflows"
                                }
                            ],
                            "example": "events",
                            "fieldName": "resource",
                            "fieldNamePath": "retentionPeriods.resource",
                            "allowedValueMappings": {
                                "default": "default",
                                "events": "events",
                                "executions": "executions",
                                "flowCommands": "flowCommands",
                                "flowExecutionReports": "flowExecutionReports",
                                "flowExecutionTransitions": "flowExecutionTransitions",
                                "flowExecutions": "flowExecutions",
                                "flowFlags": "flowFlags",
                                "flowInstances": "flowInstances",
                                "flowPredictions": "flowPredictions",
                                "flowPresets": "flowPresets",
                                "flowTasks": "flowTasks",
                                "flows": "flows",
                                "policies": "policies",
                                "profiles": "profiles",
                                "schedulings": "schedulings",
                                "stepProfiles": "stepProfiles",
                                "workOrders": "workOrders",
                                "workflows": "workflows"
                            },
                            "typeInfo": {
                                "desc": "string",
                                "pattern": ".+",
                                "name": "string"
                            },
                            "primary": true
                        },
                        "period": {
                            "description": "the period of time after which a deleted resource should be purged",
                            "type": "duration",
                            "example": "P1M1D",
                            "fieldName": "period",
                            "fieldNamePath": "retentionPeriods.period",
                            "typeInfo": {
                                "desc": "represents a duration of time expressed as a number of years, months, days, hours, minutes, and seconds",
                                "pattern": "-?P(?=[T\\d])(\\d+Y)?(\\d+M)?(\\d+D)?(T(?=\\d)(\\d+H)?(\\d+M)?(\\d+(\\.\\d+)?S)?)?"
                            },
                            "primary": true
                        }
                    },
                    "fieldName": "retentionPeriods",
                    "fieldNamePath": "retentionPeriods",
                    "typeInfo": {}
                }
            },
            "filters": {
                "q": {
                    "type": "q",
                    "label": "q",
                    "description": "filter by the supplied text",
                    "includes": [
                        "title"
                    ],
                    "name": "q",
                    "valueType": "string",
                    "text": true
                },
                "withName": {
                    "type": "with",
                    "label": "name",
                    "fieldNamePath": "name",
                    "description": "filter by the supplied name",
                    "prefix": true,
                    "name": "withName",
                    "and": true,
                    "or": true,
                    "valueType": "name"
                },
                "withTitle": {
                    "type": "with",
                    "label": "title",
                    "fieldNamePath": "title",
                    "description": "filter by the supplied title",
                    "prefix": true,
                    "name": "withTitle",
                    "and": true,
                    "or": true,
                    "valueType": "string"
                },
                "withRef": {
                    "type": "with",
                    "label": "ref",
                    "fieldNamePath": "ref",
                    "description": "filter by the supplied ref",
                    "name": "withRef",
                    "and": true,
                    "or": true,
                    "valueType": "ref"
                },
                "withAlternativeIdentifiers": {
                    "type": "with",
                    "label": "alternativeIdentifiers",
                    "fieldNamePath": "alternativeIdentifiers",
                    "description": "filter by the supplied alternative identifiers",
                    "prefix": true,
                    "name": "withAlternativeIdentifiers",
                    "and": true,
                    "or": true,
                    "valueType": "stringMap"
                },
                "withTags": {
                    "type": "with",
                    "label": "tags",
                    "fieldNamePath": "tags",
                    "description": "filter by the supplied tags",
                    "name": "withTags",
                    "and": true,
                    "or": true,
                    "valueType": "string"
                },
                "withScore": {
                    "type": "with",
                    "label": "scores",
                    "fieldNamePath": "scores",
                    "description": "filter by the supplied score",
                    "range": true,
                    "name": "withScore",
                    "and": true,
                    "or": true,
                    "valueType": "scores"
                },
                "withCreatedAt": {
                    "type": "with",
                    "label": "createdAt",
                    "fieldNamePath": "createdAt",
                    "description": "filter by the supplied createdAt",
                    "range": true,
                    "name": "withCreatedAt",
                    "and": true,
                    "or": true,
                    "valueType": "timestamp"
                },
                "withCreatedBy": {
                    "type": "with",
                    "label": "createdBy",
                    "fieldNamePath": "createdBy",
                    "description": "filter by the supplied createdBy",
                    "name": "withCreatedBy",
                    "and": true,
                    "or": true,
                    "valueType": "ref"
                },
                "withUpdatedAt": {
                    "type": "with",
                    "label": "updatedAt",
                    "fieldNamePath": "updatedAt",
                    "description": "filter by the supplied updatedAt",
                    "range": true,
                    "name": "withUpdatedAt",
                    "and": true,
                    "or": true,
                    "valueType": "timestamp"
                },
                "withUpdatedBy": {
                    "type": "with",
                    "label": "updatedBy",
                    "fieldNamePath": "updatedBy",
                    "description": "filter by the supplied updatedBy",
                    "name": "withUpdatedBy",
                    "and": true,
                    "or": true,
                    "valueType": "ref"
                },
                "withDeletedAt": {
                    "type": "with",
                    "label": "deletedAt",
                    "fieldNamePath": "deletedAt",
                    "prohibited": [
                        "enduser"
                    ],
                    "description": "filter by the supplied deletedAt",
                    "range": true,
                    "name": "withDeletedAt",
                    "and": true,
                    "or": true,
                    "valueType": "timestamp"
                },
                "withDeletedBy": {
                    "type": "with",
                    "label": "deletedBy",
                    "fieldNamePath": "deletedBy",
                    "prohibited": [
                        "enduser"
                    ],
                    "description": "filter by the supplied deletedBy",
                    "name": "withDeletedBy",
                    "and": true,
                    "or": true,
                    "valueType": "ref"
                },
                "withReapAt": {
                    "type": "with",
                    "label": "reapAt",
                    "fieldNamePath": "reapAt",
                    "prohibited": [
                        "enduser",
                        "service",
                        "admin"
                    ],
                    "description": "filter by the supplied reapAt",
                    "range": true,
                    "name": "withReapAt",
                    "and": true,
                    "or": true,
                    "valueType": "timestamp"
                }
            },
            "relationships": {},
            "restrictions": [
                {
                    "type": "ownership",
                    "message": "must contain an owner for which you have permission",
                    "description": "users can only interact with resources that are owned by a tenant they have access to"
                },
                {
                    "type": "unmodifiable",
                    "message": "not allowed to modify resources created by root:root",
                    "description": "users are not allowed to modify resources that were created by root:root"
                },
                {
                    "type": "primaryKey",
                    "message": "primaryKey must be unique",
                    "description": "the primary key (ref) is derived from owner and name, allowing name to be a tenant specific unique external id"
                },
                {
                    "type": "prohibited",
                    "userTypes": [
                        "enduser"
                    ],
                    "message": "endusers are not permitted to read or write tenancy configurations",
                    "description": "endusers are not permitted to read or write tenancy configurations"
                },
                {
                    "type": "readOnly",
                    "userTypes": [
                        "service"
                    ],
                    "message": "service user type are not permitted to write to tenancy configurations",
                    "description": "service user type are not permitted to write to tenancy configurations"
                },
                {
                    "description": "name must match owner",
                    "message": "name must match owner",
                    "type": "nameMatchesOwner"
                }
            ],
            "description": "Represents the tenancy configuration for the service",
            "singularName": "tenancyConfiguration",
            "pluralName": "tenancyConfigurations",
            "serviceName": "workflow",
            "hyphenatedPluralName": "tenancy-configurations",
            "conditionalUpdates": false,
            "retentionPeriod": "P0D",
            "typeInfo": {}
        }
    },
    "routes": [
        {
            "name": "root",
            "title": "root",
            "actions": [],
            "path": "/robots.txt",
            "method": "GET",
            "description": "robots.txt for search engines and crawlers",
            "stability": "stable",
            "inputs": {},
            "responses": []
        },
        {
            "name": "root",
            "title": "root",
            "actions": [],
            "path": "/",
            "method": "GET",
            "description": "Redirect '/' to '/docs'",
            "stability": "stable",
            "inputs": {},
            "responses": []
        },
        {
            "name": "flow-execution-progress",
            "title": "flow-execution-progress",
            "group": "flow-execution-progress",
            "actions": [],
            "path": "/flow-execution-progress/{flowExecutionRef}",
            "method": "GET",
            "description": "Progress endpoint",
            "auth": {
                "strategies": [
                    "sequoia"
                ],
                "mode": "required"
            },
            "inputs": {
                "headers": [
                    {
                        "type": "string",
                        "flags": {
                            "presence": "required"
                        },
                        "description": "Bearer token",
                        "examples": [
                            "Bearer d56ca6b32aa2362da6014fb17b63c38710103f71"
                        ],
                        "name": "authorization"
                    }
                ]
            },
            "responses": []
        }
    ]
}
